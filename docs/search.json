[{"path":"https://usepa.github.io/EJAM-open/articles/0_webapp.html","id":"web-app-for-the-public","dir":"Articles","previous_headings":"","what":"Web app for the public","title":"Accessing the Web App","text":"EJAM’s toolkit can used host web application. web app provides public access batches reports, rapid multisite analysis, leveraging EJAM toolkit. version designed use general public specifically configured non-expert users, include less-frequently-used, complex features. features available web app version invoked using “isPublic=FALSE.” needing even tools – full set complex analytic features – can find open source R package described .","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_webapp.html","id":"web-app-for-expert-users","dir":"Articles","previous_headings":"","what":"Web app for expert users","title":"Accessing the Web App","text":"Expert users can launch use -called “internal” version web app. specifically configured just use expert users. version developer can run locally using public code repository described .","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_webapp.html","id":"web-app-for-analysts-or-developers-using-rrstudio","dir":"Articles","previous_headings":"","what":"Web app for analysts or developers using R/RStudio","title":"Accessing the Web App","text":"EJAM software data available open source resources, anyone using R/RStudio can use EJAM computer. Analysts developers using R/RStudio option running local copy EJAM web app computer. may even faster relying hosted web app, time inactivity, customized developer. can also launch customized options use bookmarked settings (/use EJAM functions data directly without web app, complex work). can install EJAM R package datasets explained Installing EJAM R package. also Quick Start guide extensive documentation EJAM functions/tools/data. EJAM installed, can launch local web app RStudio follows: Multisite Tool configuration available via run_app(isPublic=T) version expert use available via run_app(isPublic=F) See documentation optional parameters via ?run_app() Note different running simple shiny app also package via golem package. use EJAM package function run_app() shiny::runApp().","code":"require(EJAM) # or  library(EJAM)  options(shiny.launch.browser = TRUE) # so the web app uses a browser (not the RStudio viewer)  run_app()"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/0_whatis.html","id":"ejam-is-a-web-app-but-also-a-toolkit","dir":"Articles","previous_headings":"The Environmental and Residential Population Analysis Multisite tool","what":"EJAM is a web app but also a toolkit","title":"What is EJAM?","text":"Environmental Residential Population Analysis Multisite tool web app software toolkit: EJAM can used web app, providing simple user interface lets anyone quickly see results basic analysis. EJAM powered EJScreen Multisite Tool web application. EJAM also open-source software package (local web app) developers analysts. R Package written R programming language, source code GitHub. provides functions help analysts work block group data, points, polygons, quickly aggregate compare large numbers locations.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_whatis.html","id":"what-does-it-do","dir":"Articles","previous_headings":"The Environmental and Residential Population Analysis Multisite tool","what":"What does it do?","title":"What is EJAM?","text":"EJAM lets easily quickly see residential population environmental information aggregated within across hundreds thousands places, time. Using EJAM like running community environmental/census data report, hundreds thousands places, time. can see quick summary, explore interactive maps, tables, plots, download summary report detailed spreadsheet. Locations can defined variety ways, EJAM can summarize following: Conditions near set points (e.g., proximity analysis residents near EPA-regulated facilities certain type). can provide information people live communities potentially affected industrial facilities list, example. Conditions within areas defined map (e.g., shapefile polygons/ zones based measured modeled exposure risk, cities/neighborhoods, etc.).","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_whatis.html","id":"epa-data-methods","dir":"Articles","previous_headings":"The Environmental and Residential Population Analysis Multisite tool","what":"EPA Data & Methods","title":"What is EJAM?","text":"EJAM begins residential population environmental data indicators. default indicators ones used EJScreen. uses methods EJScreen way optimized working many locations . tool runs either polygon-based proximity-based analysis location, just like EJScreen provide standard report single location, except EJAM large number locations quickly.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_whatis.html","id":"new-unique-features","dir":"Articles","previous_headings":"The Environmental and Residential Population Analysis Multisite tool","what":"New & Unique Features","title":"What is EJAM?","text":"Summarizing Across Locations EJAM can calculate aggregated summary overall environmental conditions residential population percentages average resident’s location, across populations locations. summary report lets quickly easily see residential population groups live near selected facilities within defined areas. also provides new insights environmental stressors may affect specific residential population subgroups varying degrees, near regulated sector overall individual sites. allows easy geospatial analysis move beyond looking small number indicators residential population groups, one site single permitting decision, complete picture conditions near whole set facilities focus risk analysis proposed action initiative, example. Immediate Results (Speed) Compared related GIS tools new tool provides ready--use summary report, plus flexibility, accuracy, speed tools past. website quickly provides results fly – software optimized extremely fast (allowing real-time exploratory work), still using block-population calculation EJScreen using, making consistent EJScreen always worked accurate approaches (e.g., using “areal apportionment” tracts block groups, like tools used). Easy Ways Specify Places Analyze new tool also lets one pick locations several different approaches, - specifying facility points industry categories various types (NAICS, SIC, EPA program, etc.) - providing table point locations given latitudes longitudes - using shapefiles polygons (e.g., results air quality modeling work) - selecting Census units compare, Counties. Open Source Well-Documented Extensible Software Also, data software shared reusable, well-documented functions R package, allow software developers analysts take advantage resources running analyses building supplementing tools, websites, mobile apps. Accuracy Spatial Resolution EJAM EJScreen use approach characterizing populations site, maintain consistency avoid confusion. Compared often-used approaches, EJScreen/EJAM use high-resolution buffering provide accurate information populations live inside buffer, important rural areas single blockgroup can cover large area. circular buffers, internal points Census 2020 blocks used, areal apportionment block groups, estimate residents live within block group. avoids simplistic assumption people evenly spread within block group. Instead, uses blocks get information part block group residents actually live. several million blocks US, compared fewer quarter million block groups. accurate approaches 1) use areal apportionment blocks (block groups), slow, 2) use something like 30x30 meter grid EPA developed using dasymetric estimates people live even higher resolution block, requires large amounts storage computer time. EJAM calculations also take note residences near sites, avoid double-counting people summary statistics still allow user view results one site time. something tools analyses often provide - aggregate across sites typically retain statistics individual sites, rarely ever keep track communities near multiple facilities. Keeping track also allow analyst explore many people near multiple sites, ask sites communities already multiple sites nearby. EJAM designed can provide essentially continuous distribution distances, distributed across blocks people one nearby facilities. enables exploration complete picture proximities, rather using arbitrary single distance defining near versus far. distribution can sliced later summary statistics distance, can summarized distribution distances within residential population group.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/0_whatis.html","id":"data-updates","dir":"Articles","previous_headings":"The Environmental and Residential Population Analysis Multisite tool","what":"Data Updates","title":"What is EJAM?","text":"Annual data updates synchronized EJScreen data updates main version numbers, EJScreen 2.32 (updated version released August 2024) EJAM 2.32 used data. Version 2.32 ACS 2018-2022 block group residential population data Census 2020 block weights.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"try-this-first-if-you-just-want-to-use-the-package-not-clone-edit-source-code","dir":"Articles","previous_headings":"How to install","what":"Try this first (if you just want to use the package, not clone & edit source code)","title":"Installing the EJAM R package","text":"just install package without cloning repository, can use EJAM package, edit source code, example. just install , try : remotes::install_github(repo = 'USEPA/EJAM-open', dependencies = TRUE) work, check github repository latest release use URL install package remotes::install_url()","code":"options(timeout = 300) # Just in case the download takes longer than 60 seconds if (!require(remotes)) {install.packages(\"remotes\")}"},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"loadattach-the-package","dir":"Articles","previous_headings":"","what":"load/attach the package","title":"Installing the EJAM R package","text":"use EJAM RStudio console, start loading / attaching package: need .","code":"require(EJAM) # or  library(EJAM)"},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"cloning-if-you-need-the-full-source-code-or-want-to-buildinstall-in-rstudio-on-your-own","dir":"Articles","previous_headings":"","what":"Cloning: if you need the full source code or want to build/install in RStudio on your own","title":"Installing the EJAM R package","text":"can use package just installing without cloning. However, want explore edit source code, etc., may want clone github repository EJAM source code. Note , know use R/RStudio git github, create project, build source, etc. EJAM package CRAN. Options getting full source package: One way get full source package use browser go EJAM repository page (fork repository) USEPA/EJAM-open click green “Code” button, download unzip zip file contains package. Another way get source package RStudio can click New Project, Version Control, Git, enter repository URL. third way Clone Fork package via GitHub Desktop. Regardless got full source code, need build/install package source computer using RStudio (using Build menu) using devtools package, example.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical details","title":"Installing the EJAM R package","text":"Just case need details installing attaching package works, following describes package dependencies code used package get data build index.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"details-on-cran-packages-needed-dependencies","dir":"Articles","previous_headings":"Technical details","what":"Details on CRAN packages needed (dependencies)","title":"Installing the EJAM R package","text":"anything instructions , handle package dependencies. EJAM needs number packages installed (almost ) available CRAN. Installing EJAM package explained handle obtaining packages. Cloning building/installing trying load/attach EJAM also alert packages need install don’t already . case interest, list CRAN packages needed DESCRIPTION file R package source code root folder (can found code repository). Note Suggests might want install well – using dependencies=T remotes::install_github() remotes::install_url() make sure .","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"details-on-the-automatic-data-downloads","dir":"Articles","previous_headings":"Technical details","what":"Details on the automatic data downloads","title":"Installing the EJAM R package","text":"work RStudio console, EJAM needs datasets stored part package. However, already downloaded loaded memory automatically soon use require(EJAM). first use, automatically download data files. time attached, check updates also build spatial index Census block points. Typically need download datasets , EJAM just downloads app starts (technically, R package attached) (needed case certain datasets always needed). datasets installed along package, blockgroupstats data. large files like blockpoints stored separate data repo, EJAM downloads . might want local copies, though, reasons: Attaching package actually checks copies memory first (e.g., exists(\"quaddata\", envir = globalenv())), local disk (using dataload_from_local() looking data folder (source installed) package, defined app_sys() just wrapper system.file()), finally tries download still needed, using internal functions.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/1_installing.html","id":"details-on-the-indexing-of-blocks","dir":"Articles","previous_headings":"Technical details","what":"Details on the indexing of blocks","title":"Installing the EJAM R package","text":"EJAM also needs build index 8 million US block locations (one internal point block), takes seconds. EJAM automatically attached via library() require() e.g., require(EJAM), creating object called localtree based quaddata object obtained mentioned . functions check try build index fly missing. can also (re)build manually:","code":"indexblocks()"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"a-brief-intro-to-using-ejam-in-rstudio","dir":"Articles","previous_headings":"","what":"A Brief Intro to Using EJAM in RStudio","title":"Quick Start Guide","text":"document analysts coders using EJAM R package RStudio. install EJAM R package, document explains can run EJAM analysis view results right away using R. document using EJAM web application, can launch local web app installing EJAM R package.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"load-ejam","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Load EJAM","title":"Quick Start Guide","text":"start using EJAM RStudio/R, first attach/load R package using library() require().","code":"library(EJAM)"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"analyze-places-with-ejamit","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Analyze Places with ejamit()","title":"Quick Start Guide","text":"quickly try EJAM RStudio: quickly try EJAM example input file (spreadsheet latitude longitude point) already spreadsheet point locations analyze, RStudio can just use ejamit() function without specifying locations radius – EJAM prompt select file radius. Note: file Excel file .csv file first sheet (tab) needs just table one header row (least two columns named lat lon), one row per site (point). extra rows, merged cells, etc. need examples spreadsheets (input files can try), can find ones installed EJAM package local folder, like RStudio console:","code":"# EJAM analysis of 100 places, for everyone within 3 miles out <- ejamit(testpoints_100, radius = 3)  pts <- sitepoints_from_any(c(\"30.97740, -83.36900\", \"32.51581, -86.37732\")) out2 <- ejamit(pts, radius = 2) myfile <- system.file(\"testdata/latlon/testpoints_10.xlsx\", package = \"EJAM\")  out <- ejamit(myfile, radius = 3) out <- ejamit() ## See where the folder is and see what files are there: testdata()  # or see just the latlon files: testdata(\"latlon\", quiet=T) # dir(system.file(\"testdata/latlon\", package = \"EJAM\"))"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"pick-a-radius","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Pick a Radius","title":"Quick Start Guide","text":"can specify radius miles. EJAM analyze residents within many miles point (site). Converting miles kilometers – know want analyze 5 kilometers, example, can turn miles.","code":"radius <- 3 # radius (in miles).  5 km = 3.106856 miles, 10 km = 6.2 miles 5000 / meters_per_mile #> [1] 3.106856 convert_units(5, 'km', 'miles') #> [1] 3.106856"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"map-your-sites-before-analyzing-them","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Map your sites before analyzing them","title":"Quick Start Guide","text":"creates interactive map. Click point map see popup details point.","code":"# input to EJAM pts <- testpoints_100 mapfast(pts)"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"map-results-with-ejam2map","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Map results with ejam2map()","title":"Quick Start Guide","text":"also creates interactive map. Click point map see popup details people near point.","code":"out <- testoutput_ejamit_100pts_1miles  ejam2map(out)  #> Warning in validateCoords(lng, lat, funcName): Data contains 1 rows with either #> missing or invalid lat/lon values and will be ignored #> /private/var/folders/lk/vbd6lwks15172sbnr36xrm3w0000gn/T/RtmpwSZRGL/mapfast_96b371691108.html"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"report-via-ejam2report-interactive-html-file","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Report via ejam2report() (interactive html file)","title":"Quick Start Guide","text":"","code":"out <- testoutput_ejamit_100pts_1miles  ejam2report(out)  ## OR for one site: # # y <- ejam2report(out, sitenumber = 1, analysis_title = \"Site #1\")"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"table-of-results-in-rstudio-console","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Table of Results in RStudio console","title":"Quick Start Guide","text":"alternative pdf report created ejam2report(), gives quick, simple list results indicators:","code":"ejam2table_tall(out) ejam2table_tall(out, sitenumber = 1)"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"barplot","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"Barplot","title":"Quick Start Guide","text":"","code":"out <- testoutput_ejamit_100pts_1miles  # Check long list of indicators for any that are elevated  ejam2barplot(out,              varnames = names_these_ratio_to_avg,              main = \"Envt & Demog Indicators at Selected Sites Compared to State Averages\")  ejam2barplot(out,              varnames = names_these_ratio_to_state_avg,              main = \"Envt & Demog Indicators at Selected Sites Compared to State Averages\")   # residential population data only  # vs nationwide avg ejam2barplot(testoutput_ejamit_100pts_1miles)  # vs statewide avg ejam2barplot(testoutput_ejamit_1000pts_1miles,              varnames = c(names_d_ratio_to_state_avg, names_d_subgroups_ratio_to_state_avg),              main = \"Residential population group percentages at Selected Sites Compared to State Averages\")   # Environmental only  ejam2barplot(testoutput_ejamit_100pts_1miles,              varnames = c(names_e_ratio_to_avg, names_e_ratio_to_state_avg),              main = \"Environmental Indicators at Selected Sites Compared to Averages\") # see more examples at ?ejam2barplot"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"view-results-spreadsheet-via-ejam2excel-to-launch-excel","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio","what":"View Results Spreadsheet via ejam2excel() (to Launch Excel)","title":"Quick Start Guide","text":"","code":"out <- testoutput_ejamit_100pts_1miles ejam2excel(out, launchexcel = T, save_now = F)"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"save-results-as-a-spreadsheet-file","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio > View Results Spreadsheet via ejam2excel() (to Launch Excel)","what":"Save Results as a Spreadsheet file","title":"Quick Start Guide","text":"","code":"ejam2excel(out, save_now = T)"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"use-one-point","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio > More about points","what":"Use one point","title":"Quick Start Guide","text":"","code":"pts <- data.frame(lon = -92.380556, lat = 31.316944)"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"use-a-few-points","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio > More about points","what":"Use a few points","title":"Quick Start Guide","text":"","code":"pts <- sitepoints_from_any(c(   \"34.8799123, -92.1\",   \"30.2906971, -91.8\",   \"30,         -95\" )) ## or pts  <- data.frame(   lon = c(-92.1,      -91.8),    lat = c(34.8799123, 30.2906971) )  pts #>     lon      lat #> 1 -92.1 34.87991 #> 2 -91.8 30.29070"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"create-a-random-sample-of-points-representative-of-the-average-facility-average-resident-or-average-area","dir":"Articles","previous_headings":"A Brief Intro to Using EJAM in RStudio > More about points","what":"Create a random sample of points representative of the average facility, average resident, or average area","title":"Quick Start Guide","text":"can create set random points function testpoints_n() can weighted represent average resident, average regulated facility, average point map weighted square meters, etc. See details documentation function testpoints_n(). Create random test data points States LA TX","code":"# p1k <- testpoints_n(1000) # mapfast(p1k)  mapfast(testpoints_n(300, ST = c('LA','TX'), weighting = 'bg'), radius = 0.1)  #> Including only these States: #>   REGION ST statename #> 1      6 LA Louisiana #> 2      6 TX     Texas # weighting = \"frs\" better represents regulated facilities, # but requires loading the (large) frs dataset"},{"path":"https://usepa.github.io/EJAM-open/articles/2_quickstart.html","id":"documentation-of-functions-and-data","dir":"Articles","previous_headings":"","what":"Documentation of Functions and Data","title":"Quick Start Guide","text":"README Function Reference Document RStudio, see ?EJAM","code":"?EJAM # or  help(\"EJAM\", package='EJAM')  ?ejamit()"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"running-a-basic-analysis","dir":"Articles","previous_headings":"","what":"Running a Basic Analysis","title":"Using EJAM for Analysis in R","text":"run_app() launches web app locally (run RStudio single computer rather server) ejamit() provides results just one function (already list places analyze), shown Quick Start Guide","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"tools-for-exploring-results","dir":"Articles","previous_headings":"","what":"Tools for Exploring Results","title":"Using EJAM for Analysis in R","text":"standard analysis, basic tools like ejam2report(), ejam2excel(), ejam2map(), etc. let explore results, shown Quick Start Guide. want ways visualize dig results, examples provided sections EXPLORING RESULTS VISUALIZATION FINDINGS (PLOTS). example, can check groups facilities notable findings.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"tools-for-selecting-locations-to-analyze","dir":"Articles","previous_headings":"","what":"Tools for Selecting Locations to Analyze","title":"Using EJAM for Analysis in R","text":"EJAM offers variety ways specify places analyzed compared. web app helps select locations several ways. working RStudio, already identified points areas analyze, ejamit() function accept 1) point coordinates, 2) shapefile, 3) list FIPS codes. However, first need get points (lat, lon values), need -depth, custom approach finding facilities Census places analyze, several groups functions help , shown examples . also shown EJAM package reference manual, category. can specify locations analysis variety ways: Near point: Analyze residents & area NEAR POINT (PROXIMITY ANALYSIS) Latitude Longitude Facilities ID can defined Facility, using EPA Registry ID Facility, using EPA Program System ID Facilities Type can defined Industry (NAICS) EPA Regulatory Program MACT Subpart (hazardous air pollutant source category) Within polygon: Specify areas size shape analyze residents within polygon/zone/area (based shapefiles Census FIPS codes) within areas zones map GIS data SHAPEFILES - Polygons (shapefiles) example define redlining zones, higher risk areas based modeling, etc. within Census units like cities Counties defined using FIPS CODES - Census Units Counties types Census Units defined FIPS code (e.g., Counties one State).","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"latitude-and-longitude","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS)","what":"Latitude and Longitude","title":"Using EJAM for Analysis in R","text":"can define locations residents within X miles one specified points, can define points ways. One way upload table coordinates – latitude longitude point, one row per site, columns called lat lon (synonyms work). also detailed functions working latlon coordinates. simplest way RStudio console something like x <- ejamit(), prompts upload spreadsheet lat lon columns, asks radius. explained , can get latitudes longitudes EPA-regulated facilities want specify set facilities uploading Registry ID numbers table, using identifiers. example, function latlon_from_programid() examples . can also get coordinates ways, NAICS (SIC) industry names codes, EPA program covering set facilities (e.g., greenhouse gas reporters), Clean Air Act MACT subpart.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"facilities-by-id","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS)","what":"Facilities by ID","title":"Using EJAM for Analysis in R","text":"EPA-regulated facilities can found Facility Registry Services identification number. See list functions related EPA IDs","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"by-facility-using-epa-registry-id","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Facilities by ID","what":"by Facility, using EPA Registry ID","title":"Using EJAM for Analysis in R","text":"","code":"# note frs_from_regid() and latlon_from_regid() require the frs dataset, which they try to load on demand.  frs_from_regid(c(110071293460, 110000333826)) frs_from_regid(testinput_regid)  ## upload file with table of REGISTRY_ID values testdata(\"regi\", quiet = T) # to see sample files available with package x1 <- latlon_from_regid(   read_csv_or_xl(testdata(\"testinput_registry_id_8.xlsx\", quiet = TRUE))$REGISTRY_ID   )  ## interactively upload your own file with table of REGISTRY_ID values ## (must specify the right column name) x2 <- latlon_from_regid(read_csv_or_xl()$REGISTRY_ID)  ## and run regids through EJAM y <- ejamit(x1, radius = 1)"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"by-facility-using-epa-program-system-id","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Facilities by ID","what":"by Facility, using EPA Program System ID","title":"Using EJAM for Analysis in R","text":"","code":"# latlon_from_programid() requires access to the frs_by_programid dataset, which it tries to load on demand if necessary.  if (exists(\"frs_by_programid\")) {   latlon_from_programid(c(\"XJW000012435\", \"00768SRTRSROAD1\")) } #> NULL"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"facilities-by-type","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS)","what":"Facilities by Type","title":"Using EJAM for Analysis in R","text":"See list functions related type facility (NAICS/SIC/Program/MACT)","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"by-industry-naics","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Facilities by Type","what":"by Industry (NAICS)","title":"Using EJAM for Analysis in R","text":"can specify sites NAICS, important note FRS lacks NAICS info many regulated facilities! See many examples Working NAICS Codes (Industry Codes), section . Functions related NAICS/SIC codes","code":"naics_from_any(\"paint and coating\", children = T)  #>      code     n2     n3     n4     n5     n6                            name #>     <num> <char> <char> <char> <char> <char>                          <char> #> 1:  32551     32    325   3255  32551  32551 Paint and Coating Manufacturing #> 2: 325510     32    325   3255  32551 325510 Paint and Coating Manufacturing #> 3: 325510     32    325   3255  32551 325510 Paint and Coating Manufacturing #>                                    num_name #>                                      <char> #> 1:  32551 - Paint and Coating Manufacturing #> 2: 325510 - Paint and Coating Manufacturing #> 3: 325510 - Paint and Coating Manufacturing ## note latlon_from_naics() requires the frs_by_naics dataset, which it tries to load on demand.  # head(latlon_from_naics(325510))  # has about 1,000 facilities   # # All sectors with this phrase in their NAICS title #  #  x <- ejamit(frs_from_naics(\"paint and coating\"), 1)}"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"by-epa-regulatory-program","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Facilities by Type","what":"by EPA Regulatory Program","title":"Using EJAM for Analysis in R","text":"See list functions related EPA programs","code":"# note latlon_from_programid() requires the frs and frs_by_programid datasets, which it tries to load on demand. if (exists(\"frs_by_programid\") && exists(\"frs\")) {      ## Map of over 10,000 facilities in FRS identified as in the E-Grid power plant database      pts <- latlon_from_program(\"EGRID\")[, 1:4]   mapfast(pts)      ## In just 1 State   pts[, ST := state_from_latlon(lat = lat, lon = lon)$ST]   mapfast(pts[ST == \"TX\", ], radius = 1)      ## Largest lists      epa_programs_counts <- frs_by_programid[, .N, by = \"program\"][order(N), ]   epa_programs_counts[order(-N), ][1:25, ] } #> frs_by_programid_arrow  is loading from local folder ...done. #> frs_arrow   is loading from local folder ...done. #>           program      N #>            <char>  <int> #>  1:      RCRAINFO 525432 #>  2:         NPDES 402713 #>  3:      NJ-NJEMS 244524 #>  4: CA-ENVIROVIEW 197336 #>  5:          ICIS 159152 #>  6:           AIR 133720 #>  7:      MN-TEMPO 126754 #>  8:           FIS 122472 #>  9:           EIS 119146 #> 10:   TX-TCEQ ACR 108124 #> 11:      AIRS/AFS 100399 #> 12:      OSHA-OIS  84815 #> 13:          NCDB  70771 #> 14:          ACES  65326 #> 15:      IDNR_EFD  45956 #> 16:        OR-DEQ  42393 #> 17:          SFDW  41363 #> 18:      IN-TEMPO  39951 #> 19:       WA-FSIS  38520 #> 20:         ACRES  35578 #> 21:       AZURITE  35123 #> 22:       OH-CORE  34502 #> 23:           FDM  34286 #> 24:      MA-EPICS  34159 #> 25:          TRIS  33268 #>           program      N"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"by-mact-subpart-hazardous-air-pollutant-source-category","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Facilities by Type","what":"by MACT Subpart (hazardous air pollutant source category)","title":"Using EJAM for Analysis in R","text":"Functions related MACT codes","code":"# note latlon_from_mactsubpart() requires the frs_by_mact dataset, which it tries to load on demand if (exists(\"frs_by_mact\")) {      # Search by name of category   mact_table[grepl(\"ethylene\", mact_table$title, ignore.case = T), ]   eto <- rbind(     latlon_from_mactsubpart(\"O\" ),      latlon_from_mactsubpart(\"WWWWW\")   )   #  Map the category   mapfast(eto)         # Browse the full list of categories   # mact_table[ , c(\"N\", \"subpart\", \"title\")]      # The 10 largest categories   tail(mact_table[order(mact_table$N), c(\"N\", \"subpart\", \"title\")], 10)      # Many facilities lack latitude longitude information in this database   nrow(latlon_from_mactsubpart(\"A\", include_if_no_latlon = TRUE))   nrow(latlon_from_mactsubpart(\"A\", include_if_no_latlon = FALSE))      head(latlon_from_mactsubpart(\"OOOO\"), 2) } #> frs_by_mact_arrow  is loading from local folder ...done. #>     programid subpart #>        <char>  <char> #> 1: 0500100022    OOOO #> 2: 06111R9011    OOOO #>                                                         title #>                                                        <char> #> 1: PRINTING, COATING AND DYEING OF FABRICS AND OTHER TEXTILES #> 2: PRINTING, COATING AND DYEING OF FABRICS AND OTHER TEXTILES #>                                                       dropdown_label      lat #>                                                               <char>    <num> #> 1: OOOO - Printing, Coating And Dyeing Of Fabrics And Other Textiles 34.27496 #> 2: OOOO - Printing, Coating And Dyeing Of Fabrics And Other Textiles 34.22082 #>           lon  REGISTRY_ID      PGM_SYS_ACRNMS  program #>         <num>       <char>              <char>   <char> #> 1:  -91.34179 110025082924 AIRS/AFS:0500100022 AIRS/AFS #> 2: -119.02272 110043415578 AIRS/AFS:06111R9011 AIRS/AFS"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"naics-codes-to-map-or-analyze-facilities-in-one-industrial-sector","dir":"Articles","previous_headings":"NEAR EACH POINT (PROXIMITY ANALYSIS) > Working with NAICS Codes (Industry Codes)","what":"NAICS Codes to Map or Analyze Facilities in one Industrial Sector","title":"Using EJAM for Analysis in R","text":"Overview NAICS / industry categories, n-digit level Find NAICS codes, name industry Find industry names, NAICS codes Count facilities NAICS code Find facilities, name industry Quick map EPA-regulated facilities one industrial category, can click see popup windows sites. (note FRS dataset lacks NAICS facilities!) Table facilities industry, plus links facility ECHO EJScreen Map facilities industry, plus popups links facility ECHO EJScreen Facilities searches using industry codes text industry names NAICS code can many “children” subcategories ","code":"# see NAICS categories at the top (2-digit) level  naics_categories()  # see NAICS categories at the 3-digit level  # sorted alphabetical naics_from_any(naics_categories(3))[order(name),.(name,code)][1:10,] # sorted by code naics_from_any(naics_categories(3))[order(code),.(code,name)][1:10,] naics_from_any('paint') # get name from one code naics_from_code(336)$name  # get the name from each code naics_from_code(mycode)$name mycode = c(33611, 336111, 336112)  # see counts of facilities by code (parent) and subcategories (children) naics_counts[NAICS %in% mycode, ]  # see parent codes that contain each code naicstable[code %in% mycode, ] # See a data table of facilities in one industry dataload_dynamic(\"frs\") #> Loading arrow datasets: frs #> looking for frs in memory... #> NULL # if (exists(\"frs\")) {   industryword <- \"pulp\"      head( frs_from_naics(naics_from_any(industryword)$code)[,1:4] ) #>         lat       lon  REGISTRY_ID                       PRIMARY_NAME #>       <num>     <num>       <char>                             <char> #> 1: 42.60008 -72.37838 110000308612                 ERVING PAPER MILLS #> 2: 42.61366 -71.63378 110000308881               HOLLINGSWORTH & VOSE #> 3: 42.74216 -73.69249 110000324426       LYDALLTHERMAL/ACOUSTICAL INC #> 4: 43.55572 -76.09925 110000325443   FELIX SCHOELLER TECHNICAL PAPERS #> 5: 43.97535 -75.90653 110000325988          KNOWLTON TECHNOLOGIES LLC #> 6: 44.22767 -74.99753 110000326120 NEWTON FALLS LAND RECLAMATION, LLC # } # note frs_from_naics() requires the frs dataset # frs_from_naics() is slow the 1st time if it has not yet loaded the frs dataset if (!exists(\"frs_arrow\")) { # a more efficient format   dataload_dynamic(\"frs\", return_data_table = FALSE, silent = TRUE) }  mapfast(frs_from_naics(\"smelt\")) industryword <- \"chemical manuf\" #  industryword <- \"smelt\" # if (exists(\"frs\") && exists(\"frs_by_naics\")) {   mysites <- frs_from_naics(industryword, children = FALSE)[,1:5]      regids <- mysites$REGISTRY_ID   link1 <- url_echo_facility_webpage(regids, as_html = T)   link2 <- url_ejscreen_report(lat = mysites$lat, lon = mysites$lon, radius = 3, as_html = T)   link3 <- url_ejscreenmap(lat = mysites$lat, lon = mysites$lon,  as_html = T)   # # same:   # my_industry <- naics_from_any(\"chemical manuf\",children = F)[,.(code,name)]   # mysites <- frs_from_naics(my_industry$code)[,1:5]   mysites <- cbind(`ECHO report` = link1,                     `EJScreen Report` = link2, `EJScreen Map` = link3,                    mysites)   caption = paste0(nrow(mysites), ' sites have NAICS matching \"', industryword, '\"')   if (nrow(mysites) > 1500) {mysites <- mysites[1:1500, ]} # >2k rows is too much for client-side DataTables   cat(caption,'\\n')      print(     DT::datatable(       mysites[1:5, ],       escape = FALSE,     rownames = FALSE,       caption = caption,       filter = \"top\"     )   ) # } mapfast(mysites) naics_from_any(\"plastics and rubber\")  #>     code     n2     n3     n4     n5     n6 #>    <num> <char> <char> <char> <char> <char> #> 1:   326     32    326    326    326    326 #>                                          name #>                                        <char> #> 1: Plastics and Rubber Products Manufacturing #>                                            num_name #>                                              <char> #> 1: 326 - Plastics and Rubber Products Manufacturing  naics_from_any(326) #>     code     n2     n3     n4     n5     n6 #>    <num> <char> <char> <char> <char> <char> #> 1:   326     32    326    326    326    326 #>                                          name #>                                        <char> #> 1: Plastics and Rubber Products Manufacturing #>                                            num_name #>                                              <char> #> 1: 326 - Plastics and Rubber Products Manufacturing  head(naics_from_any(326, children = T)[,.(code,name)]) #>      code #>     <num> #> 1:    326 #> 2:   3261 #> 3:  32611 #> 4: 326111 #> 5: 326112 #> 6: 326113 #>                                                                         name #>                                                                       <char> #> 1:                                Plastics and Rubber Products Manufacturing #> 2:                                            Plastics Product Manufacturing #> 3: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 4:                                      Plastics Bag and Pouch Manufacturing #> 5:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #> 6:      Unlaminated Plastics Film and Sheet (except Packaging) Manufacturing  naics_from_any(\"pig\")  #>      code     n2     n3     n4     n5     n6 #>     <num> <char> <char> <char> <char> <char> #> 1:   1122     11    112   1122   1122   1122 #> 2:  11221     11    112   1122  11221  11221 #> 3: 112210     11    112   1122  11221 112210 #> 4:  32513     32    325   3251  32513  32513 #> 5: 325130     32    325   3251  32513 325130 #>                                       name #>                                     <char> #> 1:                     Hog and Pig Farming #> 2:                     Hog and Pig Farming #> 3:                     Hog and Pig Farming #> 4: Synthetic Dye and Pigment Manufacturing #> 5: Synthetic Dye and Pigment Manufacturing #>                                            num_name #>                                              <char> #> 1:                       1122 - Hog and Pig Farming #> 2:                      11221 - Hog and Pig Farming #> 3:                     112210 - Hog and Pig Farming #> 4:  32513 - Synthetic Dye and Pigment Manufacturing #> 5: 325130 - Synthetic Dye and Pigment Manufacturing naics_from_any(\"pig \") # space after g #>      code     n2     n3     n4     n5     n6                name #>     <num> <char> <char> <char> <char> <char>              <char> #> 1:   1122     11    112   1122   1122   1122 Hog and Pig Farming #> 2:  11221     11    112   1122  11221  11221 Hog and Pig Farming #> 3: 112210     11    112   1122  11221 112210 Hog and Pig Farming #>                        num_name #>                          <char> #> 1:   1122 - Hog and Pig Farming #> 2:  11221 - Hog and Pig Farming #> 3: 112210 - Hog and Pig Farming  # a OR b,  a AND b,  etc. a = naics_from_any(\"plastics\")  b = naics_from_any(\"rubber\")  library(data.table) data.table::fintersect(a,b)[,.(name,code)] #  a AND b #>                                                   name   code #>                                                 <char>  <num> #> 1:          Plastics and Rubber Products Manufacturing    326 #> 2: Rubber and Plastics Hoses and Belting Manufacturing  32622 #> 3: Rubber and Plastics Hoses and Belting Manufacturing 326220  head(data.table::funion(a,b)[,.(name,code)])     #  a OR  b #>                                                                         name #>                                                                       <char> #> 1:                                 Plastics Material and Resin Manufacturing #> 2:                                Plastics and Rubber Products Manufacturing #> 3:                                            Plastics Product Manufacturing #> 4: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 5:                                      Plastics Bag and Pouch Manufacturing #> 6:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #>      code #>     <num> #> 1: 325211 #> 2:    326 #> 3:   3261 #> 4:  32611 #> 5: 326111 #> 6: 326112  # naics_subcodes_from_code(funion(a,b)[,code])[,.(name,code)]   #  plus children  head(naics_from_any(funion(a,b)[,code], children = T)[,.(name,code)] ) #  same #>                                                                         name #>                                                                       <char> #> 1:                                Plastics and Rubber Products Manufacturing #> 2:                                            Plastics Product Manufacturing #> 3: Plastics Packaging Materials and Unlaminated Film and Sheet Manufacturing #> 4:                                      Plastics Bag and Pouch Manufacturing #> 5:     Plastics Packaging Film and Sheet (including Laminated) Manufacturing #> 6:      Unlaminated Plastics Film and Sheet (except Packaging) Manufacturing #>      code #>     <num> #> 1:    326 #> 2:   3261 #> 3:  32611 #> 4: 326111 #> 5: 326112 #> 6: 326113 dataload_dynamic(c(\"frs\", \"frs_by_naics\")) #> Loading arrow datasets: frs, frs_by_naics #> looking for frs, frs_by_naics in memory... #> NULL if (exists(\"frs\") & exists(\"frs_from_naics\")) {      NROW(naics_from_any(\"chem\"))   # about 20   NROW(naics_from_any(\"chem\", children = T))   # >100   NROW(frs_from_naics(naics_from_any(\"chem\")$code))   # a few thousand   NROW(frs_from_naics(naics_from_any(\"chem\", children = T)$code))   # >10,000 } #> [1] 13560"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"polygons-in-shapefiles-as-the-places-to-compare","dir":"Articles","previous_headings":"SHAPEFILES","what":"Polygons in shapefiles as the places to compare","title":"Using EJAM for Analysis in R","text":"can upload polygons shapefile, use EJAM analyze . See Shiny app. See shapefile_from_any() shapefile-related functions:","code":"shapefile_from_any()  shapefile_from_sitepoints() shape_buffered_from_shapefile() shape_buffered_from_shapefile_points()  shp1 <- shapefile_from_gdbzip(system.file(\"testdata/shapes/portland.gdb.zip\", package = \"EJAM\"))"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"counties-as-the-places-to-compare","dir":"Articles","previous_headings":"FIPS CODES","what":"Counties as the places to compare","title":"Using EJAM for Analysis in R","text":"can compare places defined FIPS code, group US Counties. See list functions working Census FIPS codes. Compare Counties State, using EJAM indicators","code":"# Get FIPS of each county in Delaware mystate <- \"Delaware\" cfips <- fips_counties_from_statename(mystate)  ## You could launch a web browser tab for each of the counties, ##  to see each of the County reports from EJScreen, like this: # # sapply(url_ejscreen_report(areaid = cfips), browseURL)  ## Analyze EJ stats for each county in the State  x <- ejamit(fips = cfips) # radius not used DT::datatable(x$results_bysite, escape = F)  ejam2table_tall(x)  t(x$results_bysite[ , c(   'ejam_uniq_id', 'pop', names_d_subgroups_ratio_to_state_avg), with = F])  mapfastej_counties(x$results_bysite)  cnames <- fips2countyname(x$results_bysite$ejam_uniq_id) #cnames <- c(\"Kent County\", \"New Castle County\", \"Sussex County\") #cnames <- gsub(\" County\", \"\", cnames)  barplot(x$results_bysite$pctlowinc, names.arg = cnames,         main = paste0('% Low Income by County in ', mystate))  # Another example mystate <- \"Maryland\" vname <- \"% low income\" xmd <- ejamit(fips = fips_counties_from_statename(mystate)) ggblanket::gg_col(data = xmd$results_bysite,                   y = pctlowinc,                   x = ejam_uniq_id,                   title = paste0(vname, ' by County in ', mystate),                   y_title = vname )  mapfastej_counties(xmd$results_bysite, 'state.pctile.pctlowinc')"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"exploring-results","dir":"Articles","previous_headings":"","what":"EXPLORING RESULTS","title":"Using EJAM for Analysis in R","text":"See also functions mapping. functions seeing plots/graphics functions seeing tables results","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"the-most-striking-findings-e-g--which-group-is-most-over-represented","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"The most striking findings (e.g., which group is most over-represented?)","title":"Using EJAM for Analysis in R","text":"See examples using ejam2report() also can check key findings like :","code":"out <- testoutput_ejamit_1000pts_1miles  bysite <- out$results_bysite bysite <- setDF(copy(bysite)) ratio_benchmarks <- c(1.01, 1.50, 2, 3, 5, 10) ratiodata <- bysite[, names_d_ratio_to_state_avg]  findings <- count_sites_with_n_high_scores(ratiodata, quiet = TRUE)  # long output to console !  tail(findings$text[findings$text != \"\"], 1) # the most extreme finding! #> [1] \"At at least 2% of these sites, 1 of the indicators is 5 times the average \""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"the-key-facilities-e-g--which-has-the-max-of-or-has-multiple-elevated-summary-indexes","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"The key facilities (e.g., which has the max of – or has multiple elevated – Summary Indexes?)","title":"Using EJAM for Analysis in R","text":"","code":"out2 <- ejamit(   sitepoints =  testpoints_100,   radius = 3.1 ) x <- out2$results_summarized$cols x <- x[order(x[,1], decreasing = T), ] head(x, 3) cat(\"\\n\") x <- x[order(x[,2], decreasing = T), ] head(x, 3)"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"more-summary-findings","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"More summary findings","title":"Using EJAM for Analysis in R","text":"","code":"dimnames(findings) #> NULL findings$text[2] #> [1] \"At at least 92% of these sites, 1 of the indicators is 1.01 times the average \" head(findings$stats[ , , 1], 15) #>      cut #> count 1.01   2   5  10 #>     0   78 708 977 997 #>     1  182 171  23   3 #>     2  154  60   0   0 #>     3  124  31   0   0 #>     4   96  19   0   0 #>     5   79   7   0   0 #>     6   89   3   0   0 #>     7  114   1   0   0 #>     8   83   0   0   0 #>     9    1   0   0   0 head(findings$stats[ , 1, ], 21) #>      stat #> count count  cum pct cum_pct #>     0    78 1000   8     100 #>     1   182  922  18      92 #>     2   154  740  15      74 #>     3   124  586  12      59 #>     4    96  462  10      46 #>     5    79  366   8      37 #>     6    89  287   9      29 #>     7   114  198  11      20 #>     8    83   84   8       8 #>     9     1    1   0       0 x = findings$stats[ , 1, ]  x[x[, \"cum_pct\"] >= 50 & x[, \"cum_pct\"] <= 80, ] #>      stat #> count count cum pct cum_pct #>     2   154 740  15      74 #>     3   124 586  12      59 findings$stats[ 1, , ] #>       stat #> cut    count  cum pct cum_pct #>   1.01    78 1000   8     100 #>   2      708 1000  71     100 #>   5      977 1000  98     100 #>   10     997 1000 100     100"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"local-features-and-special-areas-schools-hospitals-nonattainment-areas-etc-","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"Local features and special areas – schools, hospitals, nonattainment areas, etc.","title":"Using EJAM for Analysis in R","text":"ejamit() also provides special summary statistics related group indicators count features like schools within blockgroup, overlaps specially-designated areas nonattainment areas, lack critical services like health insurance. See help batch.summarize() details. function ejam2areafeatures() just convenient way see information ejamit()$results_summarized$flagged_areas created batch.summarize(), used ejamit(), indicators lists: names_featuresinarea names_flag names_criticalservice","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"summary-of-whether-residents-at-the-analyzed-locations-are-more-likely-to-have-certain-types-of-features-schools-or-special-areas-tribal-nonattainment-etc-","dir":"Articles","previous_headings":"EXPLORING RESULTS > Local features and special areas – schools, hospitals, nonattainment areas, etc.","what":"Summary of whether residents at the analyzed locations are more likely to have certain types of features (schools) or special areas (Tribal, nonattainment, etc.)","title":"Using EJAM for Analysis in R","text":"Table Plots showing whether residents analyzed locations likely certain types features special areas view special ratios, since main table ejamit()$results_bysite, can reformat plotting like :","code":"## out1k <- ejamit(testpoints_1000, radius = 1) out1k <- testoutput_ejamit_1000pts_1miles ejam2areafeatures(out1k) #>                                                    Indicator #> 1                                                Any schools #> 2                                              Any hospitals #> 3                                      Any places of worship #> 4                                    Overlapping with Tribes #> 5                      Overlapping with Non-Attainment Areas #> 6                           Overlapping with Impaired Waters #> 7           Overlapping with CJEST Disadvantaged Communities #> 8         Overlapping with EPA IRA Disadvantaged Communities #> 9                Overlapping with Housing Burden Communities #> 10 Overlapping with Transportation Disadvantaged Communities #> 11                        Overlapping with Food Desert Areas #> 12                   % Households without Broadband Internet #> 13                     % Households without Health Insurance #>    Percent_of_these_Sites Percent_of_these_People #> 1                    76.4                    29.4 #> 2                    30.0                     5.4 #> 3                    75.9                    34.6 #> 4                     2.7                     0.2 #> 5                    57.7                    81.3 #> 6                    89.2                    41.0 #> 7                    50.5                    40.9 #> 8                    65.5                    51.8 #> 9                    27.6                    28.1 #> 10                   89.5                    58.8 #> 11                   50.6                    14.3 #> 12                   12.4                    10.9 #> 13                    2.8                     3.8 #>    Percent_of_all_People_Nationwide ratio                rname #> 1                              31.3  0.94           num_school #> 2                               4.6  1.17         num_hospital #> 3                              38.8  0.89           num_church #> 4                               1.6  0.12         yesno_tribal #> 5                              57.2  1.42      yesno_airnonatt #> 6                              56.7  0.72      yesno_impwaters #> 7                              32.3  1.27       yesno_cejstdis #> 8                              42.8  1.21         yesno_iradis #> 9                              12.5  2.25    yesno_houseburden #> 10                             69.5  0.85       yesno_transdis #> 11                             25.0  0.57     yesno_fooddesert #> 12                             11.5  0.95       pctnobroadband #> 13                              3.4  1.12 pctnohealthinsurance ## out <- ejamit(testpoints_1000, radius = 1) out <- testoutput_ejamit_1000pts_1miles  ## simple barplot on special areas and features like schools:  ejam2barplot_areafeatures(out1k) ## note the sitenumber param is not supported for these stats"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"site-by-site-detailed-results-in-datatable-format-in-rstudio-viewer","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"Site by site detailed results in datatable format in RStudio viewer:","title":"Using EJAM for Analysis in R","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles DT::datatable(out2$results_bysite[1:5,   ], escape = FALSE, rownames = FALSE)  # To see all 1,000 sites in table: #DT::datatable(out2$results_bysite[1:1000, ], escape = FALSE, rownames = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"overall-results-for-a-few-key-indicators-as-raw-output-in-console","dir":"Articles","previous_headings":"EXPLORING RESULTS > Site by site detailed results in datatable format in RStudio viewer:","what":"Overall results for a few key indicators, as raw output in console:","title":"Using EJAM for Analysis in R","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles  names(out2) #> [1] \"results_overall\"                     \"results_bysite\"                      #> [3] \"results_bybg_people\"                 \"longnames\"                           #> [5] \"count_of_blocks_near_multiple_sites\" \"results_summarized\"                  #> [7] \"formatted\"                           \"sitetype\" cbind(overall = as.list( out2$results_overall[ , ..names_d])) #>                  overall    #> Demog.Index      1.676867   #> Demog.Index.Supp 1.693936   #> pctlowinc        0.319063   #> pctlingiso       0.06979021 #> pctunemployed    0.06280622 #> pctlths          0.1370251  #> pctunder5        0.05797804 #> pctover64        0.144583   #> pctmin           0.5839562 cbind(overall = as.list( out2$results_overall[ , ..names_d_subgroups])) #>                 overall     #> pcthisp         0.2524003   #> pctnhba         0.1715473   #> pctnhaa         0.1104285   #> pctnhaiana      0.003836903 #> pctnhnhpia      0.002411388 #> pctnhotheralone 0.005859968 #> pctnhmulti      0.0374718   #> pctnhwa         0.4160438"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"overall-results-for-the-very-long-list-of-all-indicators-as-raw-output-in-console","dir":"Articles","previous_headings":"EXPLORING RESULTS > Site by site detailed results in datatable format in RStudio viewer:","what":"Overall results for the very long list of all indicators, as raw output in console:","title":"Using EJAM for Analysis in R","text":"","code":"out2 <- testoutput_ejamit_100pts_1miles  head(   ejam2table_tall(out2)   , 20) # head( #   cbind(as.list(out2$results_overall)) #   , 12)"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"just-one-site-all-the-indicators","dir":"Articles","previous_headings":"EXPLORING RESULTS","what":"Just one site, all the indicators","title":"Using EJAM for Analysis in R","text":"","code":"head(   ejam2table_tall(out2, sitenumber = 1)   , 20)"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"see-indicators-aggregated-over-all-people-across-all-sites","dir":"Articles","previous_headings":"EXPLORING RESULTS > Just one site, all the indicators","what":"See indicators aggregated over all people across all sites","title":"Using EJAM for Analysis in R","text":"","code":"## view output of batch run aggregation #### out <- testoutput_ejamit_1000pts_1miles head(cbind(overall = as.list( out$results_overall))) #>                 overall #> EJScreen Report NA      #> EJScreen Map    NA      #> ACS Report      NA      #> ECHO Report     NA      #> ejam_uniq_id    NA      #> valid           TRUE  ## To see just some subset of indicators, like Environmental only: cbind(overall = as.list( out$results_overall[ , ..names_e])); cat(\"\\n\") #>                 overall   #> pm              9.585876  #> o3              66.39456  #> no2             10.83491  #> dpm             0.33535   #> rsei            4536.487  #> traffic.score   3974228   #> pctpre1960      0.4124342 #> proximity.npl   1.291201  #> proximity.rmp   0.8603396 #> proximity.tsdf  10.90486  #> ust             8.545572  #> proximity.npdes 527761.8  #> drinking        1.65022 cbind(overall = as.list( out$results_overall[ , ..names_d])); cat(\"\\n\") #>                  overall    #> Demog.Index      1.649779   #> Demog.Index.Supp 1.666516   #> pctlowinc        0.3107655  #> pctlingiso       0.07357484 #> pctunemployed    0.06338704 #> pctlths          0.1332822  #> pctunder5        0.0575535  #> pctover64        0.1394766  #> pctmin           0.5792066 cbind(overall = as.list( out$results_overall[ , ..names_d_subgroups])); cat(\"\\n\") #>                 overall     #> pcthisp         0.2945468   #> pctnhba         0.1434055   #> pctnhaa         0.09549668  #> pctnhaiana      0.003141675 #> pctnhnhpia      0.001910486 #> pctnhotheralone 0.005492147 #> pctnhmulti      0.0352133   #> pctnhwa         0.4207934 cbind(overall = as.list( out$results_overall[ , ..names_e_pctile])); cat(\"\\n\") #>                        overall #> pctile.pm              83      #> pctile.o3              76      #> pctile.no2             80      #> pctile.dpm             87      #> pctile.rsei            85      #> pctile.traffic.score   88      #> pctile.pctpre1960      68      #> pctile.proximity.npl   93      #> pctile.proximity.rmp   77      #> pctile.proximity.tsdf  91      #> pctile.ust             87      #> pctile.proximity.npdes 99      #> pctile.drinking        84 cbind(overall = as.list( out$results_overall[ , ..names_d_pctile])); cat(\"\\n\") #>                         overall #> pctile.Demog.Index      68      #> pctile.Demog.Index.Supp 57      #> pctile.pctlowinc        57      #> pctile.pctlingiso       81      #> pctile.pctunemployed    68      #> pctile.pctlths          69      #> pctile.pctunder5        60      #> pctile.pctover64        41      #> pctile.pctmin           70 # cbind(overall = as.list( out$results_overall[ , ..names_ej_pctile])); cat(\"\\n\")"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"visualization-of-findings-plots","dir":"Articles","previous_headings":"","what":"VISUALIZATION OF FINDINGS (PLOTS)","title":"Using EJAM for Analysis in R","text":"See examples , list plot-related functions.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"barplot-showing-which-indicator-is-most-elevated-overall","dir":"Articles","previous_headings":"VISUALIZATION OF FINDINGS (PLOTS) > Indicators","what":"Barplot showing which indicator is most elevated overall","title":"Using EJAM for Analysis in R","text":"","code":"out <- testoutput_ejamit_1000pts_1miles  ejam2barplot(out,              varnames = c(names_d_ratio_to_state_avg, names_d_subgroups_ratio_to_state_avg),              main = \"Residential population group percentages at Selected Sites Compared to State Averages\")"},{"path":"https://usepa.github.io/EJAM-open/articles/3_analyzing.html","id":"histogram-of-indicators-distribution-over-all-people-across-all-sites","dir":"Articles","previous_headings":"VISUALIZATION OF FINDINGS (PLOTS) > Indicators","what":"Histogram of indicators distribution over all people across all sites","title":"Using EJAM for Analysis in R","text":"Table barplot ","code":"hist(out$results_bysite$pctile.traffic.score, 10, xlab = \"Local traffic scores (expressed as a percentile)\",       ylab = \"count of sites in each bin, out of 1,000 sites\", freq = TRUE,       main = \"Actual distribution of scores nearby, as percentiles,       vs flat line = USA overall\") abline(h = nrow(out$results_bysite)/10)"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_deploy-app.html","id":"update-ejam-application","dir":"Articles","previous_headings":"","what":"Update EJAM Application","title":"Deploying the Web App","text":"updating main branch public EJAM code repository (see Updating Package New Release vignette) public repo latest version… Sourced rsconnect_manifest_update.R, using public repo repo specified remotes::install_github() command. way, updating manifest.json file repo web app deployed, reference repo public (since repo). important use public repo ensured Posit Connect server hosted site install EJAM package dependency. (necessarily access private EJAM repo) Updated Staging + Production servers Merged EJAM’s main branch PUBLIC-EJSCREEN branch (repo deployed ) isPublic flag determined whether show public internal/expert version web application. branch PUBLIC-EJSCREEN automatically connected public site, changes branch automatically pulled site. Updated Deploy Posit server Merged EJAM’s main branch deploy-posit branch (repo deployed ) Ensured isPublic parameter set FALSE deploy-posit automatically connected development/internal/expert version web app, changes branch automatically pulled site. Merged main back development development updated manifest.json file. ensured branches consistent.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_deploy-app.html","id":"potential-improvements","dir":"Articles","previous_headings":"","what":"Potential Improvements","title":"Deploying the Web App","text":"One way improve process modify isPublic toggle environment variable. allow us set value application server, change time push updates. Moreover, make testing public internal versions app easier handle GitHub actions (see shinytests vignette).","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"status-and-future-directions-as-of-2024-2025","dir":"Articles","previous_headings":"","what":"Status and Future Directions as of 2024-2025","title":"Future Plans and Ideas for EJAM","text":"Regarding status repository plans web app hosting open source package development, etc., see README file main EJAM code repository.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"possible-future-enhancements","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025","what":"Possible future enhancements","title":"Future Plans and Ideas for EJAM","text":"EPA longer actively developing EJAM mid-2025, previously considered worked still needed multisite tool EJAM, including ideas listed .","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"api","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"API","title":"Future Plans and Ideas for EJAM","text":"provide flexibility help avoid duplication effort, EJAM API needed. allow links within EJAM tables map popups link report site, example, available via EJScreen API taken offline. API also provide access services fast identification nearby blocks points, summarization (aggregation blocks block groups), data. See draft work plumber folder EJAM source package.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"counts-of-nearby-points-of-interest","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Counts of nearby points of interest","title":"Future Plans and Ideas for EJAM","text":"Features drafted able report number user-specified points interest (e.g., schools) location. example, report many parks elementary schools analyzed location. report counts analysis circular buffers (e.g., # schools near facility analyzed), also FIPS Census units (e.g., # schools County) polygons/shapefiles (e.g., # schools high-risk zone). See countpoints_nearby(), related early draft work EJAM/R/PROXIMITY_FUNCTIONS.R","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"facility-density-scores-for-all-epa-regulated-facilities","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Facility Density Scores for all EPA-regulated Facilities","title":"Future Plans and Ideas for EJAM","text":"facility density indicator may explored pre-calculated, summarize proximity types EPA-regulated facilities, certain subcategories, every community US within one State interest. similar existing proximity indicators RMP score EJScreen, cover larger range facilities. See early draft work EJAM/R/PROXIMITY_FUNCTIONS.R","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"proximity-scores-for-user-specified-sites","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Proximity Scores for User-Specified Sites","title":"Future Plans and Ideas for EJAM","text":"feature planned able quickly calculate new proximity indicator every block group US, represent counts distances user-specified points facilities. similar existing proximity indicators RMP score EJScreen, calculated fly user-specified set points. See early draft work EJAM/R/PROXIMITY_FUNCTIONS.R","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"user-specified-indicators","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"User-specified Indicators","title":"Future Plans and Ideas for EJAM","text":"EJAM future also able analyze, aggregate, report residential population indicators (e.g., Census ACS variables), include user-selected EPA-hosted layers, even user-provided data. words, analysis able include layers risks concentrations (block group resolution), user-provided scores block group. See acs_bybg() examples, calctype(), doaggregate() parameters like wtdmeancols, early drafts possible approaches incalc_ejam(), custom_doaggregate(), doaggregate_newscores(), etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"written-long-report","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Written Long Report","title":"Future Plans and Ideas for EJAM","text":"EJAM designed way allow future update provide default, standard written report (e.g., 10-page report). EJAM provide written report text, graphics, maps, ready user print, download, share, use. report Word document, one can edit offline needed. Users also can choose use just selected tables graphics data files (individual sites summary statistics). See early draft work system.file(\"report/written_report\", package = \"EJAM\") R/app_ui.R R/app_server.R.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"methods-for-identifying-and-focusing-on-key-findings","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Methods for Identifying and Focusing on Key Findings","title":"Future Plans and Ideas for EJAM","text":"Communicating key findings challenging large number metrics available across multiple locations multiple residential population groups. simple tools may able help initial filtering results, suggest might highlighted. explored written report, particularly ways provide Executive Summary. See early draft work functions count_sites_with_n_high_scores() report/written_report folder.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"visualization-tools","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Visualization Tools","title":"Future Plans and Ideas for EJAM","text":"variety plots maps explored ways communicate rich data results calculated EJAM. example, EJAM R functions can calculate display detailed estimates range residential distances facilities within residential population subgroup - type visualization incorporated web app appears interest . Another possibility plots, maps, tables made interact sync , supports useful data exploration. See examples plots vignettes, example, many plot_xyz functions mapping functions.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_future_plans.html","id":"spatial-resolution","dir":"Articles","previous_headings":"Status and Future Directions as of 2024-2025 > Possible future enhancements","what":"Spatial Resolution","title":"Future Plans and Ideas for EJAM","text":"EJAM designed growth mind, assuming specific indicators interest expand change time. even possible multiple resolutions data need analyzed, block, block group, tract data different indicators. subsequent refinement might even use high-resolution raster grid population estimates rather Census Block counts currently used buffering weighting block group scores partially included block groups.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"dev-environment","dir":"Articles","previous_headings":"","what":"Dev Environment","title":"Testing EJAM App with shinytest2","text":"successfully running app, necessary packages. don’t, packages live DESCRIPTION file. dev-related packages note: shinytest2 - shinytest2 key R package helping test shiny web app functionality diffviewer - diffviewer helps visually compare 2 files Pandoc – Comes bundled RStudio PhantomJS? – Used needed downloads (installed webshot::install_phantomjs()). note: NOTE https://rstudio.github.io/shinytest2/articles/z-migration.html: - shinytest2 successor shinytest. shinytest implemented using webdriver uses PhantomJS. PhantomJS unsupported since 2017 support displaying bslib’s Bootstrap v5. shinytest2 uses chromote connect locally installed Chrome Chromium application, allowing shinytest2 display bslib’s Bootstrap v5.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"how-shinytest2-works","dir":"Articles","previous_headings":"","what":"How shinytest2 Works","title":"Testing EJAM App with shinytest2","text":"shinytest2 (referred henceforth “shinytest” confused older R package named shinytest!) automates shiny web app functionality testing, can determine code updates break unexpectedly modify parts application. runs installed version app headless Chromium browser, simulating user interactions taking snapshots. snapshots stored JSON files accompanying PNG images. differences arise code updates, test fails, indicating files changed.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"key-features","dir":"Articles","previous_headings":"How shinytest2 Works","what":"Key Features:","title":"Testing EJAM App with shinytest2","text":"Compares .json, .html, .xlsx files baseline Snapshots include inputs, outputs, exported values .png files provide visual confirmation (cause test failures) Developers can update snapshots set new baseline","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"ejams-shinytest2-folder-structure","dir":"Articles","previous_headings":"","what":"EJAM’s shinytest2 Folder Structure","title":"Testing EJAM App with shinytest2","text":"","code":"tests/   ├── testthat.R (modified for shinytest2)   ├── app-functionality.R   └── testthat/       ├── setup-shinytest2.R       ├── test-[DATA TYPE]-functionality.R (e.g. test-FIPS-functionality.R)       └── _snaps/           ├── [OS, e.g. linux]-[R Version, e.g. 4.4]/           │   ├── FIPS-shiny-functionality/           │   │   ├── .json, .png, .xlsx, .html files           │   ├── shapefile-shiny-functionality/           │   │   ├── .json, .png, .xlsx, .html files           │   ├── latlon-shiny-functionality/           │   │   ├── .json, .png, .xlsx, .html files           │   ├── NAICS-shiny-functionality/           │   │   ├── .json, .png, .xlsx, .html files           │   └── FRS-shiny-functionality/           │   │   ├── .json, .png, .xlsx, .html files"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"file-descriptions","dir":"Articles","previous_headings":"EJAM’s shinytest2 Folder Structure","what":"File Descriptions","title":"Testing EJAM App with shinytest2","text":"testthat.R – Calls shinytest2::test_app() run tests. Can filter specific tests using filter=\"test-name\". testthat/setup-shinytest2.R – Loads global.R app scripts testing environment. app-functionality.R – Contains generic function, main_shinytest(), defines app interactions testing, running tests multiple data types (FIPS, shapefile, latlon, NAICS, etc.). testthat/test-[DATA TYPE]-functionality.R – Simple call main app functionality function, specifying data type test . .json files – Capture app snapshots. .png files – Screenshots (trigger failures). .xlsx & .html files – Download files. Compared via content hashing prevent false failures.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"updating-tests","dir":"Articles","previous_headings":"","what":"Updating Tests","title":"Testing EJAM App with shinytest2","text":"may wish modify shinytest scripts, either add new interactions application modify existing ones, case app component can longer interacted . methods tips updating shinytest script accordingly.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"direct-updates","dir":"Articles","previous_headings":"Updating Tests","what":"Direct Updates","title":"Testing EJAM App with shinytest2","text":"Modify app-functionality.R add new interactions app shinytest test.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"using-shinytest2record_test-to-generate-testing-code","dir":"Articles","previous_headings":"Updating Tests","what":"Using shinytest2::record_test() to generate testing code","title":"Testing EJAM App with shinytest2","text":"’re sure code interactions directly, run shinytest2::record_test() test app interactively record actions, can copied test scripts.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"using-shinyexporttestvaluesname-value","dir":"Articles","previous_headings":"Updating Tests","what":"Using shiny::exportTestValues(name = value)","title":"Testing EJAM App with shinytest2","text":"Throughout app code, shiny::exportTestValues() can used store values reactive expressions items inputs outputs therefore may included standard snapshots. , shinytests, can specify export=[name] include snapshot export named “name” specified code, export=TRUE include exports.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"running-tests-locally","dir":"Articles","previous_headings":"","what":"Running Tests Locally","title":"Testing EJAM App with shinytest2","text":"primary method running shinytests : However, strongly recommended development run entire testthat.R runs remotes::install_local() ensure development code one tested. shinytest2 automatically references installed version package.","code":"shinytest2::test_app(\".\", filter=\"-functionality\")"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"github-actions-integration","dir":"Articles","previous_headings":"","what":"GitHub Actions Integration","title":"Testing EJAM App with shinytest2","text":"Using GitHub Actions (GHA) can GitHub run shinytests prior merging Pull Request, give us peace mind app still work merged code.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"workflow","dir":"Articles","previous_headings":"GitHub Actions Integration","what":"Workflow","title":"Testing EJAM App with shinytest2","text":"PRs development, main, deploy-posit trigger GHA workflows. GHA sets R, installs dependencies, runs tests, compares snapshots. workflow stored .github/workflows/run-test.yaml.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"speed-optimization","dir":"Articles","previous_headings":"GitHub Actions Integration","what":"Speed Optimization","title":"Testing EJAM App with shinytest2","text":"GHA takes long, cache dependencies temporarily disabling steps setup. snapshots fail, merge base branch feature branch updating snapshots.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"reviewing","dir":"Articles","previous_headings":"Reviewing & Updating Snapshots","what":"Reviewing","title":"Testing EJAM App with shinytest2","text":"Optionally, can filter review specific files folders snapshots.","code":"testthat::snapshot_review()"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"accepting-new-snapshots","dir":"Articles","previous_headings":"Reviewing & Updating Snapshots","what":"Accepting New Snapshots","title":"Testing EJAM App with shinytest2","text":"Optionally, can accept interactively reviewing","code":"testthat::snapshot_accept()"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"debugging-shinytest2","dir":"Articles","previous_headings":"Debugging Tests & GitHub Actions","what":"Debugging shinytest2","title":"Testing EJAM App with shinytest2","text":"Use save_log() inspect logs. Add print(), message(), warning() statements app-functionality.R. Run, line-line chunks, main shinytest code app-functionality.R beginning : , running lines chunks, run app$get_log() view log.","code":"test_category <- \"NAICS-functionality\"   test_snap_dir <- glue::glue(\"{normalizePath(testthat::test_path())}/_snaps/{platform_variant()}/{test_category}-functionality/\")    outputs_to_remove <- c('an_leaf_map')        app <- AppDriver$new(     variant = platform_variant(),     name = test_category,      seed=12345,      load_timeout=2e+06,     width = 1920,     screenshot_args = FALSE,     expect_values_screenshot_args = FALSE,     height = 1080,     options = list(       shiny.reactlog = TRUE,        shiny.trace = TRUE     )   )"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"debugging-gha","dir":"Articles","previous_headings":"Debugging Tests & GitHub Actions","what":"Debugging GHA","title":"Testing EJAM App with shinytest2","text":"Generally, test locally update snapshots accordingly, GHA pass. However, tests sometimes fail due OS differences, R version differences, even package differences. tips debugging issues: Inspect log GitHub repo, Actions tab Checks tab PR. Inspect artifacts (zipped test outputs) failed run compare snapshots diff viewer identify discrepancies.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"current-state-of-tests","dir":"Articles","previous_headings":"","what":"Current State of Tests","title":"Testing EJAM App with shinytest2","text":"shinytests failing, likely snapshots updated locally pushed recent changes. version R used testing 4.4.1 early 2025, reflect version used development environment, ensure consistency much possible.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-shinytests.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Testing EJAM App with shinytest2","text":"RStudio shinytest2 Documentation","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"checking-test-coverage-where-more-unit-tests-need-to-be-written","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Checking test coverage (where more unit tests need to be written)","title":"Testing EJAM Functions with Unit Tests","text":"functions package incomplete unit test coverage version 2.32.4 / mid 2025, ideally unit tests added cases. can see grouped, organized list unit test files within source code function test_interactively(), EJAM/tests/test_interactively.R check functions adequate unit tests. One quick imperfect way using rough draft function notes found EJAM/tests/test_coverage_check.R. test_interactively() function noted already prompts using , separately source() use . Note bit tedious figure functions unit tests since 1--1 relationship functions like xyz() vs EJAM/R/xyz.R files defining functions vs EJAM/tests/testthat/test-xyz.R files containing unit tests. Also see covr package covr::package_coverage() related RStudio addin.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"adding-unit-tests-for-new-functions-or-where-unit-tests-not-yet-written","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Adding unit tests (for new functions or where unit tests not yet written)","title":"Testing EJAM Functions with Unit Tests","text":"Unit tests written occur: existing function unit tests existing function limited tests, e.g., combinations parameter settings tested unit tests new function written See https://testthat.r-lib.org usethis::use_test() information add unit tests. unit tests EJAM/tests EJAM/tests/testthat folders.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"updating-unit-tests-when-functions-are-updated","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package > Adding unit tests (for new functions or where unit tests not yet written)","what":"Updating unit tests (when functions are updated)","title":"Testing EJAM Functions with Unit Tests","text":"Unit tests changed necessary situations: existing function modified, function’s expected outputs/ warnings/ errors change. web app UI changes - special tests web app functionality can created explained Testing EJAM App shinytest2. Also note screenshots User Guide need updated UI changes.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"running-unit-tests","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Running unit tests","title":"Testing EJAM Functions with Unit Tests","text":"numerous unit tests EJAM/tests/testthat/ folder can run add needed. can run automatically devtools::test() function. However, instead running unit tests (run alphabetical order default), might want test groups related functions working , see summary tests files groups passing, skipped, etc. , note file called EJAM/tests/test_interactively.R can source() can use function run unit tests interactively. Assuming want use function, whenever add rename delete unit test files EJAM/tests/testthat/ folder need edit list test file names source code function, test_interactively() can try use stop tell files missing list source code EJAM/tests/test_interactively.R","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"running-tests-of-the-web-app-functionality","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Running tests of the web app functionality","title":"Testing EJAM Functions with Unit Tests","text":"recorded interactions used tests web app, explained Testing EJAM App shinytest2.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"running-unit-tests-via-github-workflow","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Running unit tests via github workflow","title":"Testing EJAM Functions with Unit Tests","text":"also github workflow package runs unit tests, automatically triggered certain events, pull request main development branch. See EJAM/.github/workflows/run-test.yaml","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_run-unit-tests.html","id":"other-notes","dir":"Articles","previous_headings":"Notes for developers, on writing or running unit tests in this package","what":"Other notes","title":"Testing EJAM Functions with Unit Tests","text":"aware whether tests using last-installed version package latest, possibly recently-edited, local source package version devtools::load_all() may loaded. functions relied EJScreen API API available, tests skipped fail.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"how-to-update-datasets-in-ejam","dir":"Articles","previous_headings":"","what":"How to Update Datasets in EJAM","title":"Updating EJAM Datasets","text":"process begins within EJAM code repo, using various datacreate_* scripts create updated arrow datasets. Notes scripts consolidated /data-raw/ folder, starting point overarching set scripts comments file called /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R. Almost updates data objects documentation organized within file functions/scripts various datasets. Documentation datasets via EJAM/R/data_*.R files generally handled scripts creating/updating datasets. file covers large arrow datasets stored separate repository, also many smaller data objects installed along package /data/ folder. Updating package’s data objects can complicated many different data objects various types formats locations. various data objects need updated various frequencies – yearly (ACS data) others facility IDs locations change (often possible, EPA’s FRS updated). need updated package features/code changes, important data object called map_headernames (turn used update objects names_e). See draft utility EJAM:::datapack() view datasets useful: notable data files, code details, objects may need changed ANNUALLY often: Blockgroup Datasets: include datasets included package ?blockgroupstats, usastats, ?statestats, etc.) well larger tables stored separate repository downloaded EJAM package (?bgpts, ?bgej, ?bgid2fips, ?bg_cenpop2020, etc.). created modified using scripts/functions organized within /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R. NOTE: Prior 2025, several key datasets used EJAM obtained EPA’s EJScreen-related FTP site others directly relevant staff. Many indicators Community Report v2.2 (early 2024) EJScreen data provided gdb csv files FTP site, obtained directly EJScreen team separate .csv file. code referred /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R assumes basic datasets EPA available, converts datasets actually used EJAM. However, longer available sources, data mostly independently recreated, require combination existing code significant new work. relevant code archived EJScreen repositories, creating environmental datasets. code EJAM functions can get ACS datasets. Much relevant code older non-EPA package called ejscreen, made private early 2025 refreshed. package tools ejscreen.create() able reproduce parts blockgroupstats usastats/statestats datasets. Block Datasets: block (block group) tables might updated less often, Census fips codes change yearly ?blockwts, ?blockpoints, ?quaddata, ?blockid2fips, related additional data.tables updated needed. also done within /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R See package census2020download github function census2020_get_data() may useful. Facilities Datasets: EPA-regulated facilities types sites, NAICS/SIC/MACT/program information, may need frequent updates, ideally, since facilities open, close, relocate, information corrected otherwise updated. EPA’s FRS source much information stored tables EJAM uses, : ?frs, ?frs_by_programid, ?frs_by_naics, ?frs_by_sic, ?frs_by_mact, ?NAICS, ?SIC, ?naics_counts, ?naicstable, ?SIC, ?sictable, ?mact_table, ?epa_programs, ?frsprogramcodes, etc. updated within /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R ?map_headernames associated .xlsx, etc. critical. needs updated especially indicator names change added, example. ?map_headernames holds useful metadata variable (indicator, like %low income) – e.g., many digits use rounding, units, long name indicator, type category indicator, sort order use reports, method calculating aggregations indicator blockgroups, etc. modified directly spreadsheet map_headernames, functions/scripts read .xlsx create map_headernames dataset. See /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R Test data (inputs) examples outputs may updated (every time parameters change & outputs returned change). generated scripts/functions referred /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R default year used various functions, last year 5-year ACS dataset. defaults like yr year updated via global searches relevant. metadata vintage/ version attributes datasets. updated via scripts/functions used /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R via example helpers metadata_add() metadata_check() metadata_mapping.R Version numbering recorded DESCRIPTION file primarily, note use ejamdata_version.txt file, tags releases, NEWS file. Updating documentation - updates may needed README, vignettes, possibly examples functions case updates datasets alter examples work. , updates done starting understanding file called /data-raw/datacreate_0_UPDATE_ALL_DATASETS.R. script includes steps update metadata documentation save new versions data data folder appropriate. information focuses type data objects – set large arrow files stored outside package code repository.","code":"x <- EJAM:::datapack() ## Get more info with datapack(simple = FALSE) ##  ## ignoring sortbysize because simple=TRUE x$Item[!grepl(\"names_|^test\", x$Item)] ##  [1] \"NAICS\"                              \"SIC\"                                ##  [3] \"avg.in.us\"                          \"bg_cenpop2020\"                      ##  [5] \"bgpts\"                              \"blockgroupstats\"                    ##  [7] \"censusplaces\"                       \"custom\"                             ##  [9] \"default_points_shown_at_startup\"    \"ejamdata_version\"                   ## [11] \"ejampackages\"                       \"ejscreenRESTbroker2table_na_filler\" ## [13] \"epa_programs\"                       \"epa_programs_defined\"               ## [15] \"formulas_all\"                       \"formulas_d\"                         ## [17] \"frsprogramcodes\"                    \"high_pctiles_tied_with_min\"         ## [19] \"islandareas\"                        \"lat_alias\"                          ## [21] \"lon_alias\"                          \"mact_table\"                         ## [23] \"map_headernames\"                    \"metadata4pins\"                      ## [25] \"meters_per_mile\"                    \"modelDoaggregate\"                   ## [27] \"modelEjamit\"                        \"naics_counts\"                       ## [29] \"naicstable\"                         \"namez\"                              ## [31] \"sictable\"                           \"stateinfo\"                          ## [33] \"stateinfo2\"                         \"states_shapefile\"                   ## [35] \"statestats\"                         \"usastats\"                           ## [37] \"x_anyother\""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"repository-that-stores-the-large-arrow-files","dir":"Articles","previous_headings":"How to Update Datasets in EJAM","what":"Repository that stores the large arrow files","title":"Updating EJAM Datasets","text":"Several large data.table files installed part R package typical /data/ folder contains .rda files lazyloaded package. Instead, kept separate github repository refer data repository. IMPORTANT: name data repository (distinct package code repository) must recorded/ updated EJAM package DESCRIPTION file, package know look data files datasets moved new repository, example. current (either installed loaded source version) repository https://usepa.github.io/EJAM-open (can checked via desc::desc(file = system.file(\"DESCRIPTION\", package = \"EJAM\"))$get(\"ejam_data_repo\"))","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"arrow-package-and-arrow-file-format","dir":"Articles","previous_headings":"How to Update Datasets in EJAM","what":"arrow package and arrow file format","title":"Updating EJAM Datasets","text":"store large files needed EJAM package, use Apache arrow file format arrow R package, file extension .arrow. allows us work larger--memory data store outside EJAM package . Earlier version EJAM use actual arrow format, still may places code simply use xyz.arrow filename actual arrow format faster, ideally get updated. example object called frs_arrow faster format called ?frs dataset. names tables listed file called R/arrow_ds_names.R global variable called .arrow_ds_names used functions like dataload_dynamic() dataload_from_local(). mid-2025, 11 arrow files used EJAM:","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"blockgroup-and-block-level-arrow-files","dir":"Articles","previous_headings":"How to Update Datasets in EJAM","what":"Blockgroup and block-level arrow files","title":"Updating EJAM Datasets","text":"?bgid2fips.arrow: crosswalk EJAM blockgroup IDs (1-n) 12-digit blockgroup FIPS codes ?blockid2fips.arrow: crosswalk EJAM block IDs (1-n) 15-digit block FIPS codes ?blockpoints.arrow: Census block internal points lat-lon coordinates, EJAM block ID ?blockwts.arrow: Census block population weight share blockgroup population, EJAM block blockgroup ID ?bgej.arrow: blockgroup-level statistics EJ variables ?quaddata.arrow: 3D spherical coordinates Census block internal points, EJAM block ID","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"frsfacility-related-arrow-files","dir":"Articles","previous_headings":"How to Update Datasets in EJAM","what":"FRS/facility-related arrow files","title":"Updating EJAM Datasets","text":"?frs.arrow: data.table EPA Facility Registry Service (FRS) regulated sites ?frs_by_naics.arrow: data.table NAICS industry code(s) EPA-regulated site Facility Registry Service ?frs_by_sic.arrow: data.table SIC industry code(s) EPA-regulated site Facility Registry Service ?frs_by_programid.arrow: data.table Program System ID code(s) EPA-regulated site Facility Registry Service ?frs_by_mact.arrow: data.table MACT NESHAP codes sites, indicating subpart(s) categorize relevant EPA-regulated sites","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"developmentsetup","dir":"Articles","previous_headings":"","what":"Development/Setup","title":"Updating EJAM Datasets","text":"arrow files stored separate, public, Git-LFS-enabled GitHub repo (henceforth ‘ejamdata’). owner/reponame must recorded/updated DESCRIPTION file field called ejam_data_repo – info used package. , time arrow datasets updated, update ejamdata release version via .github/push_to_ejam.yaml workflow ejamdata repo, thereby saving arrow files release, downloaded automatically EJAM EJAM’s download_latest_arrow_data() function following: Checks ejamdata repo’s latest release/version. Checks user’s EJAM package’s ejamdata version, stored data/ejamdata_version.txt. data/ejamdata_version.txt file doesn’t exist, e.g. ’s first time installing EJAM, created end script. versions different, download latest arrow latest ejamdata release piggyback::pb_download(). see function works details: add call function onAttach script (via dataload_dynamic() function) runs ensures latest arrow files downloaded user loads EJAM.","code":"download_latest_arrow_data()"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"how-it-works-for-the-user","dir":"Articles","previous_headings":"","what":"How it Works for the User","title":"Updating EJAM Datasets","text":"User installs EJAM devtools::install_github(\"USEPA/EJAM-open\") (adjusted depending actual repository owner name) User loads EJAM usual library(EJAM). trigger new download_latest_arrow_data() function. User runs EJAM usual dataload_dynamic() function work usual data now stored data directory.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"how-new-versions-of-arrow-datasets-are-republished-released","dir":"Articles","previous_headings":"","what":"How new versions of arrow datasets are republished/ released","title":"Updating EJAM Datasets","text":"key arrow files updated within EJAM code repository, explained . files copied clone ejamdata repo pushed actual ejamdata repo github (USEPA/ejamdata) triggers ejamdata’s push_to_ejam.yaml workflow increments latest release tag reflecting new version creates new release","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-datasets.html","id":"making-code-more-arrow-friendly","dir":"Articles","previous_headings":"Potential Improvements","what":"Making Code more Arrow-Friendly","title":"Updating EJAM Datasets","text":"Problem: loading data tibbles/dataframes takes long time Solution: may able modify code arrow -friendly. essentially keeps analysis code sort query, actually loads results memory requested (e.g., via dplyr::collect()) dramatically reduces used memory, speed processing times avoid potential crashes resulting enough memory. However, require decent lift update code places Pros: processing efficiency, significantly reduced memory usage Implementation: mostly implemented dataload_dynamic() function, contains return_data_table parameter. FALSE, arrow file loaded .arrow dataset, rather tibble/dataframe.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-package.html","id":"update-owners-and-names-of-repositories-if-relevant","dir":"Articles","previous_headings":"","what":"Update owners and names of repositories if relevant","title":"Updating the Package as a New Release","text":"package renamed, new name used repository, owner repository changed, several files need updated everything work correctly. name github repository storing package code recorded part URL parameter DESCRIPTION file root folder source package. name repo webpages package documentation published also recorded part URL parameter DESCRIPTION file root folder source package. website providing documentation R package created via code EJAM/data-raw/datacreate_0_UPDATE_ALL_DOCUMENTATION_pkgdown.R, relying R package pkgdown hosted github pages. name repo datasets stored recorded ejam_data_repo parameter DESCRIPTION file root folder source package.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-package.html","id":"update-the-package-release","dir":"Articles","previous_headings":"","what":"Update the package release","title":"Updating the Package as a New Release","text":"Update EJAM version number DESCRIPTION development branch (e.g. 2.4.1) (& tying EJScreen version numbers relevant) Update NEWS.md development branch Merge development main branch Update EJAM release using NEWS.md changelog, tagging main branch. Increment using numbering x.y.z (numbering put DESCRIPTION)","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-package.html","id":"make-updates-public-if-an-internal-repo-was-used","dir":"Articles","previous_headings":"","what":"Make updates public if an internal repo was used","title":"Updating the Package as a New Release","text":"EJAM repo used internal private, public, make EJAM package installable, updates need pushed public repo EJAM-open repo. steps: already done, add USEPA/EJAM-open (appropriate public repo) remote internal repo main branch: git remote add EJAM-open git@github.com:USEPA/EJAM-open.git Push main branch repo: git push EJAM-open main:main want squash commits want add new squashed commit, starting main internal EJAM: git checkout -b squash-temp git reset --soft #SHA PREVIOUS MAIN COMMIT git commit -m \"squashed commit message\" git push --force EJAM-open squash-temp:main git checkout –orphan squash-temp git add . git commit -m \"Publishing EJAM\" git push --force EJAM-open squash-temp:main git -M main Update EJAM-open release using similar process updating internal EJAM release.","code":"b.  If you just want EJAM-open to end with a single squash commit, starting in main in internal EJAM:"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-package.html","id":"test-the-installation-process","dir":"Articles","previous_headings":"","what":"Test the Installation Process","title":"Updating the Package as a New Release","text":"ensure , changes made, EJAM can still installed users various operating systems versions R, workflow file, .github/workflows/installation_test.yaml, triggered pushes EJAM-open’s main branch. file tests installation following matrix options: OS: Latest Ubuntu, Windows, macOS R version: 4.3 4.4 Install Method: remotes::install_url() remotes::install_github()","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update-package.html","id":"update-the-test-installation-script","dir":"Articles","previous_headings":"Test the Installation Process","what":"Update the Test Installation Script","title":"Updating the Package as a New Release","text":"may want update test script future couple reasons: Remove older versions R test Add new system libraries required newly added packages","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"updating-package-documentation","dir":"Articles","previous_headings":"","what":"Updating package documentation","title":"Updating Documentation","text":"R package documented webpages (standard help documents viewable RStudio). Documentation generally need updated preparation new release package. Updates may needed following: Package: overall, package-wide information/ documents Functions: reference docs explaining R functions Datasets: reference docs explaining datasets (EJAM/R/data_*.R files) Articles: vignettes helping R users package (EJAM/vignettes/*.Rmd) User Guide: help people using web app (EJAM/inst/app/www/ .pdf file) Spell-checking package-wide Website: web pages providing html format, via pkgdown package explained :","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"package-overall-package-wide-information-documents","dir":"Articles","previous_headings":"Updating package documentation","what":"Package: overall, package-wide information/ documents","title":"Updating Documentation","text":"Package-wide documentation files can updated/edited include following: DESCRIPTION, README.Rmd (README, edit README.RmdNOT README.md file), R/EJAM-package.R (?EJAM-package), NEWS.md used make NEWS, CONTRIBUTING.md used make CONTRIBUTING, LICENSE based inst/LICENSE.md, CITATION based inst/CITATION, others. used shown github.com repository, notably README.md generated README.Rmd file appears github repository README pkgdown site README, DESCRIPTION file stores package version number URLs package repository, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"functions-reference-docs-explaining-the-r-functions","dir":"Articles","previous_headings":"Updating package documentation","what":"Functions: reference docs explaining the R functions","title":"Updating Documentation","text":"roxygen2 package tags define documentation R/*.R files contain source code documentation functions datasets. many functions objects .R files, .R files contain code documentation multiple functions, every function .R file . utility/helper functions, mostly exported, stored files prefixed “utils_” R/utils_indexblocks.R documenting indexblocks() (helper functions files named way). might find useful check docs tools::checkDocFiles(“EJAM”)","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"datasets-reference-docs-explaining-the-datasets","dir":"Articles","previous_headings":"Updating package documentation","what":"Datasets: reference docs explaining the datasets","title":"Updating Documentation","text":"datasets documented files named prefix “data_” R/data_blockgroupstats.R documents ?blockgroupstats dataset. dataset documentation created/updated alongside code created updates datasets. best done starting overarching file called data-raw/datacreate_0_UPDATE_ALL_DATASETS.R helps walk updating various datasets needed documentation often updated process. Many R/*.R files datasets created automatically, edited hand, dataset_documenter() function used scripts within data-raw/datacreate_*.R others updated editing .R file directly.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"articles-vignettes-helping-r-users-with-the-package","dir":"Articles","previous_headings":"Updating package documentation","what":"Articles: vignettes helping R users with the package","title":"Updating Documentation","text":"Articles (called vignettes, ) written/edited .Rmd files vignettes folder. can test one using something like pkgdown::build_article() trying rebuild whole pkgdown site. New articles renamed files require edits _pkgdown.yml file also.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"user-guide-help-for-people-using-the-web-app","dir":"Articles","previous_headings":"Updating package documentation","what":"User Guide: help for people using the web app","title":"Updating Documentation","text":"change UI new screenshots needed new version User Guide stored .pdf document.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"spell-checking-package-wide","dir":"Articles","previous_headings":"Updating package documentation","what":"Spell-checking package-wide","title":"Updating Documentation","text":"run spell check (see terms flagged possible problems) can use ctrl-shift-F search files flagged term check actually problem wanted update WORDLIST (list words ignore spelling )","code":"x <- spelling::spell_check_package()     x <- data.frame(       frq = sapply(x$found, function(z) {length(unlist(z))}),        word = x$word)     x <- x[order(x$frq), ]     rownames(x) <- NULL     x # 1. Add obvious dataset names documented to the WORDLIST     datanames = gsub('\\\\.R$', '', gsub('^data_', '', dir('./R', pattern = '^data_.*R')))     datanames = datanames[!grepl('aaaaaaaaaaaaa|xxxxxxxxxx', datanames)]     # 2. Add names of functions to the WORDLIST     funcnames = EJAM:::functions_in_pkg( 'EJAM' )$object     wordlist = readLines('inst/WORDLIST')     wordlist = sort(unique(union(wordlist, c(datanames, funcnames))))     # Write the revised list of words to the file     writeLines(wordlist, 'inst/WORDLIST')"},{"path":"https://usepa.github.io/EJAM-open/articles/dev_update_documentation.html","id":"website-web-pages-providing-all-of-the-above-in-html-format","dir":"Articles","previous_headings":"Updating package documentation","what":"Website: web pages providing all of the above in html format","title":"Updating Documentation","text":"web-based documentation pages updated right edited/created. pkgdown-based webpages updated someone managing package, follows: first step updating web pages updating yml file. web-based documentation pages organized file called _pkgdown.yml – see usethis::edit_pkgdown_config() – specifies contents webpages documentation, names vignettes files shown list articles, functions included reference pages index, etc. new removed renamed functions/ vignettes/ datasets, changes exported, require edits .yml file. pkgdown-based webpages updated someone managing package, use update_pkgdown() function found data-raw/datacreate_0_UPDATE_ALL_DOCUMENTATION_pkgdown.R source() file use function defines. Via function, pages get rebuilt pkgdown R package, based files documentation .R .md files. information using pkgdown package create documentation form webpages, see pkgdown articles. documentation created/updated using roxygen2 pkgdown R packages, read information .R files R folder, .Rmd file vignettes (aka “articles”) vignettes folder, _pkgdown.yml file root folder source package. roxygen2 package reads .R files create .Rd files man/ directory. pkgdown package uses files well DESCRIPTION others, generate website package, first created files docs/ folder, published via github actions github repository settings, hosted GitHub Pages. packages devtools usethis also relevant. package’s github repository settings define branch folder hold html files deployment (see github pkgdown documentation ) package’s Github Actions can used deploy webpages triggered event like push main branch, example. depending folder publish/deploy , might remove folder .gitignore case listed via pkgdown usethis function.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"how-to-analyze-proximity-using-ejam","dir":"Articles","previous_headings":"","what":"HOW TO ANALYZE PROXIMITY USING EJAM","title":"Comparing Distances (Choosing a Radius)","text":"outline use key functions provided . examples discussion background information considerations selecting radius. Also see list functions related comparing distances.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"residential-population-group-percentages-by-distance-at-block-group-resolution","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"RESIDENTIAL POPULATION GROUP PERCENTAGES BY DISTANCE AT BLOCK GROUP RESOLUTION","title":"Comparing Distances (Choosing a Radius)","text":"easiest analyze distance increments based blockgroup’s average resident . Block resolution covered later section.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"overall-list-of-sites","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP PERCENTAGES BY DISTANCE AT BLOCK GROUP RESOLUTION > WITHIN ONE RADIUS","what":"Overall list of sites","title":"Comparing Distances (Choosing a Radius)","text":"OVERALL LIST sites whole, groups -represented within X mile radius vs Statewide? Example ejam2barplot() showing percent Asian among residents within 5 km 100 sites two times US rate overall","code":"out <- ejamit(testpoints_100, radius = 3.1) ejam2ratios(out) #>  #>  #> Average Resident in Place(s) Analyzed vs US or State #>                       Ratio_to_US_avg Ratio_to_State_avg #> Demog.Ind.                        1.2                1.2 #> Suppl Demog.Ind.                  1.0                1.0 #> %Low-inc.                         1.0                1.1 #> %Limited English                  1.6                1.2 #> %Unemployed                       1.1                1.1 #> %< High School                    1.2                1.1 #> %< age 5                          1.1                1.1 #> %> age 64                         0.8                0.8 #> %POC                              1.5                1.2 #> %Hispanic                         1.5                1.1 #> %Black NHA                        1.1                1.4 #> %Asian NHA                        2.5                1.4 #> %AmerIndian/AK NHA                0.5                0.6 #> %Hawaiian/PI NHA                  2.4                1.1 #> %Other race NHA                   1.3                1.1 #> %multirace NH                     1.1                1.0 #> %White NHA                        0.7                0.8 #> PM2.5                             1.2                1.1 #> Ozone                             1.1                1.0 #> NO2                               1.4                1.3 #> Diesel PM                         2.0                1.5 #> Toxic Releases to Air             0.5                1.0 #> Traffic                           2.6                1.7 #> %pre-1960                         1.4                1.3 #> NPL                               2.8                1.8 #> RMP                               1.3                1.2 #> TSDF                              3.3                1.8 #> UST                               1.7                1.7 #> NPDES                             0.1                2.1 #> Drinking                          2.5                3.0 ejam2barplot(out)"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"just-one-site","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP PERCENTAGES BY DISTANCE AT BLOCK GROUP RESOLUTION > WITHIN ONE RADIUS","what":"Just one site","title":"Comparing Distances (Choosing a Radius)","text":"JUST ONE SITE, groups -represented within X mile radius vs Statewide? Example ejam2barplot() showing percent non-Hispanic White Alone among residents within 5 km one site 1.6 times US rate overall","code":"out1 <- ejamit(testpoints_100[2, ], radius = 3.1) ejam2ratios(out1) ejam2barplot(out1)"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"site-by-site-comparison","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP PERCENTAGES BY DISTANCE AT BLOCK GROUP RESOLUTION > WITHIN ONE RADIUS","what":"Site by site comparison","title":"Comparing Distances (Choosing a Radius)","text":"groups -represented SITE, within X mile radius vs Statewide Plot compare sites, just one residential population indicator plot shows % low income among residents sites 5 6 twice relevant State average. near average several sites, less half State average sites 4 10. Example ejam2barplot_sites()","code":"out <- testoutput_ejamit_10pts_1miles x = round(data.frame(out$results_bysite)[, c(\"ratio.to.state.avg.pctlowinc\", \"ratio.to.state.avg.pctmin\")], 2) names(x) = fixcolnames(names(x),\"r\",\"shortlabel\") x = data.frame(sitenumber = 1:NROW(x), x) x #>    sitenumber Ratio.to.State.avg..Low.inc. Ratio.to.State.avg..POC #> 1           1                         0.56                    1.41 #> 2           2                         0.72                    0.58 #> 3           3                         0.81                    1.19 #> 4           4                         0.63                    0.39 #> 5           5                         1.44                    0.64 #> 6           6                         1.09                    0.84 #> 7           7                         1.25                    1.17 #> 8           8                         0.22                    0.69 #> 9           9                         0.49                    1.18 #> 10         10                         1.13                    1.19 ejam2barplot_sites(out, \"ratio.to.state.avg.pctlowinc\", topn = 10, sortby = F) ## For raw values at key sites: # ejam2barplot_sites(out, \"pctlowinc\")"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"overall-list-of-sites-1","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP PERCENTAGES BY DISTANCE AT BLOCK GROUP RESOLUTION > WITHIN MULTIPLE DISTANCES - COMPARING RADIUS CHOICES","what":"Overall list of sites","title":"Comparing Distances (Choosing a Radius)","text":"OVERALL LIST sites whole, groups -represented within X mile radius vs Statewide? See just table See plot Example using ejam2barplot_distances()","code":"radii <- c(1,2,3,10) #radii <- c(1, 10) #  quicker example pts <- testpoints_100[10:12, ] x <- ejamit_compare_distances(pts, radii = radii, quiet = TRUE, plot = FALSE) #> Analyzing 3 points, radius of 1 miles around each. #> doaggregate is predicted to take 24 seconds  #> Analyzing 3 points, radius of 2 miles around each. #> doaggregate is predicted to take 24 seconds  #> Analyzing 3 points, radius of 3 miles around each. #> doaggregate is predicted to take 24 seconds  #> Analyzing 3 points, radius of 10 miles around each. #> doaggregate is predicted to take 24 seconds  #>  #>                                         1   2   3  10 #> Ratio to State avg %Hispanic          0.4 0.8 1.1 1.0 #> Ratio to State avg %Black NHA         4.4 2.7 1.8 0.7 #> Ratio to State avg %Asian NHA         1.5 1.5 1.5 1.4 #> Ratio to State avg %AmerIndian/AK NHA 0.2 0.2 0.4 0.5 #> Ratio to State avg %Hawaiian/PI NHA   0.8 1.6 1.3 1.0 #> Ratio to State avg %Other race NHA    0.7 0.9 0.7 0.7 #> Ratio to State avg %multirace NH      1.4 1.0 0.8 0.9 #> Ratio to State avg %White NHA         0.6 0.7 0.7 0.9 # x <- ejamit_compare_distances(pts, radii = radii, quiet = TRUE) # in which default is plot=TRUE # or  ejam2barplot_distances(x) #>  #> Indicators that increase the most as you get closer: #> [1] \"Ratio to State avg % Black or African American (non-Hispanic, single race)\""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"residential-population-group-data-at-block-group-resolution","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"RESIDENTIAL POPULATION GROUP DATA AT BLOCK GROUP RESOLUTION","title":"Comparing Distances (Choosing a Radius)","text":"EJAM functions use distance average resident block group, calculated distance block’s internal point uses approximation within block average resident residents far internal point. typical distances analyzed EJAM (e.g., 3 mile radius, 5 km) good approximation, since 2% US blocks larger 1 square mile. need high spatial resolution (block block) plots indicator function distance, can directly work getblocksnearby() just use function plot_distance_by_pctd(). uses distance site block’s internal point (like centroid) rather just distance average resident block group.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"how-residential-population-group-percentages-at-one-site-vary-as-a-continuous-function-of-distance","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP DATA AT BLOCK GROUP RESOLUTION","what":"How residential population group percentages at ONE SITE vary as a continuous function of distance","title":"Comparing Distances (Choosing a Radius)","text":"Example area %Black high within 1 mile drops 3 miles away Example using plot_distance_by_pctd() Example area higher %Hispanic go 10 30 miles away specific point Example using plot_distance_by_pctd()","code":"pts <- testpoints_100[3,] y <- plot_distance_by_pctd(   getblocksnearby(pts, radius = 10, quiet = T),   score_colname = \"pctnhba\",   sitenumber = 1) #> Analyzing 1 points, radius of 10 miles around each. #browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 0.5)) #browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 3)) pts <- data.table::data.table(lat = 45.75464, lon = -94.36791)  y <- plot_distance_by_pctd(pts,                       sitenumber = 1, score_colname = \"pcthisp\") #> Analyzing 1 points, radius of 30 miles around each. # browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 10)) # browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 30))"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"step-through-all-the-sites-to-see-an-indicator-versus-distance-at-each","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP DATA AT BLOCK GROUP RESOLUTION","what":"Step through all the sites to see an indicator versus distance at each","title":"Comparing Distances (Choosing a Radius)","text":"Examples sites analyzed show conclusions sensitive radius used. choice radius proximity analysis sites lead different conclusion depending radius analyzed, single distance checked reported . relationship distance X percent residential population group within X miles can positive, negative, roughly flat, etc., depending site group. residential population group percentage may US average State average within given distance site. ten sites analyzed example, wide range patterns found: site 5, % low income extremely high close site falls sharply distance remains quite high (still 80th percentile US State) even within 4 miles. site number 2 , % low income close site around 80th percentile State, around US 80th percentile within 1 mile, falls State US average within around 2 3 miles site. site 7, average 8 miles, US State averages within 10 miles. site 9, can average State /US, depending distance, never high 80th percentiles. sites 2, 3, 4, 10, % low income far US State averages within distance shown . Block block details also easy view map nearby blocks, shown section plotblocksnearby() details blocks near one site.","code":"pts <- testpoints_10 s2b <- getblocksnearby(pts, radius = 10, quiet = T) for (i in 1:NROW(pts)) {   plot_distance_by_pctd(s2b, sitenumber = i, score_colname = \"pctlowinc\")   readline() # hit any key to step through the plots }"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"cumulative-distribution-plots-of-groups-as-a-continuous-function-of-distance","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > RESIDENTIAL POPULATION GROUP DATA AT BLOCK GROUP RESOLUTION","what":"Cumulative Distribution plots of groups as a continuous function of distance","title":"Comparing Distances (Choosing a Radius)","text":"residents within area analyzed, see mostly nearby others away, CDF plot. shows share residential population group residing various distances sites, distance nearest site x axis cumulative share group y axis (residents within 10 miles, percent site within X miles?). compares everyone nearby just among percent low income, shows , example, larger share low income population within 10 miles actually live within 6 miles case everyone within 10 miles. words, within 10 mile radius circles, low income residents closer site non-low income residents residents. Example using plot_distance_cdf_by_group()","code":"# out <- ejamit(testpoints_10, radius = 10) plot_distance_cdf_by_group(   out$results_bybg_people,   demogvarname = 'pctlowinc', demoglabel = 'Low Income')"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"mean-distance-by-residential-population-group","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"MEAN DISTANCE BY RESIDENTIAL POPULATION GROUP","title":"Comparing Distances (Choosing a Radius)","text":"analysis described looks residential population group percentages function distance. Another perspective provided looking distance function residential population group. means looking average distance whole distribution distances (proximities) among residents within single residential population group, one group time, comparing groups.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"overall-list-of-sites-2","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > MEAN DISTANCE BY RESIDENTIAL POPULATION GROUP","what":"Overall list of sites","title":"Comparing Distances (Choosing a Radius)","text":"Mean distance group, OVERALL LIST sites whole see table residential population indicators, showing mean distance group, compared distance residential population group: see barplot, comparing just race/ethnicity groups: Example using plot_distance_mean_by_group()","code":"out <- testoutput_ejamit_1000pts_1miles ## But try a larger radius to reveal more information: # out <- ejamit(testpoints_100, radius = 10)  # see a table of demog indicators distance_mean_by_group(out$results_bybg_people) #>                               group nearest nearer ratio avg_distance_for_group #> Demog.Ind.              Demog.Index   FALSE   TRUE 0.998                   0.69 #> Suppl Demog.Ind.   Demog.Index.Supp   FALSE   TRUE 0.997                   0.69 #> %Low-inc.                 pctlowinc   FALSE   TRUE 0.996                   0.69 #> %Limited English         pctlingiso   FALSE  FALSE 1.017                   0.70 #> %Unemployed           pctunemployed   FALSE   TRUE 1.000                   0.69 #> %< High School              pctlths   FALSE  FALSE 1.003                   0.69 #> %< age 5                  pctunder5   FALSE  FALSE 1.001                   0.69 #> %> age 64                 pctover64   FALSE  FALSE 1.007                   0.69 #> %POC                         pctmin   FALSE  FALSE 1.010                   0.69 #> %Hispanic                   pcthisp   FALSE  FALSE 1.013                   0.69 #> %Black NHA                  pctnhba   FALSE  FALSE 1.004                   0.69 #> %Asian NHA                  pctnhaa   FALSE   TRUE 1.000                   0.69 #> %AmerIndian/AK NHA       pctnhaiana    TRUE   TRUE 0.954                   0.66 #> %Hawaiian/PI NHA         pctnhnhpia   FALSE   TRUE 0.954                   0.66 #> %Other race NHA     pctnhotheralone   FALSE  FALSE 1.015                   0.70 #> %multirace NH            pctnhmulti   FALSE   TRUE 0.992                   0.68 #> %White NHA                  pctnhwa   FALSE   TRUE 0.990                   0.68 #>                    avg_distance_for_nongroup #> Demog.Ind.                              0.69 #> Suppl Demog.Ind.                        0.69 #> %Low-inc.                               0.69 #> %Limited English                        0.69 #> %Unemployed                             0.69 #> %< High School                          0.69 #> %< age 5                                0.69 #> %> age 64                               0.69 #> %POC                                    0.68 #> %Hispanic                               0.69 #> %Black NHA                              0.69 #> %Asian NHA                              0.69 #> %AmerIndian/AK NHA                      0.69 #> %Hawaiian/PI NHA                        0.69 #> %Other race NHA                         0.69 #> %multirace NH                           0.69 #> %White NHA                              0.69  # for just 1 indicator print(distance_mean_by_group(   out$results_bybg_people,    demogvarname = 'pctlowinc', demoglabel = 'Low Income')) #>                group nearest nearer ratio avg_distance_for_group #> Low Income pctlowinc    TRUE   TRUE 0.996                   0.69 #>            avg_distance_for_nongroup #> Low Income                      0.69 plot_distance_mean_by_group(out$results_bybg_people,                         demogvarname = names_d_subgroups,                        demoglabel = fixcolnames(names_d_subgroups, \"r\", \"shortlabel\")                        ) #>                              group nearest nearer ratio avg_distance_for_group #> %Hispanic                  pcthisp   FALSE  FALSE 1.013                   0.69 #> %Black NHA                 pctnhba   FALSE  FALSE 1.004                   0.69 #> %Asian NHA                 pctnhaa   FALSE   TRUE 1.000                   0.69 #> %AmerIndian/AK NHA      pctnhaiana    TRUE   TRUE 0.954                   0.66 #> %Hawaiian/PI NHA        pctnhnhpia   FALSE   TRUE 0.954                   0.66 #> %Other race NHA    pctnhotheralone   FALSE  FALSE 1.015                   0.70 #> %multirace NH           pctnhmulti   FALSE   TRUE 0.992                   0.68 #> %White NHA                 pctnhwa   FALSE   TRUE 0.990                   0.68 #>                    avg_distance_for_nongroup #> %Hispanic                               0.69 #> %Black NHA                              0.69 #> %Asian NHA                              0.69 #> %AmerIndian/AK NHA                      0.69 #> %Hawaiian/PI NHA                        0.69 #> %Other race NHA                         0.69 #> %multirace NH                           0.69 #> %White NHA                              0.69"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"site-by-site-comparison-1","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > MEAN DISTANCE BY RESIDENTIAL POPULATION GROUP","what":"Site by site comparison","title":"Comparing Distances (Choosing a Radius)","text":"Mean distance group, SITE, ratio mean everyone else nearby Ratios site, avg dist group / avg dist everyone else near site:","code":"out <- testoutput_ejamit_10pts_1miles ## But try a larger radius to reveal more information: # out <- ejamit(testpoints_10, radius = 31)  x = distance_by_group_by_site(out$results_bybg_people) x  # summary of closest group at each site and by how much data.frame(site = colnames(x),             closestgroup = rownames(x)[sapply(x, which.min)],             their_avg_distance_as_pct_of_everyone_elses = round(100 * sapply(x, min, na.rm = TRUE), 0) )"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"background-and-overview-of-issues-in-proximity-distance-or-radius","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"BACKGROUND AND OVERVIEW OF ISSUES IN PROXIMITY, DISTANCE, OR RADIUS","title":"Comparing Distances (Choosing a Radius)","text":"Distance potential source environmental risk often used simple proxy actual exposure risk, data limited. Proximity analysis uses distance (far away) site, just opposite proximity (near) site. Conclusions can sensitive choice radius, one radius reported , shown [Step sites see indicator versus distance ].","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"groups-percentage-at-each-distance-versus-distance-for-each-population-group","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > BACKGROUND AND OVERVIEW OF ISSUES IN PROXIMITY, DISTANCE, OR RADIUS","what":"Group’s percentage at each distance versus distance for each population group","title":"Comparing Distances (Choosing a Radius)","text":"Two basic ways report residential population percentages risk 1) showing residential population percentage function risk, 2) showing risk function residential population group: Residential population group percentage function risk (proximity): Many proximity analyses report percentage distance risk bin, % low income within 3 miles point. expresses residential population shares function proximity risk. Sometimes distance risk bins used, areas risk cutoff. sometimes instead continuous measure percentage, residential population data used categorize places bins, areas top quartile poverty rates. Risk (proximity) function residential population group: different way present information report distance risk function residential population group – expresses distance within residential population group, average distance group full distribution risk within group.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"radius-radii-or-continuous-distance","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > BACKGROUND AND OVERVIEW OF ISSUES IN PROXIMITY, DISTANCE, OR RADIUS","what":"Radius, radii, or continuous distance?","title":"Comparing Distances (Choosing a Radius)","text":"Proximity distance binary, categorical, continuous metrics: Proximity analysis often relied picking single distance, radius, analyzing conditions within radius, residents live within 3 miles point regulated facility located. Sometimes analysis look two even three distances. sophisticated analyses, distance treated continuous measure. tools like EJScreen use proximity metric based inverse distance (1/d) provide proximity score gets higher distance gets smaller. many EJ analyses still use single distance analyze conditions within distance. EJAM makes easier types analysis, conclusions can sensitive choice single radius, metrics methods provide different perspectives reveal richer picture people actually live relation potential sources exposure risk.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"comparisons-within-what-distances-or-to-what-reference-areas","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > BACKGROUND AND OVERVIEW OF ISSUES IN PROXIMITY, DISTANCE, OR RADIUS","what":"Comparisons within what distances or to what reference area(s)?","title":"Comparing Distances (Choosing a Radius)","text":"tricky issue proximity analysis: subtle vital difference proximity analysis using single radius (binary distance) analysis using continuous distance. One way think two aspects degrees proximity consider analyzing residential population groups within certain fixed distance (radius) single facility point (whole set facilities). two ways summarizing proximity complementary: groups tend live nearby sense within radius versus outside radius selected? words, groups “-represented” within X miles site? treats proximity yes/, binomial question – resident nearby . focus whether someone anywhere within 3 miles, say, ignore differences 1, 2, 3 miles away. proximity analysis tended look type summary. Among residents within X miles site, groups live especially close facility? question recognizes proximity continuous variable, focuses difference 1 mile, 1.5 miles, etc. However, looks residents within X miles radius area analyzed, fails recognize groups tend live 3 miles away, example. perspective take account groups -represented within original total radius near site. functions like distance_mean_by_group() distance_by_group_by_site() second two types analysis. report, among anywhere inside radius, groups closer site. specific location, example, one residential population group underrepresented within 3 miles, group still might live right next facility case average distance higher group function counts within radius analyzed. location, opposite occur – one group -represented within 3 miles, still might live community 2.9 miles away site – mean distance site average greater (proximity score lower) groups within 3 miles site. question whether compare Statewide Nationwide urban/rural reference averages percentiles related question look distances, exposures risk, just like relates look residential population group percentages. One look percentage rate within 1 mile, 2 miles, etc. way one looking county overall, state overall, eventually nation overall. Selecting single radius selecting single reference area done recognition questions one actually trying answer, understanding impacts vary distance particular type facility source potential risk. one comparing residential population groups terms distance (risk level), one comparing % distance (risk level), implicit assumption “expected” rate, /“equitable” “proportionate” % ratio risk.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"choice-of-radius-and-uncertainty-due-to-a-small-radius-where-blocks-are-large","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"CHOICE OF RADIUS AND UNCERTAINTY DUE TO A SMALL RADIUS WHERE BLOCKS ARE LARGE","title":"Comparing Distances (Choosing a Radius)","text":"Choosing radius (polygon) small relative local Census blocks can lead significant uncertainty EJAM estimates, important understand details one wants use small radius especially rural (low population density) areas. help consider uncertainty, EJAM reports many block centroids found inside area (inside circular buffer defined selected radius, inside polygon shapefile). count blocks found column spreadsheet output provided web app also table called results_bysite one output ejamit() function. also Map sites popup saying many blocks found nearby therefore might uncertainty counts nearby. details distance adjustments, overlaps circles, etc. function prints large amount diagnostic information, provides barplot histogram showing case almost none 1000 sites zero blocks within mile roughly 10-15% 10 blocks nearby similar share 10-29 blocks nearby.","code":"# out <- ejamit(testpoints_1000, radius = 1) # out$results_bysite$blockcount_near_site out <- testoutput_ejamit_1000pts_1miles  barplot(   table(cut(     out$results_bysite$blockcount_near_site,       c(-1, 9, 29, 100, 1000)   )),   names.arg = c(\"< 10 blocks\", \"10-29\", \"30-100\", \"> 100 blocks\"),   main = \"How many blocks are within 1 mile of these 1,000 facilities?\",   ylab = \"# of facilities\",    xlab = \"# of blocks nearby\" ) # (Printed information is lengthy)    getblocks_diagnostics(   testoutput_getblocksnearby_1000pts_1miles,   # getblocksnearby(testpoints_1000, radius = 1, quiet = T),   detailed = T, see_pctiles = T   )"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"suggestions-on-radius-and-uncertainty","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > CHOICE OF RADIUS AND UNCERTAINTY DUE TO A SMALL RADIUS WHERE BLOCKS ARE LARGE","what":"Suggestions on radius and uncertainty","title":"Comparing Distances (Choosing a Radius)","text":"suggestions consider radius relation uncertainty blocks large: closer look uncertainty care communicating uncertainty may needed circle polygon contains fewer 30 block centroids. especially important contains fewer 10, essential contains 1 zero block centroids. Using radius 5 miles raise issues 99% US locations EPA-regulated facilities found. radius 3 miles might need closer look 1% 5% typical sites US. radius 1 mile less requires caution understanding issues significant share locations US (1 4 locations might need closer look check uncertainties). 0.5 mile radius used without cautious interpretation offline analysis locations EPA-regulated facilities located. 0.25 mile radius used case--case basis location examined individually methods likely suited analysis sites. considerations explained discussion . Residential population group counts percentages environmental indicators calculated block group residential population data environmental indicators estimate fraction block group inside site. proximity analysis means circle drawn around point using radius, shapefiles similar approach used. either case, fraction block group counted inside area analyzed based block centroids (technically called block “internal point”) inside circle polygon. residents block assumed inside block centroid inside. exactly true unless block edge circle polygon. Even ones edge, centroids just outside just inside shape, contributions blocks -counted -counted, tend cancel sense unlikely -counted, example. Still, large share block points circle polygon blocks entirely inside, uncertainty higher vast majority blocks entirely inside. words, circle polygon large number blocks , uncertainty lower small fraction along edge bisected. radius 3 miles used, area 28 square miles. blocks location 0.28 square miles , circle might contain partly contain 100 blocks. dataset used EJAM called blockwts column called block_radius_miles radius block circular, created based area = pi * block_radius_miles^2 block_radius_miles = sqrt(area / pi) area square miles.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"table-of-distances-between-each-site-and-each-block","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > CHOICE OF RADIUS AND UNCERTAINTY DUE TO A SMALL RADIUS WHERE BLOCKS ARE LARGE > Details on the blocks found near one site","what":"Table of distances between each site and each block","title":"Comparing Distances (Choosing a Radius)","text":"Use getblocksnearby() quickly find residents/blocks within specified distance, table distances sites nearby blocks.","code":"sitepoints <- testpoints_10[1:2, ]  sites2blocks <- getblocksnearby(   sitepoints = sitepoints,   radius = 3.1 ) #> Analyzing 2 points, radius of 3.1 miles around each. #> Finding Census blocks with internal point within  3.1  miles of the site (point), for each of 2  sites (points)... #> Stats via getblocks_diagnostics(), but NOT ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.02554516  #> max distance before adjustment:  6.299561 head(sites2blocks) #> Key: <blockid> #>    ejam_uniq_id blockid distance    blockwt  bgid distance_unadjusted #>           <int>   <int>    <num>      <num> <int>               <num> #> 1:            1  917797 3.004690 0.06443071 32583            3.004690 #> 2:            1  917798 3.008581 0.03795234 32583            3.008581 #> 3:            1  917799 2.958068 0.06884378 32583            2.958068 #> 4:            1  917800 2.911103 0.04942630 32583            2.911103 #> 5:            1  917801 2.935066 0.05560459 32583            2.935066 #> 6:            1  917802 2.840296 0.12444837 32583            2.840296"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"detailed-stats-on-blocks-found-near-sites","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > CHOICE OF RADIUS AND UNCERTAINTY DUE TO A SMALL RADIUS WHERE BLOCKS ARE LARGE > Details on the blocks found near one site","what":"Detailed stats on blocks found near site(s)","title":"Comparing Distances (Choosing a Radius)","text":"Example getblocks_diagnostics() see tables histogram barplot many blocks within 3.1 miles 2 sites","code":"x <- getblocks_diagnostics(sites2blocks) #>  #>    DISTANCES FROM BLOCKS (AND RESIDENTS) TO SITES (AND FOR CLOSEST SITE)  #>  #> 3.099399 miles is max. distance to block internal point (distance_unadjusted)    #> 3.099399 miles is max. distance to average resident in block (distance reported)    #> 0.02554516 miles is shortest distance to block internal point (distance_unadjusted)    #> 0.02554516 miles is shortest distance to average resident in block (distance reported)    #> 0 block distances were adjusted (these stats may count some blocks twice if adjusted at 2+ sites) #>   0 block distances were adjusted up (reported dist to avg resident is > dist to block internal point) #>   0 block distances were adjusted down (reported < unadjusted) #> 0 unique sites had one or more block distances adjusted due to large block and short distance to block point #>  #>   BLOCK COUNTS PER SITE (FEWER MEANS HIGHER UNCERTAINTY AT THOSE SITES) #>  #> 651 blocks are near the avg site or in avg buffer #> (based on their block internal point, like a centroid) #>  #>   sites    blocks_per_site #> 1     0         Not even 1 #> 2     0       some but <10 #> 3     0              10-29 #> 4     2 at least 30 blocks #>  #>   BLOCK COUNTS TOTAL AND IN OVERLAPS OF AREAS (MULTIPLE SITES FOR SOME RESIDENTS)  #>  #> 1,302 actual unique blocks total #> 1,302 blocks including double-counting in overlaps, #>              in final row count (block-to-site pairs table) #> 1 is ratio of blocks including multicounting / actual count of unique blocks #> 0% of unique blocks could get counted more than once #>              because those residents are near two or more sites #>              (assuming they live at the block internal point #>  #>   SITE COUNTS TOTAL AND IN OVERLAPS OF AREAS (MULTIPLE SITES FOR SOME RESIDENTS) #>  #> 2 unique output sites #>  #> 1,302 blocks (and their residents) have exactly 1 site nearby  #> 0 blocks (and their residents) have exactly 2 sites nearby  #> 0 blocks (and their residents) have exactly 3 sites nearby # x <- getblocks_summarize_blocks_per_site(sites2blocks)  # print(x) shows more info returned invisibly"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"map-1-site-to-inspect-the-blocks-nearby","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > CHOICE OF RADIUS AND UNCERTAINTY DUE TO A SMALL RADIUS WHERE BLOCKS ARE LARGE > Details on the blocks found near one site","what":"Map 1 site to inspect the blocks nearby","title":"Comparing Distances (Choosing a Radius)","text":"Clicking block point provides popup window showing information :","code":"blockfips: 131850102031056 blockid: 1788737 blocklat: 30.9913730000001 blocklon: -83.3753460999999 distance: 1.03614020347595 distance_unadjusted: 1.03614020347595 blockwt: 0 blockpop: 0 pop_nearby: 6237 bgpop: 1281 bgfips: 131850102031 bgid: 64286 ejam_uniq_id: 1 blockcount_near_site: 219 x <- plotblocksnearby(testpoints_10[1, ], radius = 3, returnmap = F) #> Analyzing 1 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 1  sites (points)... #> Stats via getblocks_diagnostics(), but NOT ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.07738988  #> max distance before adjustment:  5.904633 # Set returnmap= TRUE to actually return a leaflet map"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"population-density-why-the-avg-site-and-avg-resident-are-so-different","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM","what":"POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","title":"Comparing Distances (Choosing a Radius)","text":"Reporting EJAM information summarized average site gives different answers reporting average resident near one sites. average site average resident completely different residents live near just sites – ones higher population density – one using fixed radius sites, 3 miles site. Taking average sites gives equal weight site, even ones residents around . Taking average residents near sites gives equal weight person, conditions near certain sites affect people influence average.","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"sites-vary-widely-in-count-of-blocks-nearby-depending-on-population-density-which-is-closely-related-to-block-area-in-square-miles","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","what":"Sites vary widely in count of blocks nearby, depending on population density (which is closely related to block area in square miles)","title":"Comparing Distances (Choosing a Radius)","text":"blocks near site far many blocks typically near given site (population density varies) many sites near block (residents > 1 site nearby) Find blocks nearby site blocks within radius 1/4 mile. Hundreds often within 1 mile, sometimes handful even zero.","code":"out <- testoutput_ejamit_100pts_1miles cat(\"  \", popshare_p_lives_at_what_pct(out$results_bysite$pop, p = 0.50, astext = TRUE), \"\\n\") #>    12% of places account for 50% of the total population (approx.) cat(\"  \", popshare_at_top_n(out$results_bysite$pop, c(1, 5, 10), astext = TRUE), \"\\n\\n\") #>    1, 5, 10 places account for 10%, 28%, 43% of the total population radius <- 3 sitepoints <- testpoints_100 sites2blocks <- getblocksnearby(sitepoints, radius, quadtree = localtree, quiet = TRUE) #> Analyzing 100 points, radius of 3 miles around each. # testoutput_getblocksnearby_10pts_1miles is also available as an example names(sites2blocks) #> [1] \"ejam_uniq_id\"        \"blockid\"             \"distance\"            #> [4] \"blockwt\"             \"bgid\"                \"distance_unadjusted\" library(data.table) #> Warning: package 'data.table' was built under R version 4.4.3  s2b_stats <- sites2blocks[ , .(   avgDistance = round(mean(distance), 2),   blocksfound = .N,    blocks_within_1mile = sum(distance <= 1),   blocks_within_0.75   = sum(distance <= 0.75),   blocks_within_0.25  = sum(distance <= 0.25) ), by = 'ejam_uniq_id'][order(blocksfound), ]  setorder(s2b_stats, ejam_uniq_id) head(s2b_stats) #>    ejam_uniq_id avgDistance blocksfound blocks_within_1mile blocks_within_0.75 #>           <int>       <num>       <int>               <int>              <int> #> 1:            1        1.52        1493                 470                307 #> 2:            2        1.82        3842                 651                375 #> 3:            3        2.02         448                  18                 10 #> 4:            4        1.97         182                  14                 11 #> 5:            5        1.95         575                  59                 32 #> 6:            6        1.87         274                  24                  4 #>    blocks_within_0.25 #>                 <int> #> 1:                 20 #> 2:                 53 #> 3:                  1 #> 4:                  2 #> 5:                  3 #> 6:                  0"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"cdf-of-how-many-blocks-are-nearby-a-site","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","what":"CDF of how many blocks are nearby a site","title":"Comparing Distances (Choosing a Radius)","text":"many blocks near 100 facilities?","code":""},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"histogram-and-table-showing-how-many-blocks-are-nearby-a-site","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","what":"Histogram and table showing how many blocks are nearby a site","title":"Comparing Distances (Choosing a Radius)","text":"Example Histogram table showing many blocks within 3 miles site","code":"hist(sites2blocks[,.N, by = \"ejam_uniq_id\"][, N], 20,       xlab = \"How many blocks are nearby?\",       ylab = \"Frequency (# of sites)\",       main = \"A given site may have zero to hundreds of blocks nearby\",       sub = \"A typical site in this example has about 100 blocks nearby\") DT::datatable(s2b_stats,  rownames = FALSE) # more summaries showing there may be only 1 block or hundreds within 1 mile"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"summary-stats-on-how-many-blocks-are-within-each-radius","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","what":"Summary stats on how many blocks are within each radius","title":"Comparing Distances (Choosing a Radius)","text":"","code":"# Just within 1 mile summary(sites2blocks[distance <= 1, .N, by = \"ejam_uniq_id\"][, N]) # or quantile(s2b_stats$blocks_within_1mile, probs = (0:4) * 0.25)  # Within each distance summary(s2b_stats) # t(summary(s2b_stats))"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"map-all-sites-with-popup-at-each-saying-how-many-blocks-were-found-nearby","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT","what":"Map all sites with popup at each saying how many blocks were found nearby","title":"Comparing Distances (Choosing a Radius)","text":"Example mapfast() seeing many blocks site","code":"## done previously: # radius <- 3 # sitepoints <- testpoints_100  out <- ejamit(sitepoints = sitepoints,                radius = radius, include_ejindexes = F) #> Finding blocks nearby. #> Analyzing 100 points, radius of 3 miles around each. #> Aggregating at each site and overall. #> doaggregate is predicted to take 24 seconds #> Warning in batch.summarize(sitestats = out$results_bysite, popstats = #> out$results_bybg_people, : specified threshnames not all found in sitestats #> colnames or other problem with thresholds or threshgroups, so using defaults  few <- out$results_bysite$blockcount_near_site < 30  mapthis <- cbind(   sitepoints,    out$results_bysite[, c(     \"pop\", \"bgcount_near_site\", \"blockcount_near_site\"     )],   NOTE = ifelse(few, \"< 30 blocks here\", \"\")   )  # Show in red the sites with very few blocks nearby, suggesting more uncertainty in residential population group counts  mm <- mapfast(mapthis, radius = radius, color = 'navy') mm |> leaflet::addCircles(     lng = mapthis$lon[few],      lat = mapthis$lat[few],      color = \"red\", radius = radius * 2 * meters_per_mile,     popup = popup_from_any(mapthis[few, ]) )"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"some-places-have-very-few-if-any-blocks-within-1-mile","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT > Map all sites with popup at each saying how many blocks were found nearby","what":"Some places have very few – if any – blocks within 1 mile","title":"Comparing Distances (Choosing a Radius)","text":"","code":"tail(s2b_stats[order(s2b_stats$blocks_within_1mile, decreasing = T),                 c('ejam_uniq_id', 'blocks_within_1mile')], 3)  #>    ejam_uniq_id blocks_within_1mile #>           <int>               <int> #> 1:           81                   5 #> 2:           97                   1 #> 3:           23                   0"},{"path":"https://usepa.github.io/EJAM-open/articles/distances.html","id":"some-places-have-hundreds-nearby-a-1-mile-radius-is-huge-within-a-dense-urban-area","dir":"Articles","previous_headings":"HOW TO ANALYZE PROXIMITY USING EJAM > POPULATION DENSITY – WHY THE AVG SITE AND AVG RESIDENT ARE SO DIFFERENT > Map all sites with popup at each saying how many blocks were found nearby","what":"Some places have hundreds nearby: a 1 mile radius is huge within a dense urban area","title":"Comparing Distances (Choosing a Radius)","text":"Within 1 mile radius, blocks found tend 2/3 mile site center.","code":"head(s2b_stats[order(s2b_stats$blocks_within_1mile, decreasing = T),                 c('ejam_uniq_id', 'blocks_within_1mile')], 3) #>    ejam_uniq_id blocks_within_1mile #>           <int>               <int> #> 1:           89                 749 #> 2:            2                 651 #> 3:            1                 470 densest <- s2b_stats$ejam_uniq_id[order(   s2b_stats$blocks_within_1mile, decreasing = T)][1] leastdense <- s2b_stats$ejam_uniq_id[order(     s2b_stats$blocks_within_1mile, decreasing = F)][1] #> Analyzing 1 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 1  sites (points)... #> Stats via getblocks_diagnostics(), but NOT ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  0.03130003  #> max distance before adjustment:  5.053461 plotblocksnearby(sitepoints = sitepoints[densest, ]) #> Analyzing 1 points, radius of 3 miles around each. #> Finding Census blocks with internal point within  3  miles of the site (point), for each of 1  sites (points)... #> Stats via getblocks_diagnostics(), but NOT ADJUSTING UP FOR VERY SHORT DISTANCES:  #> min distance before adjustment:  1.059524  #> max distance before adjustment:  4.755771 plotblocksnearby(sitepoints = sitepoints[ leastdense, ]) summary(s2b_stats$avgDistance) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.830   1.815   1.930   1.873   2.005   2.230"},{"path":"https://usepa.github.io/EJAM-open/articles/naics.html","id":"using-naics-and-sic-codes-to-locate-facilities-by-industry","dir":"Articles","previous_headings":"","what":"USING NAICS AND SIC CODES TO LOCATE FACILITIES BY INDUSTRY","title":"NAICS (Industries)","text":"EJAM helps select regulated sites based industrial classification, using NAICS SIC code. Finding right NAICS finding right sites NAICS complicated. requires understanding NAICS system FRS dataset, functions EJAM help find use NAICS codes. NAICS/SIC categories can explored ways: Key EJAM functions using NAICS/SIC NAICS.com website extensive information NAICS SIC EPA FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC. EPA APIs exist can used similar queries. key functions include regid_from_naics(), latlon_from_naics(), frs_from_naics(), naics_findwebscrape(), naics_categories(). functions can help find EPA FRS sites based naics codes titles. rely frs_by_naics (data.table), naics_from_any() querying code title category. Files dataset examples related NAICS: Important points: Note large fraction FRS sites (obtained use EJAM) lack NAICS code! Note EJAM may query FRS sites differently FRS search tool query tools . Note (NAICS.com) reports many businesses given 6-digit category FRS shows, might due FRS including EPA-regulated sites also due data gaps. Note difference children = TRUE children = FALSE EJAM functions like latlon_from_naics() Note searching 6-digit code misses parent categories may want. FRS data NAICS site inconsistent many digits reported NAICS (explained ). given site might listed FRS one NAICS codes various lengths, parent code (large grouping), detailed code (6-digit), combination codes subcategories. title, like “Petroleum Refineries,” may assigned NAICS system category also subcategory, codes 32411 324110. function naics_from_any() shows codes title exist NAICS system. Also, certain terms appear online description NAICS title NAICS – function naics_findwebscrape() helps cases, e.g., compare : Compare also : Using naics_findwebscrape() finds 6-digit codes match title description, find codes found naics_from_any() query description, lead missing facilities sense 6-digit code cover sites listed FRS 5-digit code Petroleum Refineries (6-digit). important note searching 6-digit code misses parent categories may include sites expect find: frs_from_naics() used frs_from_naics(\"324110\", children = F)[,1:5] finds hundred sites, fails find sites find using frs_from_naics() used frs_from_naics(\"32411\", children = F)[,1:5] code example shows FRS dataset facilities listed 5-digit “32411” code , 6-digit “324110” code , codes:","code":"topic = \"naics\" cbind(data.in.package  = sort(grep(topic, EJAM:::datapack()$Item, value = T))) cbind(files.in.package = sort(basename(testdata(topic, quiet = T)))) naics_findwebscrape(\"cement\")  naics_from_any(\"cement\") naics_findwebscrape(\"refiner\") # reports \"324110\" (Petroleum Refineries) and other related industries, but not the 5-digit \"32411\" (also Petroleum Refineries).  naics_from_any(\"refiner\") # reports \"324110\" and \"32411\" but not other related industries. hasboth = intersect( frs_from_naics(\"32411\",  children = F)[,1:5]$REGISTRY_ID, frs_from_naics(\"324110\", children = F)[,1:5]$REGISTRY_ID ) hasonly6digit = setdiff( frs_from_naics(\"32411\",  children = F)[,1:5]$REGISTRY_ID, frs_from_naics(\"324110\", children = F)[,1:5]$REGISTRY_ID ) hasonly5digit = setdiff( frs_from_naics(\"324110\", children = F)[,1:5]$REGISTRY_ID, frs_from_naics(\"32411\",  children = F)[,1:5]$REGISTRY_ID ) length(hasonly5digit)  # Most of the FRS sites here #> [1] 362 length(hasonly6digit) #> [1] 12 length(hasboth) #> [1] 12"},{"path":"https://usepa.github.io/EJAM-open/articles/naics.html","id":"examples-of-some-naicssic-functions","dir":"Articles","previous_headings":"USING NAICS AND SIC CODES TO LOCATE FACILITIES BY INDUSTRY","what":"Examples of some NAICS/SIC functions","title":"NAICS (Industries)","text":"","code":"naics_from_any(naics_categories(3))[order(name),.(name,code)][1:10,] naics_from_any(naics_categories(3))[order(code),.(code,name)][1:10,]  naics_from_code(211) naicstable[code==211,] naics_subcodes_from_code(211) naics_from_code(211,  children = TRUE) naicstable[n3==211,] NAICS[211][1:3] # wrong NAICS[NAICS == 211] NAICS[\"211 - Oil and Gas Extraction\"]  naics_from_any(\"plastics and rubber\")[,.(name,code)] naics_from_any(326) naics_from_any(326, children = T)[,.(code,name)] naics_from_any(\"plastics\", children=T)[,unique(n3)] naics_from_any(\"pig\") naics_from_any(\"pig \") # space after g  # naics_from_any(\"copper smelting\") # naics_from_any(\"copper smelting\", website_scrape=TRUE) # browseURL(naics_from_any(\"copper smelting\", website_url=TRUE) )  a = naics_from_any(\"plastics\") b = naics_from_any(\"rubber\") fintersect(a,b)[,.(name,code)] #  a AND b funion(a,b)[,.(name,code)]     #  a OR  b naics_subcodes_from_code(funion(a,b)[,code])[,.(name,code)]   #  plus children naics_from_any(funion(a,b)[,code], children=T)[,.(name,code)] #  same  NROW(naics_from_any(325)) #[1] 1 NROW(naics_from_any(325, children = T)) #[1] 54 NROW(naics_from_any(\"chem\")) #[1] 20 NROW(naics_from_any(\"chem\", children = T)) # [1] 104"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/articles/testdata.html","id":"sample-spreadsheets-shapefiles-for-trying-the-web-app","dir":"Articles","previous_headings":"EXAMPLES OF FILES & TEST DATA EJAM CAN IMPORT OR OUTPUT","what":"Sample spreadsheets & shapefiles for trying the web app","title":"Examples of Input/Output Files & Data","text":"Examples .xlsx files shapefiles installed locally EJAM, input files can use try EJAM functions web app, see input file look like. Files Datasets Installed EJAM just one topic can see files data objects like : Local folders sample files best, simplest way see files function called testdata() can try uploading kinds files web app, example, finding local folders installed package: /EJAM/testdata/latlon/testpoints_100.xlsx /EJAM/testdata/shapes/portland_shp.zip etc. open locally installed “testdata” folders (Windows File Explorer, MacOS Finder) Example using file EJAM","code":"topic = \"fips\"  # or \"shape\" or \"latlon\" or \"naics\" or \"address\" etc.   # datasets / R objects cbind(data.in.package  = sort(grep(topic, EJAM:::datapack()$Item, value = T))) #> Get more info with datapack(simple = FALSE) #>  #> ignoring sortbysize because simple=TRUE #>      data.in.package                   #> [1,] \"testinput_fips_blockgroups\"      #> [2,] \"testinput_fips_cities\"           #> [3,] \"testinput_fips_counties\"         #> [4,] \"testinput_fips_states\"           #> [5,] \"testinput_fips_tracts\"           #> [6,] \"testoutput_ejamit_fips_cities\"   #> [7,] \"testoutput_ejamit_fips_counties\"  # files cbind(files.in.package = sort(basename(testdata(topic, quiet = T)))) #>       files.in.package                    #>  [1,] \"cities_2.xlsx\"                     #>  [2,] \"counties_in_AL_detailed.xlsx\"      #>  [3,] \"counties_in_Alabama.xlsx\"          #>  [4,] \"counties_in_Delaware.xlsx\"         #>  [5,] \"counties_in_Delaware_invalid.xlsx\" #>  [6,] \"county_10.xlsx\"                    #>  [7,] \"county_100.xlsx\"                   #>  [8,] \"county_1000.xlsx\"                  #>  [9,] \"county_state_300.xlsx\"             #> [10,] \"fips\"                              #> [11,] \"state_10.xlsx\"                     #> [12,] \"state_50.xlsx\"                     #> [13,] \"state_county_tract_10.xlsx\"        #> [14,] \"tract_10.csv\"                      #> [15,] \"tract_100.csv\"                     #> [16,] \"tract_1000.csv\"                    #> [17,] \"tract_state_285.xlsx\" testdata()  # just shapefile examples:  testdata('shape', quiet = TRUE) browseURL(testdatafolder()) testpoint_files <- list.files(   system.file(\"testdata/latlon\", package = \"EJAM\"),    full.names = T   ) testpoint_files  latlon_from_anything(testpoint_files[2])"},{"path":"https://usepa.github.io/EJAM-open/articles/testdata.html","id":"sample-r-data-objects-examples-of-inputs-outputs-of-ejam-functions","dir":"Articles","previous_headings":"EXAMPLES OF FILES & TEST DATA EJAM CAN IMPORT OR OUTPUT","what":"Sample R data objects: Examples of inputs & outputs of EJAM functions","title":"Examples of Input/Output Files & Data","text":"package number data objects, installed part EJAM related packages, examples inputs intermediate data objects can use try EJAM functions, may just want see outputs inputs look like, use testing purposes. documentation input output item (R object), see reference documentation object code snippet provides useful list test/ sample data objects EJAM related packages: POINT DATA (LAT/LON COORDINATES) testing ejamit(), mapfast(), ejscreenit(), getblocksnearby(), etc. See files dataset examples related one topic: STREET ADDRESSES testing geocoding latlon_from_address() etc. FACILITY REGISTRY IDs testing latlon_from_regid() etc. EXAMPLES OUTPUTS ejamit(), ejscreenit(), getblocksnearby(), etc., can use inputs ejam2report(), ejam2excel(), ejam2ratios(), ejam2barplot(), doaggregate(), etc. LARGE DATASETS USED PACKAGE Note largest files used package mostly block-related datasets info population size location US blocks, facility datasets info EPA-regulated sites, blockgroup-related datasets EJScreen indicators. datasets get downloaded package installation launch needed. See article Updating EJAM Datasets information . Also see reference documentation dataset.","code":"topic = \"fips\" cbind(data.in.package  = sort(grep(topic, EJAM:::datapack()$Item, value = T))) cbind(files.in.package = sort(basename(testdata(topic, quiet = T)))) x <- EJAM:::datapack(simple = FALSE) x <- x[order(x$Package, x$Item), !grepl(\"size\", names(x))] x[grepl(\"^testp\", x$Item), ] #>     Package                Item #> 51     EJAM       testpoints_10 #> 131    EJAM      testpoints_100 #> 132    EJAM   testpoints_100_dt #> 153    EJAM     testpoints_1000 #> 168    EJAM    testpoints_10000 #> 120    EJAM        testpoints_5 #> 129    EJAM       testpoints_50 #> 147    EJAM      testpoints_500 #> 121    EJAM      testpoints_bad #> 113    EJAM testpoints_overlap3 #>                                                        Title #> 51  test points data.frame with columns sitenumber, lat, lon #> 131 test points data.frame with columns sitenumber, lat, lon #> 132 test points data.frame with columns sitenumber, lat, lon #> 153 test points data.frame with columns sitenumber, lat, lon #> 168 test points data.frame with columns sitenumber, lat, lon #> 120 test points data.frame with columns sitenumber, lat, lon #> 129 test points data.frame with columns sitenumber, lat, lon #> 147 test points data.frame with columns sitenumber, lat, lon #> 121       test points data.frame with columns note, lat, lon #> 113       test points data.frame with columns note, lat, lon x[grepl(\"^test_\", x$Item), ] #> [1] Package Item    Title   #> <0 rows> (or 0-length row.names) cat(\"\\n\\n\") x[grepl(\"^test[^op_]\", x$Item), ] #>     Package                              Item #> 42     EJAM               testinput_address_2 #> 109    EJAM               testinput_address_9 #> 110    EJAM           testinput_address_parts #> 117    EJAM           testinput_address_table #> 130    EJAM         testinput_address_table_9 #> 118    EJAM testinput_address_table_goodnames #> 119    EJAM  testinput_address_table_withfull #> 111    EJAM        testinput_fips_blockgroups #> 43     EJAM             testinput_fips_cities #> 44     EJAM           testinput_fips_counties #> 45     EJAM             testinput_fips_states #> 112    EJAM             testinput_fips_tracts #> 46     EJAM                    testinput_mact #> 47     EJAM                   testinput_naics #> 48     EJAM            testinput_program_name #> 49     EJAM          testinput_program_sys_id #> 6      EJAM                   testinput_regid #> 7      EJAM             testinput_registry_id #> 136    EJAM                testinput_shapes_2 #> 50     EJAM                     testinput_sic #> 8      EJAM                   testinput_xtrac #> 135    EJAM                      testshapes_2 #>                                                                       Title #> 42                            datasets for trying address-related functions #> 109                           datasets for trying address-related functions #> 110                           datasets for trying address-related functions #> 117                           datasets for trying address-related functions #> 130                           datasets for trying address-related functions #> 118                           datasets for trying address-related functions #> 119                           datasets for trying address-related functions #> 111                                      testinput_fips_blockgroups dataset #> 43                                            testinput_fips_cities dataset #> 44                                          testinput_fips_counties dataset #> 45                                            testinput_fips_states dataset #> 112                                           testinput_fips_tracts dataset #> 46                                                   testinput_mact dataset #> 47                                                  testinput_naics dataset #> 48                                           testinput_program_name dataset #> 49  test data, EPA program names and program system ID numbers to try using #> 6   testinput_regid (DATA) test data, vector of EPA FRS Registry ID numbers #> 7                  test data, EPA Facility Registry ID numbers to try using #> 136                                              testinput_shapes_2 dataset #> 50                                                    testinput_sic dataset #> 8                                                          for internal use #> 135                                                    testshapes_2 dataset cat(\"\\n\\n\") x[grepl(\"^testout\", x$Item), ] #>     Package                                      Item #> 179    EJAM     testoutput_doaggregate_1000pts_1miles #> 171    EJAM      testoutput_doaggregate_100pts_1miles #> 161    EJAM       testoutput_doaggregate_10pts_1miles #> 180    EJAM          testoutput_ejamit_1000pts_1miles #> 172    EJAM           testoutput_ejamit_100pts_1miles #> 167    EJAM            testoutput_ejamit_10pts_1miles #> 169    EJAM             testoutput_ejamit_fips_cities #> 170    EJAM           testoutput_ejamit_fips_counties #> 160    EJAM                testoutput_ejamit_shapes_2 #> 144    EJAM        testoutput_ejscreenapi_1pts_1miles #> 151    EJAM             testoutput_ejscreenapi_plus_5 #> 156    EJAM                   testoutput_ejscreenit_5 #> 163    EJAM                  testoutput_ejscreenit_50 #> 176    EJAM                 testoutput_ejscreenit_500 #> 138    EJAM testoutput_ejscreenRESTbroker_1pts_1miles #> 175    EJAM testoutput_getblocksnearby_1000pts_1miles #> 159    EJAM  testoutput_getblocksnearby_100pts_1miles #> 150    EJAM   testoutput_getblocksnearby_10pts_1miles #>                                                                                     Title #> 179                                                          test output of doaggregate() #> 171                                                          test output of doaggregate() #> 161                                                          test output of doaggregate() #> 180                                                               test output of ejamit() #> 172                                                               test output of ejamit() #> 167                                                               test output of ejamit() #> 169                                                 testoutput_ejamit_fips_cities dataset #> 170                                               testoutput_ejamit_fips_counties dataset #> 160                                                    testoutput_ejamit_shapes_2 dataset #> 144                                                  test data, output from this function #> 151 test data examples of output from 'ejscreenapi_plus()' using testpoints_5, radius = 1 #> 156       test data examples of output from 'ejscreenit()' using testpoints_5, radius = 1 #> 163      test data examples of output from 'ejscreenit()' using testpoints_50, radius = 1 #> 176     test data examples of output from 'ejscreenit()' using testpoints_500, radius = 1 #> 138                                                  test data, output from this function #> 175                    test output of getblocksnearby(), and is an input to doaggregate() #> 159                    test output of getblocksnearby(), and is an input to doaggregate() #> 150                    test output of getblocksnearby(), and is an input to doaggregate() cat(\"\\n\\n\")"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"how-to-use-ejam-to-analyze-zip-codes","dir":"Articles","previous_headings":"","what":"How to use EJAM to analyze zip codes","title":"Zipcodes","text":"EJAM can analyze various kinds Census-defined areas, including States, Counties, Tracts, Blockgroups, Cities/CDPs/etc. However, may need analyze zip codes. Census uses ZIP Code Tabulation Areas (ZCTAs), generalized areal representations United States Postal Service (USPS) ZIP Code service areas. See help(\"zctas\", package=\"tigris\") Note zip can county fips many cases, 10001! EJScreen’s API handle zip codes. can show center zip code map bounds provide report easily via API. map analyze zip codes can download shapefiles analyze map EJAM shown .","code":"# Just see where the zipcode is, not its boundaries browseURL(url_ejscreenmap(wherestr =  '10001'))"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"downloading-zcta-polygons","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"downloading zcta polygons","title":"Zipcodes","text":"Takes time download!","code":"library(tigris) options(tigris_use_cache=TRUE) options(tigris_refresh=FALSE) #zcta_DE <- zctas(starts_with = fips_from_name('DE'), keep_zipped_shapefile = T) # all in the state #zcta1 <- zctas(starts_with = c(\"10001\"))  # one zip zcta2 <- zctas(starts_with = c(\"10012\", \"10506\"))  # two zipcodes  z = shapefile_from_any(zcta2)"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"mapping-zcta-polygons","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"mapping zcta polygons","title":"Zipcodes","text":"","code":"mapfast(z)"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"analyzing-zip-codes-in-ejam","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"analyzing zip codes in EJAM","title":"Zipcodes","text":"EJScreen API handle zip codes, can analyze EJAM like :","code":"out = ejamit(shapefile = z, radius = 0)"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"summary-report-on-zipcodes","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"summary report on zipcodes","title":"Zipcodes","text":"","code":"ejam2report(out,              analysis_title = \"Zip codes\",             submitted_upload_method = 'SHP',              shp = z)"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"compare-sites","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"compare sites","title":"Zipcodes","text":"","code":"# put zip code in the x axis labels! ejam2barplot_sites(out, names.arg = z$GEOID20, sortby = FALSE) # zcta2$GEOID20  # This table view works, but the links to reports do not work with zipcodes ejam2tableviewer(out)"},{"path":"https://usepa.github.io/EJAM-open/articles/zipcodes.html","id":"map-of-detailed-results","dir":"Articles","previous_headings":"How to use EJAM to analyze zip codes","what":"map of detailed results","title":"Zipcodes","text":"Note ejam2map() work zipcodes!","code":"out_plus_shape = sf::st_as_sf(   data.frame(out$results_bysite, z)   ) # put zip code in the map popups! out_plus_shape$ejam_uniq_id = paste0(out_plus_shape$ejam_uniq_id, \" (zip \", z$GEOID20, \")\") mapfastej(out_plus_shape)"},{"path":"https://usepa.github.io/EJAM-open/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Corrales. Maintainer.","code":""},{"path":"https://usepa.github.io/EJAM-open/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Corrales MA (2025). Environmental Residential Population Analysis Multisite tool (EJAM). United States Environmental Protection Agency, Washington, DC. https://usepa.github.io/EJAM-open/index.html","code":"@Manual{,   author = {Mark A. Corrales},   title = {Environmental and Residential Population Analysis Multisite tool (EJAM)},   address = {Washington, DC},   institution = {United States Environmental Protection Agency (US EPA)},   year = {2025},   url = {https://usepa.github.io/EJAM-open/index.html}, }"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/CONTRIBUTING.html","id":"status-of-ejam-package-2025","dir":"","previous_headings":"","what":"Status of EJAM package 2025","title":"Contributing Guide","text":"mid-2025, content related USEPA-hosted open source R package EJAM may archived /unpublished:","code":""},{"path":"https://usepa.github.io/EJAM-open/CONTRIBUTING.html","id":"code-repositories-and-open-source-contributions","dir":"","previous_headings":"Status of EJAM package 2025","what":"code repositories and open source contributions","title":"Contributing Guide","text":"open source package EJAM repository called USEPA/EJAM-open, repository archived mid-2025 plans developed EPA. development open source contributions need take place elsewhere (EPA repository), forks package.","code":""},{"path":"https://usepa.github.io/EJAM-open/CONTRIBUTING.html","id":"disclaimer-for-github-repository-content","dir":"","previous_headings":"Status of EJAM package 2025","what":"Disclaimer for GitHub Repository Content","title":"Contributing Guide","text":"United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government.","code":""},{"path":"https://usepa.github.io/EJAM-open/CONTRIBUTING.html","id":"open-source-code-policy","dir":"","previous_headings":"Status of EJAM package 2025","what":"Open-Source Code Policy","title":"Contributing Guide","text":"General information EPA open source available : EPA Info Open Source Projects EPA Interim Guidance Open Source Code. Effective August 8, 2016, OMB Mandate: M-16-21; Federal Source Code Policy: Achieving Efficiency, Transparency, Innovation Reusable Open Source Software applies new custom-developed code created procured EPA consistent scope applicability requirements Office Management Budget’s (OMB’s) Federal Source Code Policy. general, states new custom-developed code Federal Agencies made available reusable open-source code. EPA specific implementation OMB Mandate M-16-21 addressed System Life Cycle Management Procedure. EPA chosen use GitHub version control system well inventory open-source code projects. EPA uses GitHub inventory custom-developed, open-source code generate necessary metadata file posted code.gov broad reuse compliance OMB Mandate M-16-21. questions want read , see EPA Open Source Project Repo EPA’s Interim Open Source Code Guidance.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"section","dir":"","previous_headings":"","what":"EJAM Environmental and Residential Population Analysis Multisite","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"Environmental Residential Population Analysis Multisite tool lets easily quickly see residential population environmental information aggregated within across hundreds thousands places, time.","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"what-can-you-do-with-ejam","dir":"","previous_headings":"","what":"What Can You Do with EJAM?","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"EJAM?","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"status-of-ejam-package-2025","dir":"","previous_headings":"","what":"Status of EJAM package 2025","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"mid-2025, content related USEPA-hosted open source R package EJAM may archived /unpublished:","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"code-repositories-and-open-source-contributions","dir":"","previous_headings":"Status of EJAM package 2025","what":"code repositories and open source contributions","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"open source package EJAM repository archived /unpublished mid-2025 (USEPA/EJAM-open) plans developed EPA. development open source contributions need take place elsewhere (EPA repository), forks package. name repo storing package code needs recorded part URL parameter DESCRIPTION file root folder source package. owner/name can read using unexported helper function repo_from_desc(), full URL via function repo_from_desc() EJAM:::repo_from_desc(get_full_url=T) currently returns https://github.com/USEPA/EJAM-open.","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"documentation","dir":"","previous_headings":"Status of EJAM package 2025","what":"documentation","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"Documentation webpages github pages URLs related USEPA/EJAM USEPA/EJAM-open repositories – might archived /unpublished mid-2025, subsequent documentation presumably hosted repositories forks package. ddocumentation web pages created via code EJAM/data-raw/datacreate_0_UPDATE_ALL_DOCUMENTATION_pkgdown.R, relying R package pkgdown hosted github pages. name repo published given time needs recorded part URL parameter DESCRIPTION file root folder source package. repo URL can read using unexported helper function repo_from_desc() EJAM:::repo_from_desc('github.io', get_full_url=T), currently returns (https://usepa.github.io/EJAM-open).","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"datasets","dir":"","previous_headings":"Status of EJAM package 2025","what":"datasets","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"Datasets repository archived /unpublished mid-2025 (USEPA/ejamdata) mid-2025 plans updated EPA. name repo stored given time needs recorded ejam_data_repo parameter DESCRIPTION file root folder source package, can retrieved via function desc::desc() desc::desc(file = system.file(\"DESCRIPTION\", package = \"EJAM\"))$get(\"ejam_data_repo\") currently returns USEPA/ejamdata, full URL https://github.com/USEPA/ejamdata.","code":""},{"path":"https://usepa.github.io/EJAM-open/index.html","id":"web-app-hosting","dir":"","previous_headings":"Status of EJAM package 2025","what":"web app hosting","title":"EJAM Environmental and Residential Population Analysis Multisite","text":"information host web app, see Deploying Web App EJScreen EJAM/multisite tool web app longer hosted EPA starting early 2025. Changes taking place terms EJAM EJScreen might available web apps. EJAM web app taken offline EPA, EJScreen likewise longer provides access EJAM’s multisite tool, provide API generating community summary reports individual locations. EJScreen (archived ) leveraged EJAM’s technology provide public access batches reports, allowing rapid multisite analysis EJScreen’s Multisite Tool. web app attempted balance user-friendliness visual interface features, relevance public finds useful, resources include appropriate documentation user support.","code":""},{"path":"https://usepa.github.io/EJAM-open/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 U.S. Federal Government (countries recognized) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acsendyear.html","id":null,"dir":"Reference","previous_headings":"","what":"helper - try to report the end year of the ACS 5-year survey as reported by current EJAM metadata for the package, or try to infer the possible year — acsendyear","title":"helper - try to report the end year of the ACS 5-year survey as reported by current EJAM metadata for the package, or try to infer the possible year — acsendyear","text":"helper - try report end year ACS 5-year survey reported current EJAM metadata package, try infer possible year","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acsendyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper - try to report the end year of the ACS 5-year survey as reported by current EJAM metadata for the package, or try to infer the possible year — acsendyear","text":"","code":"acsendyear(guess_as_of = Sys.Date(), guess_always = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/acsendyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper - try to report the end year of the ACS 5-year survey as reported by current EJAM metadata for the package, or try to infer the possible year — acsendyear","text":"guess_as_of optional alternative data use guessing available date, e.g., \"2025-01-01\" – must Date class like Sys.Date() guess_always optional, set TRUE ignore metadata just guess year.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acsendyear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper - try to report the end year of the ACS 5-year survey as reported by current EJAM metadata for the package, or try to infer the possible year — acsendyear","text":"single year like \"2022\" character string, meaning ACS5 2018-2022","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":null,"dir":"Reference","previous_headings":"","what":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"download ACS 5year data Census API, block group resolution (slowly entire US)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"","code":"acs_bybg(   variables = c(pop = \"B01001_001\"),   table = NULL,   cache_table = FALSE,   year = NULL,   output = \"wide\",   state = stateinfo$ST,   county = NULL,   zcta = NULL,   geometry = FALSE,   keep_geo_vars = FALSE,   summary_var = NULL,   key = NULL,   moe_level = 90,   survey = \"acs5\",   show_call = FALSE,   geography = \"block group\",   dropname = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"variables Vector variables - see get_acs tidycensus package table see get_acs tidycensus package cache_table see get_acs tidycensus package year e.g., 2022  see get_acs tidycensus package, helper function EJAM package called acsendyear() output see get_acs tidycensus package state Default 2-character abbreviations, vector US States, DC, PR. county see get_acs tidycensus package zcta see get_acs tidycensus package geometry see get_acs tidycensus package keep_geo_vars see get_acs tidycensus package summary_var see get_acs tidycensus package key see get_acs tidycensus package moe_level see get_acs tidycensus package survey see get_acs tidycensus package show_call see get_acs tidycensus package geography \"block group\" dropname whether drop column called NAME ... see get_acs tidycensus package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"data.table (tibble, just data.frame)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"(Probably) requires getting specifying API key Census Bureau ! (least query large). see tidycensus package help","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bybg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"download ACS 5year data from Census API, at block group resolution (slowly if for entire US) — acs_bybg","text":"","code":"# \\donttest{ ## All states, full table # newvars <- acs_bybg(table = \"B01001\")  ## One state, some variables newvars <- acs_bybg(c(pop = \"B01001_001\", y = \"B01001_002\"), state = \"DC\")  ## Format new data to match rows of blockgroupstats  setnames(newvars, \"GEOID\", \"bgfips\") dim(newvars) newvars <- newvars[blockgroupstats[,.(bgfips, ST)], ,  on = \"bgfips\"] dim(blockgroupstats) dim(newvars) newvars newvars[ST == \"DC\", ]  ## Calculate a new indicator for each block group, using ACS data  mystates = c(\"DC\", 'RI') newvars <- acs_bybg(variables = c(\"B01001_001\", paste0(\"B01001_0\", 31:39)),   state = mystates) setnames(newvars, \"GEOID\", \"bgfips\") newvars[, ST := fips2state_abbrev(bgfips)] names(newvars) <- gsub(\"E$\", \"\", names(newvars))  # provide formulas for calculating new indicators from ACS raw data: formula1 <- c(  \" pop = B01001_001\",  \" age1849female = (B01001_031 + B01001_032 + B01001_033 + B01001_034 +       B01001_035 + B01001_036 + B01001_037 + B01001_038 + B01001_039)\",  \" pct1849female = ifelse(pop == 0, 0, age1849female / pop)\"  ) newvars <- calc_ejam(newvars, formulas = formula1,   keep.old = c(\"bgid\", \"ST\", \"pop\", 'bgfips'))  newvars[, pct1849female := round(100 * pct1849female, 1)] mapfast(newvars[1:10,], column_names = colnames(newvars),      labels = gsub('pct1849female', 'Women 18-49 as % of residents',               gsub('age1849female', 'Count of women ages 18-49',              fixcolnames(colnames(newvars), 'r', 'long'))))  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bycounty.html","id":null,"dir":"Reference","previous_headings":"","what":"download ACS 5year data from Census API, at County resolution — acs_bycounty","title":"download ACS 5year data from Census API, at County resolution — acs_bycounty","text":"download ACS 5year data Census API, County resolution","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bycounty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download ACS 5year data from Census API, at County resolution — acs_bycounty","text":"","code":"acs_bycounty(myvars = \"B03002_001\", myst = \"DE\", yr = 2022)"},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bycounty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"download ACS 5year data from Census API, at County resolution — acs_bycounty","text":"myvars optional .extracted x, one ACS5 variables like \"B03002_001\" myst abbreviation one state, like \"DE\" yr like 2022, end 5 year ACS 2018-2022","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bycounty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"download ACS 5year data from Census API, at County resolution — acs_bycounty","text":"tibble table output acs_bycounty() .e., output get_acs() tidycensus pkg","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/acs_bycounty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"download ACS 5year data from Census API, at County resolution — acs_bycounty","text":"","code":"## also see examples for acs_bybg() # \\donttest{   x     <- acs_bycounty(myvars = \"B03002_003\", myst = \"NY\", yr = 2022) # nhwa   denom <- acs_bycounty(myvars = \"B03002_001\", myst = \"NY\", yr = 2022) # pop   z = x   z$estimate = x$estimate / denom$estimate   z$moe = 0  # x$moe / denom$estimate # need to calculate using census guidance if at all   # z$variable = \"pctnhwa\" # not used if myvarnames is given   # plot_bycounty(z, myvarnames = \"Percent NonHispanic White Alone (i.e., Not People of Color)\",   #               labeltype = scales::label_percent()) # requires scales package # }"},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table.html","id":null,"dir":"Reference","previous_headings":"","what":"get USPS addresses from a table of that info — address_from_table","title":"get USPS addresses from a table of that info — address_from_table","text":"get USPS addresses table info","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get USPS addresses from a table of that info — address_from_table","text":"","code":"address_from_table(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get USPS addresses from a table of that info — address_from_table","text":"x data.frame address info column(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get USPS addresses from a table of that info — address_from_table","text":"vector USPS addresses, 1 per row x","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table_goodnames.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to get USPS addresses from a table that has correct colnames — address_from_table_goodnames","title":"utility to get USPS addresses from a table that has correct colnames — address_from_table_goodnames","text":"utility get USPS addresses table correct colnames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table_goodnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to get USPS addresses from a table that has correct colnames — address_from_table_goodnames","text":"","code":"address_from_table_goodnames(   x,   colnames_allowed = c(\"address\", \"street\", \"city\", \"state\", \"zip\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table_goodnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to get USPS addresses from a table that has correct colnames — address_from_table_goodnames","text":"x table columns overlap colnames_allowed colnames_allowed optional","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/address_from_table_goodnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to get USPS addresses from a table that has correct colnames — address_from_table_goodnames","text":"vector USPS addresses","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/all_equal_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check different versions of function with same name in 2 packages obsolete since EJAMejscreenapi phased out? was used by dupenames() to check different versions of function with same name in 2 packages — all_equal_functions","title":"UTILITY - check different versions of function with same name in 2 packages obsolete since EJAMejscreenapi phased out? was used by dupenames() to check different versions of function with same name in 2 packages — all_equal_functions","text":"UTILITY - check different versions function name 2 packages obsolete since EJAMejscreenapi phased ? used dupenames() check different versions function name 2 packages","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/all_equal_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check different versions of function with same name in 2 packages obsolete since EJAMejscreenapi phased out? was used by dupenames() to check different versions of function with same name in 2 packages — all_equal_functions","text":"","code":"all_equal_functions(fun = \"latlon_infer\", package1 = \"EJAM\", package2)"},{"path":"https://usepa.github.io/EJAM-open/reference/all_equal_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check different versions of function with same name in 2 packages obsolete since EJAMejscreenapi phased out? was used by dupenames() to check different versions of function with same name in 2 packages — all_equal_functions","text":"fun quoted name function, like \"latlon_infer\" package1 quoted name package, like \"EJAM\" package2 quoted name package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/all_equal_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - check different versions of function with same name in 2 packages obsolete since EJAMejscreenapi phased out? was used by dupenames() to check different versions of function with same name in 2 packages — all_equal_functions","text":"TRUE FALSE","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/app_run_EJAMejscreenapi.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Launch EJAM ejscreenapi web app in RStudio — app_run_EJAMejscreenapi","title":"DRAFT - Launch EJAM ejscreenapi web app in RStudio — app_run_EJAMejscreenapi","text":"Launch EJAM ejscreenapi web app RStudio","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_run_EJAMejscreenapi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Launch EJAM ejscreenapi web app in RStudio — app_run_EJAMejscreenapi","text":"","code":"app_run_EJAMejscreenapi(   onStart = NULL,   options = list(),   uiPattern = \"/\",   enableBookmarking = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/app_run_EJAMejscreenapi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Launch EJAM ejscreenapi web app in RStudio — app_run_EJAMejscreenapi","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. ... arguments pass golem_opts See ?golem::get_golem_options details","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_run_EJAMejscreenapi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - Launch EJAM ejscreenapi web app in RStudio — app_run_EJAMejscreenapi","text":"app_run_EJAM()                 like run_app() EJAM shiny app run EJAM package app_run_EJAMejscreenapi()      like run_app() EJScreen API shiny app run EJAM package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_server.html","id":null,"dir":"Reference","previous_headings":"","what":"app_server - EJAM app server — app_server","title":"app_server - EJAM app server — app_server","text":"app_server - EJAM app server","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"app_server - EJAM app server — app_server","text":"","code":"app_server(input, output, session)"},{"path":"https://usepa.github.io/EJAM-open/reference/app_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"app_server - EJAM app server — app_server","text":"input, output, session Internal parameters shiny. REMOVE.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"app_ui - The application User-Interface — app_ui","title":"app_ui - The application User-Interface — app_ui","text":"app_ui - application User-Interface","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/app_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"app_ui - The application User-Interface — app_ui","text":"","code":"app_ui(request)"},{"path":"https://usepa.github.io/EJAM-open/reference/app_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"app_ui - The application User-Interface — app_ui","text":"request Internal parameter {shiny}. REMOVE.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/area_sqmi.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","title":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","text":"utility get areas places (points radius , polygons, census units FIPS)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/area_sqmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","text":"","code":"area_sqmi(df = NULL, radius.miles = NULL, shp = NULL, fips = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/area_sqmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","text":"df optional data.frame, one place per row - function tries infer sitetype seeing df 1) spatial data.frame class \"sf\", 2) column can interpreted alias fips, last resort, 3) column alias radius.miles radius.miles optional vector distances points defining circular buffers shp optional spatial data.frame sf class object like shapefile_from_any() fips optional vector character Census FIPS codes, leading zeroes, 2 digits State, 5 county, etc. already boundaries provide shp instead parameter (much faster way).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/area_sqmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","text":"vector numbers length length(radius.miles) length(fips) NROW(shp)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/area_sqmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility to get areas of places (points with radius at each, or polygons, or census units by FIPS) — area_sqmi","text":"one parameters can specified time, others must NULL. provide data.frame tries infer info table – radius.miles, shp, fips. Note slow fips since download boundaries. already shapefile boundaries, provide shp parameter instead using fips. Note: provide single number radius (vector length 1), returns single value area. provide vector radius values, even number, returns vector long input radius.miles long NROW(df).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ask_number.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"askradius()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ask_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"","code":"ask_number(   default = 3,   title = \"Radius\",   message = \"Within how many miles of each point?\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/ask_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"default default value number provided returned title title popup dialog box, like \"Radius\" message question, like, \"Within many miles point?\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ask_number.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - interactive prompt in RStudio to ask user to specify number like radius — ask_number","text":"single number","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/attributes2.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to see all attributes other than row.names — attributes2","title":"utility to see all attributes other than row.names — attributes2","text":"utility see attributes row.names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/attributes2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to see all attributes other than row.names — attributes2","text":"","code":"attributes2(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/attributes2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to see all attributes other than row.names — attributes2","text":"x R object","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/attributes2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to see all attributes other than row.names — attributes2","text":"attributes x, excluding row.names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/avg.in.us.html","id":null,"dir":"Reference","previous_headings":"","what":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","title":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","text":"also available via usastats created /data-raw/datacreate_avg..us","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/avg.in.us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","text":"","code":"avg.in.us"},{"path":"https://usepa.github.io/EJAM-open/reference/avg.in.us.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"avg.in.us (DATA) national averages of key indicators, for convenience — avg.in.us","text":"object class data.frame 1 rows 37 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean raw output of doaggregate() from the EJAM package — batch.clean","title":"Clean raw output of doaggregate() from the EJAM package — batch.clean","text":"Takes raw output version batch buffer results cleans make ready batch.summarize function Note drops rows pop data - assumes lack EJScreen batch results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean raw output of doaggregate() from the EJAM package — batch.clean","text":"","code":"batch.clean(x, namesfile = \"keepnames\", oldcolnames, newcolnames)"},{"path":"https://usepa.github.io/EJAM-open/reference/batch.clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean raw output of doaggregate() from the EJAM package — batch.clean","text":"x Required. output batch processor runs EJScreen report per site. namesfile Optional must specify either namesfile, oldcolnames newcolnames. csv filename, file maps fieldnames raw output batch processor useful friendly names make sense. function called special value namesfile='keepnames' names unchanged x. oldcolnames Optional. names found x, ignored namesfile specified. newcolnames Optional. corresponding names change , ignored namesfile specified.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate more summary stats across all sites and all people — batch.summarize","title":"Calculate more summary stats across all sites and all people — batch.summarize","text":"Calculate summary stats across sites people","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate more summary stats across all sites and all people — batch.summarize","text":"","code":"batch.summarize(   ejamitout,   sitestats,   popstats,   overall,   wtscolname = \"pop\",   probs = c(0, 0.25, 0.5, 0.75, 0.8, 0.9, 0.95, 0.99, 1),   thresholds = list(90),   threshnames = list(names(which(sapply(sitestats, class) != \"character\"))),   threshgroups = list(\"variables\"),   na.rm = TRUE,   rowfun.picked = \"all\",   colfun.picked = \"all\",   quiet = FALSE,   testing = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/batch.summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate more summary stats across all sites and all people — batch.summarize","text":"ejamitout typically used. provided, parameters sitestats, popstats, overall ignored. list output ejamit() – list tables including results_bysite, results_bybg_people, results_overall. ejamit() actually already batch.summarize(), param might useful interactively want redo just batch.summarize() step new params like thresholds probs. sitestats data.frame data.table like ejamit()$results_bysite, one row per site one column per indicator. Ignored ejamitout provided. popstats data.frame data.table like ejamit()$results_bysite, one row per blockgroup least partly /one sites, one column per indicator. provides blockgroup indicators, including total counts even blockgroups entirely /site. used get stats distribution indicator across unique individuals (regardless many sites resident ). Ignored ejamitout provided. overall data.frame data.table like ejamit()$results_bysite, one column per indicator, just one data row overall average, sum, summary stat indicator across sites. Ignored ejamitout provided. wtscolname Name column contains relevant weights used (e.g., \"pop\") probs Vector numeric values, fractions, use probabilities used finding quantiles. thresholds list vectors 1+ thresholds (cutpoints) used count find sites 1+ given set indicators /threshold & many indicators . element list single number, used whole group (threshnames nth list element). Otherwise/general, vector recycled threshnames corresponding list element, threshname can threshold like field-specific benchmark, can use threshold like 50. threshnames list vectors character colnames defining fields x get compared threshold, thresholds threshgroups 1+ character strings naming elements threshnames list, \"EJ US pctiles\" na.rm Logical TRUE default, specifying na.rm used sum(), mean(), functions. rowfun.picked logical vector specifying pre-defined functions (like /threshold) needed applied colfun.picked logical vector specifying pre-defined functions (like colSums) needed applied quiet optional logical, set TRUE stop printing results console RStudio. testing optional, default FALSE. prints debugging info TRUE.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate more summary stats across all sites and all people — batch.summarize","text":"output list two named elements, rows cols, matrix summary stats. cols: element summary col summarizes 1 row (site) across RELEVANT cols batch data (e.g., US Summary Index percentiles). type info also saved tab output ejam2excel() rows: element summary row summarizes 1 column (field) across rows batch data. subset $keyindicators keystats: Key subset summary stats (indicators), convenience. See ejam2table_tall() view . keyindicators: Key subset indicators $row results (stats characterizing distribution across people sites, like avg, mean, percentiles), convenience flagged_areas: table percentages people sites, (people analyzed sites) nationwide, reside blockgroups overlap key types areas like nonattainment air standards, least one school / hospital / church blockgroup, broadband, health insurance. can viewed using ejam2areafeatures() flagged_areas table, summary stats mean following: \"flag\" \"yesno\" indicators population weighted sums, show many people analysis live blockgroups overlap given special type area, non-attainment areas Clean Air Act. \"number\" indicators counts site ejamit()$results_overall table, summarized percent residents overall analysis LEAST ONE type site blockgroup live . \"pctno\" % indicators summarized % residents analyzed lack critical service.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/batch.summarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate more summary stats across all sites and all people — batch.summarize","text":"function takes doaggregate() results calculates even summary statistics, notably characterize distribution indicator values across people across sites, percentile analyzed people percentile analyzed sites, etc. can expanded provide summary stats adding formulas code. Note can provide population-weighted summary stats indicators found popstats, fewer sitestats, since doaggregate() ejamit() provide various extra indicators large results_bybg_people table. parameter sitestats popstats ratios pctiles (US/State averages) indicators, plus \"bgid\" \"bgwt\" \"valid\" \"invalid_msg\" function show, e.g., median analyzed person's ratio local score US average, say Demog. Index US percentile least X% people nationwide among top 10% people analyzed.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/bgej.html","id":null,"dir":"Reference","previous_headings":"","what":"bgej (DATA) Summary Indexes for Census block groups — bgej","title":"bgej (DATA) Summary Indexes for Census block groups — bgej","text":"bgej table blockgroups, raw scores Summary Indexes supplemental summary indexes environmental indicators.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgej.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bgej (DATA) Summary Indexes for Census block groups — bgej","text":"file stored package, obtained via dataload_dynamic(). documentation residential population environmental data indicators used, see https://web.archive.org/web/20250118193121/https://www.epa.gov/ejscreen/understanding-ejscreen-results. column names :","code":"c(\"bgfips\", \"bgid\", \"ST\", \"pop\", names_ej, names_ej_supp, names_ej_state, names_ej_supp_state )"},{"path":"https://usepa.github.io/EJAM-open/reference/bgid2fips.html","id":null,"dir":"Reference","previous_headings":"","what":"bgid2fips (DATA) Census FIPS codes of block groups — bgid2fips","title":"bgid2fips (DATA) Census FIPS codes of block groups — bgid2fips","text":"bgid2fips (DATA) Census FIPS codes block groups","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgid2fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bgid2fips (DATA) Census FIPS codes of block groups — bgid2fips","text":"documentation EJScreen, see EJScreen documentation bgid2fips table census block groups, FIPS codes. also column called blockid can join block datasets.","code":"dataload_dynamic('bgid2fips')    names(bgid2fips)   dim(bgid2fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/bgid_from_blockid.html","id":null,"dir":"Reference","previous_headings":"","what":"given vector of blockids, get bgid of each (the parent block group) — bgid_from_blockid","title":"given vector of blockids, get bgid of each (the parent block group) — bgid_from_blockid","text":"given vector blockids, get bgid (parent block group)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgid_from_blockid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given vector of blockids, get bgid of each (the parent block group) — bgid_from_blockid","text":"","code":"bgid_from_blockid(blockid)"},{"path":"https://usepa.github.io/EJAM-open/reference/bgid_from_blockid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given vector of blockids, get bgid of each (the parent block group) — bgid_from_blockid","text":"blockid vector block ids like blockwts data.table blockpoints","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgid_from_blockid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"given vector of blockids, get bgid of each (the parent block group) — bgid_from_blockid","text":"vector bgid values","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgpts.html","id":null,"dir":"Reference","previous_headings":"","what":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"just list US block groups many blocks . also lat lon roughly blockgroup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"","code":"bgpts"},{"path":"https://usepa.github.io/EJAM-open/reference/bgpts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"object class data.table (inherits data.frame) 242355 rows 5 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bgpts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bgpts (DATA) lat lon of popwtd center of blockgroup, and count of blocks per block group — bgpts","text":"point used bg Census 2020 population weighted mean internal points blocks. gives approximation people live bg , useful situations. US States, DC, PR,  \"\" \"GU\" \"MP\" \"VI\" (U.S. Minor Outlying Islands FIPS 74 UM)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bg_cenpop2020.html","id":null,"dir":"Reference","previous_headings":"","what":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups — bg_cenpop2020","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups — bg_cenpop2020","text":"data.table US Census 2020 block groups, Census 2020 population count, lat/lon Census2020-population-weighted centroid block group","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bg_cenpop2020.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups — bg_cenpop2020","text":"","code":"bg_cenpop2020"},{"path":"https://usepa.github.io/EJAM-open/reference/bg_cenpop2020.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups — bg_cenpop2020","text":"object class data.table (inherits data.frame) 242335 rows 5 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/bg_cenpop2020.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bg_cenpop2020 (DATA) data.table with all US Census 2020 block groups — bg_cenpop2020","text":"also see attributes(bg_cenpop2020) source URL date","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/blockgroupstats.html","id":null,"dir":"Reference","previous_headings":"","what":"blockgroupstats (DATA) residential population and environmental indicators for Census block groups — blockgroupstats","title":"blockgroupstats (DATA) residential population and environmental indicators for Census block groups — blockgroupstats","text":"dataset residential population data environmental indicators originally EJScreen. Summary Indexes, see bgej","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/blockgroupstats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"blockgroupstats (DATA) residential population and environmental indicators for Census block groups — blockgroupstats","text":"Version 2.32.4 EJAM uses EPA environmental indicators population indicators derived ACS data r a2018-2022 year re-created latest version.   See attributes(blockgroupstats)` data.table US Census blockgroups (blocks). PR, Island Areas Column names include bgfips, bgid (join blockwt /bgid), pop, pctlowinc, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/blockid2fips.html","id":null,"dir":"Reference","previous_headings":"","what":"blockid2fips (DATA) Census FIPS codes of blocks — blockid2fips","title":"blockid2fips (DATA) Census FIPS codes of blocks — blockid2fips","text":"blockid2fips (DATA) Census FIPS codes blocks","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/blockid2fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"blockid2fips (DATA) Census FIPS codes of blocks — blockid2fips","text":"large file, used essential. documentation EJScreen, see EJScreen documentation blockid2fips table census blocks, FIPS codes. also column called blockid can join block datasets.","code":"dataload_dynamic('blockid2fips')    names(blockid2fips)   dim(blockid2fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/blockpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"blockpoints (DATA) Census blocks locations — blockpoints","title":"blockpoints (DATA) Census blocks locations — blockpoints","text":"blockpoints (DATA) Census blocks locations","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/blockpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"blockpoints (DATA) Census blocks locations — blockpoints","text":"archived documentation EJScreen blockpoints table census blocks, lat, lon providing latitude longitude Census Bureau-defined internal point, like centroid, block. also column called blockid can join block datasets.","code":"`dataload_dynamic('blockpoints')`    `names(blockpoints)`  `dim(blockpoints)`"},{"path":"https://usepa.github.io/EJAM-open/reference/blockwts.html","id":null,"dir":"Reference","previous_headings":"","what":"blockwts (DATA) population weights of Census blocks — blockwts","title":"blockwts (DATA) population weights of Census blocks — blockwts","text":"blockwts (DATA) population weights Census blocks","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/blockwts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"blockwts (DATA) population weights of Census blocks — blockwts","text":"documentation EJScreen, see EJScreen documentation blockwts table census blocks, weights reflecting fraction parent block group census 2020 population lived block.  weights used aggregate block-level data blockgroup, cases blockgroup circular buffer polygon. also column called blockid can join block datasets.","code":"dataload_dynamic('blockwts')    names(blockwts)   dim(blockwts)"},{"path":"https://usepa.github.io/EJAM-open/reference/buffer_desc_from_sitetype.html","id":null,"dir":"Reference","previous_headings":"","what":"helper to pick text phrase to use in excel report notes tab, for Locations analyzed: _____ — buffer_desc_from_sitetype","title":"helper to pick text phrase to use in excel report notes tab, for Locations analyzed: _____ — buffer_desc_from_sitetype","text":"helper pick text phrase use excel report notes tab, Locations analyzed: _____","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/buffer_desc_from_sitetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper to pick text phrase to use in excel report notes tab, for Locations analyzed: _____ — buffer_desc_from_sitetype","text":"","code":"buffer_desc_from_sitetype(sitetype, site_method)"},{"path":"https://usepa.github.io/EJAM-open/reference/buffer_desc_from_sitetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper to pick text phrase to use in excel report notes tab, for Locations analyzed: _____ — buffer_desc_from_sitetype","text":"sitetype character string, one \"shp\", \"latlon\", \"fips\" describe locations site_method string used filename saved report describe locations site_method can SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/buffer_desc_from_sitetype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper to pick text phrase to use in excel report notes tab, for Locations analyzed: _____ — buffer_desc_from_sitetype","text":"text string","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_barplot_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","title":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","text":"Creates header footer 1 page report include barplot results one site (supplement EJScreen Community Report)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_barplot_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","text":"","code":"build_barplot_report(   analysis_title,   totalpop,   locationstr,   in_shiny = FALSE,   filename = NULL,   report_title = NULL,   logo_path = NULL,   logo_html = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/build_barplot_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","text":"analysis_title, title use header report totalpop, total population included location(s) analyzed locationstr, description location(s) analyzed in_shiny, whether function called outside shiny - affects location header filename, path file save HTML content ; null, returns string (used Shiny app) report_title generic name type report, shown top, like \"EJAM Multisite Report\" logo_path optional relative path logo upper right overall header. Ignored logo_html specified NULL, otherwise uses default param set run_app() logo_html optional HTML img logo upper right overall header. specified, overrides logo_path. omitted, gets created based logo_path.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_barplot_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","text":"can return HTML filename specified, otherwise NULL","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_barplot_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate HTML Page for Summary Barplot Report in shiny app — build_barplot_report","text":"related function use RStudio, see ejam2report() relies build_community_report()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_community_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Single-site or Multi-site Summary Report (e.g., .html) — build_community_report","title":"Generate Single-site or Multi-site Summary Report (e.g., .html) — build_community_report","text":"Creates short summary report tables, map, plot indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_community_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Single-site or Multi-site Summary Report (e.g., .html) — build_community_report","text":"","code":"build_community_report(   output_df,   analysis_title = \"Report\",   totalpop,   locationstr,   include_ejindexes = FALSE,   show_ratios_in_report = FALSE,   extratable_show_ratios_in_report = FALSE,   extratable_title = \"\",   extratable_title_top_row = \"ADDITIONAL INFORMATION\",   extratable_list_of_sections = list(`Breakdown by Population Group` = names_d_subgroups,     `Language Spoken at Home` = names_d_language,     `Language in Limited English Speaking Households` = names_d_languageli,     `Breakdown by Sex` = c(\"pctmale\", \"pctfemale\"), Health = names_health, Age =     c(\"pctunder5\", \"pctunder18\", \"pctover64\"), Community =     names_community[!(names_community %in% c(\"pctmale\", \"pctfemale\",     \"pctownedunits_dupe\"))], Poverty = names_d_extra, `Features and Location Information`     = c(names_e_other, names_sitesinarea, names_featuresinarea,       names_flag),     Climate = names_climate, `Critical Services` = names_criticalservice, Other =     names_d_other_count),   extratable_hide_missing_rows_for = as.vector(unlist(extratable_list_of_sections)),   in_shiny = FALSE,   filename = NULL,   report_title = NULL,   logo_path = NULL,   logo_html = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/build_community_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Single-site or Multi-site Summary Report (e.g., .html) — build_community_report","text":"output_df single row results table doaggregate - either results_overall one row bysite analysis_title title use header report totalpop total population included location(s) analyzed locationstr description location(s) analyzed include_ejindexes whether build tables summary indexes supp. summary indexes show_ratios_in_report logical, whether add columns ratios US State overall values, main table envt/demog. info. extratable_show_ratios_in_report logical, whether add columns ratios US State overall values, extra info table extratable_title Text overall title extra info table extratable_title_top_row Text INSIDE extra info table, top left cell extratable_list_of_sections defines extra indicators shown. named list vectors, name text phrase title section table, vector vector colnames output_df indicators show section, extra table demog. subgroups, etc. extratable_hide_missing_rows_for indicators named vector, leave rows table raw value NA, many names_d_language, extra table demog. subgroups, etc.' in_shiny whether function called outside shiny - affects location header filename path file save HTML content ; null, returns string (used Shiny app) report_title generic name type report, shown top, like \"EJAM Multisite Report\" logo_path optional relative path logo upper right overall header. Ignored logo_html specified NULL, otherwise uses default param set run_app() logo_html optional HTML img logo upper right overall header. specified, overrides logo_path. omitted, gets created based logo_path.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/build_community_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Single-site or Multi-site Summary Report (e.g., .html) — build_community_report","text":"used shiny app server. use RStudio, see ejam2report() (relies ). function gets called app_server also ejam2report(), also used community_report_template.Rmd used generate report uses functions community_report_helper_funs.R, etc.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/calctype.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - what type of formula is used to aggregate this variable? — calctype","title":"utility - what type of formula is used to aggregate this variable? — calctype","text":"utility - type formula used aggregate variable?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calctype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - what type of formula is used to aggregate this variable? — calctype","text":"","code":"calctype(varnames)"},{"path":"https://usepa.github.io/EJAM-open/reference/calctype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - what type of formula is used to aggregate this variable? — calctype","text":"varnames vector like names_d","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calctype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - what type of formula is used to aggregate this variable? — calctype","text":"vector length varnames, like c(\"sum counts\", \"wtdmean\")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calctype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - what type of formula is used to aggregate this variable? — calctype","text":"","code":"calctype(\"pop\")  calctype(names_d)   x = names_these  cbind(indicator = x, calctype = calctype(x), calcweight = calcweight(x))   x = names(testoutput_ejamit_10pts_1miles$results_overall)  cbind(indicator = x, calctype = calctype(x), calcweight = calcweight(x))"},{"path":"https://usepa.github.io/EJAM-open/reference/calcweight.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","title":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","text":"utility - variable weight used aggregate variable weighted mean?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calcweight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","text":"","code":"calcweight(varnames)"},{"path":"https://usepa.github.io/EJAM-open/reference/calcweight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","text":"varnames vector like names_d","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calcweight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","text":"vector length varnames, like c(\"pop\", \"povknownratio\", \"hhlds\")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calcweight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - what variable is the weight used to aggregate this variable as a weighted mean? — calcweight","text":"","code":"x = names_these  cbind(indicator = x, calctype = calctype(x), calcweight = calcweight(x))"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_bysite.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate blockwt values by blockgroup, by site they are in or near — calc_bgwts_bysite","title":"aggregate blockwt values by blockgroup, by site they are in or near — calc_bgwts_bysite","text":"aggregate blockwt values blockgroup, site near","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_bysite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate blockwt values by blockgroup, by site they are in or near — calc_bgwts_bysite","text":"","code":"calc_bgwts_bysite(sites2blocks)"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_bysite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aggregate blockwt values by blockgroup, by site they are in or near — calc_bgwts_bysite","text":"sites2blocks like output getblocksnearby() input doaggregate() custom_doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_bysite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aggregate blockwt values by blockgroup, by site they are in or near — calc_bgwts_bysite","text":"data.table, 1 row per site-bg pair. May bgid bgfips 2,3, rows since per site bg near. like sites2blockgroups table.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"aggregate blockwt values by blockgroup — calc_bgwts_overall","title":"aggregate blockwt values by blockgroup — calc_bgwts_overall","text":"aggregate blockwt values blockgroup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aggregate blockwt values by blockgroup — calc_bgwts_overall","text":"","code":"calc_bgwts_overall(sites2blocks)"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aggregate blockwt values by blockgroup — calc_bgwts_overall","text":"sites2blocks like output getblocksnearby() input doaggregate() custom_doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_bgwts_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aggregate blockwt values by blockgroup — calc_bgwts_overall","text":"data.table, 1 row per blockgroup (even bg near 2+ sites), table unique block groups overall analysis (merged across sites), weight indicates fraction bg population included overall analysis. can used get overall results joined block group residential population data, etc., aggregate indicator block groups using weights.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/calc_byformula.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"DRAFT utility use formulas provided text, calculate indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_byformula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"","code":"calc_byformula(mydf, formulas = NULL, keep = formula_varname(formulas))"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_byformula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"mydf data.frame indicators variables use formulas text strings formulas keep useful formulas just interim steps creating evanescent variables created use later formulas needed ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_byformula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_byformula","text":"data.frame results, mydf data.table, returns data.table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_counties_from_bg.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","title":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","text":"Redo generic HANDLE >1 INDICATOR TIME ! See functions PROXIMITY_FUNCTIONS.R !","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_counties_from_bg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","text":"","code":"calc_counties_from_bg(   childDT,   score_colname,   wt_colname = \"pop\",   bgfips_colname = \"bgfips\",   calc_method = c(\"wtdmean\", \"sum\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_counties_from_bg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","text":"childDT data.table (data.frame) score_colname name column childDT wt_colname name column childDT, used weights weighted mean scores county bgfips_colname name column childDT, must unique rows, first 5 characters must county FIPS code (must include leading zeroes)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_counties_from_bg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","text":"data.table 1 row per county (county childDT provided), just columns \"countyfips\", \"Countyname\", score_colname, wt_colname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_counties_from_bg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - Calculate (aggregate) county scores from block group scores — calc_counties_from_bg","text":"ignores rows NA score_colname, want NA weight (wt_colname) count weight 0, convert zeroes first, function return NA time NA value wt_colname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"DRAFT utility use formulas provided text, calculate indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"","code":"calc_ejam(bg, keep.old = c(\"bgid\", \"pop\"), keep.new = \"all\", formulas)"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"bg data.frame//table indicators variables use keep.old names columns (variables) retain among provided bg keep.new names calculated variables retain output formulas text strings formulas","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"data.frame calculated variables one row per bg row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"may used custom_doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ejam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT utility to use formulas provided as text, to calculate indicators — calc_ejam","text":"","code":"if (FALSE) { # \\dontrun{ ### example using just 10 block groups from 1 county in Delaware   c1 <- fips2countyname(fips_counties_from_state_abbrev('DE'), includestate = FALSE)[1]  bgdf = data.frame(EJAM::blockgroupstats[ST == \"DE\" & countyname == c1, ])[1:10, ]   newdf <- calc_ejam(bgdf, keep.old = \"\",    formulas = c(      \"my_custom_recalc_demog <- (pctlowinc + pctmin)/2\",      \"mystat2  = 100 * pctlowinc\")) cbind(Demog.Index = bgdf$Demog.Index, newdf, pctlowinc = bgdf$pctlowinc)  newdf <- calc_ejam(bgdf, formulas = formulas_d) newdf   ##  example of entire US # newdf1  <- calc_ejam(as.data.frame(bgdf), formulas = formulas_d)   t(summary(newdf1))  bgdf <- data.frame(blockgroupstats) newdf <- calc_ejam(bgdf,                    keep.old = c('bgid', 'pop', 'hisp'),                    keep.new = \"all\",                    formulas = formulas_d ) round(t(newdf[1001:1002, ]), 3) cbind(   newdf[1001:1031, c('hisp', 'pop', 'pcthisp')],   check = (newdf$hisp[1001:1031] / newdf$pop[1001:1031])   ) ## note the 0-100 percentages in blockgroupstats versus the 0-1 calculated percentages cbind(round(sapply(newdf, max, na.rm=TRUE),2), names(newdf) %in% names_pct_as_fraction_blockgroupstats)  EJAM:::formula_varname(formulas_d)  rm(bgdf) } # }"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"Used create input plot_boxplot_ratios() can used elsewhere now","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"","code":"calc_ratios_to_avg(   out,   evarnames = names_e,   dvarnames = c(names_d, names_d_subgroups),   zone.prefix = c(\"\", \"state.\")[1],   avg.evarnames = paste0(zone.prefix, \"avg.\", evarnames),   avg.dvarnames = paste0(zone.prefix, \"avg.\", dvarnames) )"},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"data.frame output ejscreenapi_plus() ejscreenapi() doaggregate(), one row per buffer site, columns indicators named evarnames, dvarnames, avg.evarnames, avg.dvarnames evarnames vector variable names environmental indicators , like pm, o3, etc. dvarnames vector variable names residential population indicators , pctlowinc zone.prefix us state, must fit colnames  avg.pctlowinc state.avg.pctlowinc avg.evarnames use user-specific variable names , defaults like avg.pm avg.dvarnames use user-specific variable names , defaults like  avg.pctlowinc","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"list ratios_d ratios_e vectors numbers lengths dvarnames evarnames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"Note colnames returned input, renamed say \"ratio\" names_d_subgroups included, means API output EJScreen gets means usastats statestats","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/calc_ratios_to_avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get ratios of each site's scores to US means (using output of batch buffering) — calc_ratios_to_avg","text":"","code":"out <- testoutput_ejscreenit_5$table # has long names  names(out) <- fixcolnames(names(out1),'long','r')  out2 <- testoutput_ejscreenapi_plus_5 # has r names already    # these are data.frames, but the colnames are different:  #   names like \"Demog.Index\" but they are ratios  calc_ratios_to_avg(out)$ratios_d  #   names like \"ratio.to.avg.Demog.Index\"  out[ , names_d_ratio_to_avg] # needs EJAM for names_d_ratio_to_avg    plot_boxplot_ratios(calc_ratios_to_avg(out)$ratios_d,\"pctlowinc\",\"% low income\",       wheretext=\"Within a mile of\")"},{"path":"https://usepa.github.io/EJAM-open/reference/censusplaces.html","id":null,"dir":"Reference","previous_headings":"","what":"censusplaces (DATA) Census FIPS and other basic info on roughly 40,000 cities/towns/places — censusplaces","title":"censusplaces (DATA) Census FIPS and other basic info on roughly 40,000 cities/towns/places — censusplaces","text":"Table US cities Census Designated Places, Incorporated Places, County Subdivisions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/censusplaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"censusplaces (DATA) Census FIPS and other basic info on roughly 40,000 cities/towns/places — censusplaces","text":"","code":"censusplaces"},{"path":"https://usepa.github.io/EJAM-open/reference/censusplaces.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"censusplaces (DATA) Census FIPS and other basic info on roughly 40,000 cities/towns/places — censusplaces","text":"object class data.frame 38195 rows 7 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/censusplaces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"censusplaces (DATA) Census FIPS and other basic info on roughly 40,000 cities/towns/places — censusplaces","text":"https://www2.census.gov/geo/docs/reference/codes/PLACElist.txt Column names: eparegion, ST, stfips, countyname, countyfips, placename, fips","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/change.fieldnames.html","id":null,"dir":"Reference","previous_headings":"","what":"change.fieldnames one way to convert variable names (colnames) to friendlier versions — change.fieldnames","title":"change.fieldnames one way to convert variable names (colnames) to friendlier versions — change.fieldnames","text":"change.fieldnames one way convert variable names (colnames) friendlier versions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/change.fieldnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"change.fieldnames one way to convert variable names (colnames) to friendlier versions — change.fieldnames","text":"","code":"change.fieldnames(allnames, oldnames, newnames, file = NA, sort = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/change.fieldnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"change.fieldnames one way to convert variable names (colnames) to friendlier versions — change.fieldnames","text":"allnames vector original fieldnames, oldnames vector just fieldnames changed, newnames vector change file path csv file two columns: oldnames, newnames (instead passing function parameters) sort logical (default FALSE). FALSE, return new fieldnames. sort=TRUE, return vector indexes giving new position given field, based sort order oldnames.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/change.fieldnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"change.fieldnames one way to convert variable names (colnames) to friendlier versions — change.fieldnames","text":"new versions names vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter.html","id":null,"dir":"Reference","previous_headings":"","what":"Count columns with Value (at or) above (or below) threshold — colcounter","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"Count columns Value () () threshold","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"","code":"colcounter(   x,   threshold,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"x Data.frame matrix numbers compared threshold value. threshold numeric threshold value compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare 1 threshold x. TRUE, specify one threshold per column.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"vector counts long NROW(x)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count columns with Value (at or) above (or below) threshold — colcounter","text":"","code":"# \\donttest{   pdata <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))  # pdata <- data.frame(testoutput_ejamit_10pts_1miles$results_bysite)[ , names_e_pctile]  pcuts <-  5 * (0:20)  colcounter_summary(        pdata, pcuts) colcounter_summary_pct(    pdata, pcuts) colcounter_summary_cum(    pdata, pcuts) colcounter_summary_cum_pct(pdata, pcuts) colcounter_summary_cum_pct(pdata, 5 * (10:20))  x80 <- colcounter(pdata, threshold = 80, or.tied = T) x95 <- colcounter(pdata, threshold = 95, or.tied = T) table(x95) tablefixed(x95, NCOL(pdata)) cbind(at80=tablefixed(x80, NCOL(pdata)), at95=tablefixed(x95, NCOL(pdata)))   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"Like colcounter() cols..count() handle multiple thresholds compare indicator, etc. Table counts, percents, cumulative counts, cumulative percents places N, least N, indicators benchmark(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"","code":"colcounter_summary(   x,   thresholdlist,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter() count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare threshold x. TRUE, specify one threshold use column.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"table frequency counts","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize how many rows have N columns at or above (or below) various thresholds? — colcounter_summary","text":"","code":"pdata <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))   ### pdata <- EJAM::blockgroupstats[ , names_e_pctile]  pcuts <-  5 * (0:20)   colcounter_summary(        pdata, pcuts) colcounter_summary_pct(    pdata, pcuts) colcounter_summary_cum(    pdata, pcuts) colcounter_summary_cum_pct(pdata, pcuts) colcounter_summary_cum_pct(pdata, 5 * (10:20)) a3 <- colcounter_summary_all(    pdata, pcuts)  x80 <- colcounter(pdata, threshold = 80, or.tied = T) x95 <- colcounter(pdata, threshold = 95, or.tied = T) table(x95) tablefixed(x95, NCOL(pdata)) cbind(at80=tablefixed(x80, NCOL(pdata)), at95=tablefixed(x95, NCOL(pdata)))"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"wraps 4 functions return 4 tables: using colcounter_summary(), colcounter_summary_pct(), colcounter_summary_cum(), colcounter_summary_cum_pct() another view text explanations findings, see count_sites_with_n_high_scores()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"","code":"colcounter_summary_all(x, thresholdlist, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed 4 functions like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"table cumulative frequency counts etc., including count, cum, pct, cum_pct","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize count (and percent) of rows with exactly (and at least) N cols >= various thresholds — colcounter_summary_all","text":"","code":"# df <-  bg22[ , names.ej.pctile]  df <- data.frame(a=rep(80,4),b=rep(93,4), col3=c(49,98,100,100))  bench <- 5 * (0:20)  a3 <- colcounter_summary_all(df, bench)  a3[,'95',]  a3[,,'cum_pct']  a3['0',,]; a3[1,,]  a3[dim(a3)[1],,]  # a3['12',,]; a3[13,,]    # \\donttest{  barplot(colcounter_summary_cum_pct(pdata, pcuts)[ , '80'],     ylab='% of places', xlab='# of indicators at/above threshold',     main='% of places with at least N/13 indicators >=80th percentile')   barplot(colcounter_summary(pdata, pcuts)[2:13 , '95'],     ylab='# of places', xlab='# of indicators at/above threshold',     main='# of places with exactly N/13 indicators >=95th percentile')    # pdata <- ejscreen package file bg22[ , names.e.pctile]   colcounter_summary_cum_pct(pdata,c(50,80,90,95))   xs <- 1:13   plot(x=xs, y=colcounter_summary_cum_pct(pdata, 50)[xs+1],    type='b', col='gray', ylim=c(0, 100),     main='% of places with at least x/13 indicators >=Nth percentile',      ylab='% of places', xlab='# of indicators')   points(xs, colcounter_summary_cum_pct(pdata, 80)[xs+1], type='b', col='blue')   points(xs, colcounter_summary_cum_pct(pdata, 90)[xs+1], type='b', col='orange')   points(xs, colcounter_summary_cum_pct(pdata, 95)[xs+1], type='b', col='red')   legend(x = 'topright', legend = paste0('>= ', c(50, 80, 90, 95),'th percentile'),    fill = c('gray', 'blue', 'orange', 'red'))    # pdata <- bg22[ ,  names.ej.pctile]   colcounter_summary_cum_pct(pdata,c(50,80,90,95))   xs <- 1:13   plot(x=xs, y=colcounter_summary_cum_pct(pdata, 50)[xs+1],      type='b', col='gray', ylim=c(0, 40),     main='% of places with at least x/13 indicators >=Nth percentile', ylab='% of places',      xlab='# of indicators')   points(xs, colcounter_summary_cum_pct(pdata, 80)[xs+1], type='b', col='blue')   points(xs, colcounter_summary_cum_pct(pdata, 90)[xs+1], type='b', col='orange')   points(xs, colcounter_summary_cum_pct(pdata, 95)[xs+1], type='b', col='red')   legend(x = 'topright', legend = paste0('>= ', c(50, 80, 90, 95),'th percentile'),      fill = c('gray', 'blue', 'orange', 'red')) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"See colcounter_summary() details examples","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"","code":"colcounter_summary_cum(   x,   thresholdlist,   or.tied = TRUE,   na.rm = TRUE,   below = FALSE,   one.cut.per.col = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize how many rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare .tied TRUE, include ties (value x equals threshold) na.rm TRUE, used colcounter count non-NA columns given row TRUE, count x threshold threshold one.cut.per.col FALSE, compare threshold x. TRUE, specify one threshold use column.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"Summarize percent rows LEAST N columns () various thresholds","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"","code":"colcounter_summary_cum_pct(x, thresholdlist, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_cum_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize what percent of rows have AT LEAST N columns at or above (or below) various thresholds — colcounter_summary_cum_pct","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed colcounter_summary_cum() like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"See colcounter_summary() details examples","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"","code":"colcounter_summary_pct(x, thresholdlist, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/colcounter_summary_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize what percent of rows have N columns at or above (or below) various thresholds — colcounter_summary_pct","text":"x Data.frame matrix numbers compared threshold value, like percentiles example. thresholdlist vector numeric threshold values compare ... passed colcounter_summary() like .tied=TRUE, na.rm=TRUE, =FALSE, one.cut.per.col=FALSE","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colMaxs2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum of each column of data.frame — colMaxs2","title":"Get maximum of each column of data.frame — colMaxs2","text":"Get maximum column data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colMaxs2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum of each column of data.frame — colMaxs2","text":"","code":"colMaxs2(df, na.rm = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/colMaxs2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum of each column of data.frame — colMaxs2","text":"df data.frame matrix. Can include numbers stored character factors. na.rm default TRUE. tested FALSE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colMaxs2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum of each column of data.frame — colMaxs2","text":"named vector numbers","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colMaxs2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maximum of each column of data.frame — colMaxs2","text":"","code":"df <- rbind(NA, data.frame(   n1 = c(0, 0:8), n2 = c(0.1 + (0:9)), n3 = c(1:10),    allnas = c(rep(NA, 10)),   logic = TRUE,    factortxt = factor('factor'),    txt = 'words',   numberlike = as.character(6:15),   numberlikefact = factor(as.character(6:15)),   stringsAsFactors = FALSE))    df colMaxs2(df)"},{"path":"https://usepa.github.io/EJAM-open/reference/colMins2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get minimum of each column of data.frame — colMins2","title":"Get minimum of each column of data.frame — colMins2","text":"Get minimum column data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colMins2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get minimum of each column of data.frame — colMins2","text":"","code":"colMins2(df, na.rm = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/colMins2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get minimum of each column of data.frame — colMins2","text":"df data.frame matrix. Can include numbers stored character factors. na.rm default TRUE. tested FALSE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/colMins2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get minimum of each column of data.frame — colMins2","text":"named vector numbers","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/colMins2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get minimum of each column of data.frame — colMins2","text":"","code":"df <- rbind(NA, data.frame(   n1 = c(0, 0:8), n2 = c(0.1 + (0:9)), n3 = c(1:10),    allnas = c(rep(NA, 10)),   logic = TRUE,    factortxt = factor('factor'),    txt = 'words',   numberlike = as.character(6:15),   numberlikefact = factor(as.character(6:15)),   stringsAsFactors = FALSE))    df colMins2(df)"},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert units of distance or area — convert_units","title":"Convert units of distance or area — convert_units","text":"convert_units converts distance area specified units specified units.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert units of distance or area — convert_units","text":"","code":"convert_units(x, from = \"km\", towhat = \"mi\")"},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert units of distance or area — convert_units","text":"x number vector numbers converted. string specifying original units input parameter. Default 'km' kilometers. Note must units. Units can specified following: c( 'millimeter', 'millimeters', 'centimeter', 'centimeters', 'meter', 'meters', 'kilometer', 'kilometers', \"mm\", \"cm\", \"m\", \"km\", \"sqmm\", \"sqcm\", \"sqm\", \"sqkm\", \"mm2\", \"cm2\", \"m2\", \"km2\", 'inch', 'inches', 'foot', 'feet', 'yard', 'yards', 'mile', 'miles', \"\", \"ft\", \"yd\", \"mi\", \"sqin\", \"sqft\", \"sqyd\", \"sqmi\", \"in2\", 'ft2', 'yd2', 'mi2' ) Note m2 square meters square miles. towhat string specifying new units convert . Default 'mi' miles.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert units of distance or area — convert_units","text":"Returns number vector numbers length input x, element corresponding input element converted new units.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert units of distance or area — convert_units","text":"function takes number, vector numbers, representing distance/length area one type specified units, miles, returns corresponding number(s) converted units, kilometers. Units can specified various ways. inputs must units. outputs must single set units well. NOTE: purposes, Census Bureau : \"ANSI standard converting square kilometers square miles used ( 1 square mile = 2.58998811 square kilometers).\" see https://www.census.gov/geo/reference/state-area.html conversions function use 2.5899881034 2.58998811 sqkm/sqmi. difference 6.6 per billion (roughly 1 152 million), less one tenth square kilometer entire USA.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/convert_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert units of distance or area — convert_units","text":"","code":"convert_units(1, 'mi', 'km') convert_units(c(1e6, 1), 'sqm', 'sqkm')"},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"FIPS - Analyze US Counties sites, get summary indicators summary county","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"","code":"counties_as_sites(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"fips County FIPS vector, like fips_counties_from_state_abbrev(\"DE\")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"provides table similar output getblocksnearby(), data.table one row per blockgroup counties, pairs county fips - bgid, ejam_uniq_id (1 N) assigned county missing blockid distance ready doaggregate().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"function provides one row per blockgroup. getblocksnearby_from_fips() provides one row per block. See \"Value\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/counties_as_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Analyze US Counties as if they were sites, to get summary indicators summary for each county — counties_as_sites","text":"","code":"# compare counties within a state:  fipsRI = fips_counties_from_state_abbrev(\"RI\")  x = counties_as_sites(fipsRI)  out = doaggregate(x) # similar to ejamit()  ejam2barplot_sites(out, \"pop\", names.arg = fipsRI)    # compare two specific counties:  counties_as_sites(c('01001','72153'))    # Largest US Counties by ACS Population Totals:  topcounties = blockgroupstats[ , .(ST = ST[1], countypop = sum(pop)),   by = .(FIPS = substr(bgfips,1,5))][order(-countypop),][1:20, .(     CountyPopulation = prettyNum(countypop, big.mark = \",\"), FIPS, ST)]    myfips = topcounties$FIPS    # simplest map of top counties  map_shapes_leaflet(shapes = shapes_counties_from_countyfips(myfips))    # simplest way to get and map results county by county  out_c1 = ejamit(fips = myfips)  mapfastej_counties(out_c1$results_bysite)      # another way to get and map results county by county  s2b = counties_as_sites(myfips)  out_c2 = doaggregate(s2b)   # but without URLs/links to reports  bysite = out_c2$results_bysite  bysite$ejam_uniq_id <- myfips  mapfastej_counties(bysite)"},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_after_getpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","title":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","text":"utility - count topoints near frompoint, getpointsnearby() getfrsnearby() getblocksnearby() already run","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_after_getpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","text":"","code":"countpoints_after_getpoints(   sites2points,   frompoints_id_colname = \"ejam_uniq_id\",   topoints_id_colname = \"blockid\",   radius = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_after_getpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","text":"sites2points output function like getpointsnearby() getfrsnearby() getblocksnearby() frompoints_id_colname character string name column sites2points unique ID frompoints topoints_id_colname character string name column topoints unique ID counted points radius optional, less equal radius originally used create sites2points. radius provided , function counts topoints distance less equal radius (likely subset points within original radius used create sites2points). can run example, s2s <- getpointsnearby(frompoints = testpoints_10[1,], topoints = frs_from_naics(\"cement\"), radius = 30)  countpoints_after_getpoints(s2s) countpoints_after_getpoints(s2s, radius = 20) countpoints_after_getpoints(s2s, radius = 10) countpoints_after_getpoints(s2s, radius = 5) countpoints_after_getpoints(s2s, radius = 3)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_after_getpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","text":"counts data.table column N count, column named via frompoints_id_colname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_after_getpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - count topoints near each frompoint, AFTER getpointsnearby() or getfrsnearby() or getblocksnearby() was already run — countpoints_after_getpoints","text":"","code":"countpoints_after_getpoints(testoutput_getblocksnearby_10pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_nearby.html","id":null,"dir":"Reference","previous_headings":"","what":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","title":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","text":"count number topoints within specified radius frompoint","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_nearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","text":"","code":"countpoints_nearby(frompoints, topoints, radius = 3)"},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_nearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","text":"frompoints table lat,lon colnames topoints table lat,lon colnames radius search radius miles frompoints","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_nearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","text":"table vector??  1 row per frompoints row, column attribute called \"unique\" store count unique topoints overall","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/countpoints_nearby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"count the number of topoints within a specified radius of each frompoint — countpoints_nearby","text":"","code":"# countpoints_nearby(pts_sites, pts_features, radius = 3)"},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"function provides tables summary stats also text explains findings plain English. relies colcounter_summary_all()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"","code":"count_sites_with_n_high_scores(   scores,   thresholds = NULL,   indicator_type = c(\"percentile\", \"ratio\", \"other\")[2],   xwide = c(\"\", \"statewide\", \"nationwide\")[1],   site_stat_type = c(\"cum_pct\", \"cum_count\", \"pct\", \"count\")[1],   text_suffix = c(\"th percentile\", \" times the average\", \"\")[match(indicator_type,     c(\"percentile\", \"ratio\", \"other\"))],   text_indicatortype = \"indicators\",   quiet = !interactive() )"},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"scores scores table one row per place one column per indicator thresholds thresholds vector numbers benchmarks. Assuming indicators scores table ratios average, thresholds example, 1.50, 2, etc. represent ratios 1.5x 2x etc. indicator_type Scores benchmarks percentiles, ratios, anything else. One : c(\"percentile\", \"ratio\", \"\") xwide must \"statewide\" \"nationwide\" – used text output describes findings. site_stat_type Count share sites, exactly cumulatively. One : c(\"cum_pct\", \"cum_count\", \"pct\", \"count\") text_suffix using ratios, use default, explains thresholds X times average. using percentiles thresholds, set text_suffix = \".\" text_suffix = \"th percentile state.\" example text_indicatortype can \"Summary Indexes\" etc. quiet whether print findings console","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"Returns list two named elements, \"stats\" \"text\" stats 3-dimensional array numbers. See dimnames(output$stats).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"Helps provide stat summaries : (x%) (sites) least (N) (YTYPE )indicators least (R) times (State/National average)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/count_sites_with_n_high_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Answers questions like how many sites have certain indicators >2x the state avg? — count_sites_with_n_high_scores","text":"","code":"# out <- ejamit(testpoints_100, radius = 1) out <- testoutput_ejamit_1000pts_1miles  x <- out$results_bysite x <- setDF(copy(x)) ratio_data <- x[, names_d_ratio_to_state_avg] ratio_benchmarks <- c(2, 3, 5, 10)  findings <- count_sites_with_n_high_scores(ratio_data, ratio_benchmarks)  names(findings) dim(findings$text) #   see most striking stat only tail(findings$text[findings$text != \"\"], 1) # the most extreme finding findings$text[findings$text != \"\"]  dimnames(findings$stats) # count, cut, stat ## stat can be count, cum, pct, or cum_pct  findings$stats[1,,] # any of the indicators (at least one indicator) findings$stats[,,\"count\"] findings$stats[ , , 1] findings$stats[ , 1, ]  pctile_data <- testoutput_ejamit_1000pts_1miles$results_bysite pctile_data <- pctile_data[, ..names_ej_state_pctile] pctile_benchmarks <- 90 y <- count_sites_with_n_high_scores(pctile_data, pctile_benchmarks,   indicator_type = \"percentile\",   text_indicatortype = \"Summary Indexes\", xwide = \"statewide\"    )  # At how many sites is at least one of these indicators at least 90th pctile nationwide? sum(rowMaxs2(data.frame(pctile_data)) >= 90, na.rm = T) ## or  count_sites_with_n_high_scores(pctile_data, 90,    xwide = \"nationwide\", quiet = T)$stats[count = \"1\", cut = \"90\", stat = \"cum\"]   # see most striking stat only mx <- count_sites_with_n_high_scores(pctile_data,    thresholds = 1:100, quiet = TRUE,   text_indicatortype = \"Summary Indexes\",   text_suffix = \"th percentile in the state.\") tail(mx$text[mx$text != \"\"], 1) # the most extreme finding"},{"path":"https://usepa.github.io/EJAM-open/reference/create_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"create_filename - construct custom filename for downloads in EJAM app — create_filename","title":"create_filename - construct custom filename for downloads in EJAM app — create_filename","text":"Builds filename file description, analysis title, buffer distance, site selection method. Values pulled Shiny app used .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_filename - construct custom filename for downloads in EJAM app — create_filename","text":"","code":"create_filename(   file_desc = \"\",   title = \"\",   buffer_dist = 0,   site_method = \"\",   with_datetime = TRUE,   ext = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/create_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_filename - construct custom filename for downloads in EJAM app — create_filename","text":"file_desc file description, \"short report\", \"long report\", \"results_table\" title analysis title buffer_dist buffer distance site_method site selection method, SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT with_datetime boolean include date time ext optional file extension. check '.' add provided","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_filename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create_filename - construct custom filename for downloads in EJAM app — create_filename","text":"Returns string pasted filename specified components","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_filename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create_filename - construct custom filename for downloads in EJAM app — create_filename","text":"","code":"# specify all arguments create_filename(   file_desc = 'results_table', title = 'My Title',    buffer_dist = 1, site_method = 'NAICS',    with_datetime=TRUE, ext = '.xlsx' ) # specify title only create_filename(title = 'Summary of Analysis')"},{"path":"https://usepa.github.io/EJAM-open/reference/create_interactive_table.html","id":null,"dir":"Reference","previous_headings":"","what":"create_interactive_table - function that creates interactive html version of site by site table in app — create_interactive_table","title":"create_interactive_table - function that creates interactive html version of site by site table in app — create_interactive_table","text":"Builds site site table analysis EJAM app. Pulls uploaded analyzed data create table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_interactive_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create_interactive_table - function that creates interactive html version of site by site table in app — create_interactive_table","text":"","code":"create_interactive_table(data_processed, testing)"},{"path":"https://usepa.github.io/EJAM-open/reference/create_interactive_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create_interactive_table - function that creates interactive html version of site by site table in app — create_interactive_table","text":"data_processed processed data app_server testing variable indicate analysis tested","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_quaddata.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","title":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","text":"Used indexpoints() turn used proxistat(). prepares set coordinates ready indexing.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_quaddata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","text":"","code":"create_quaddata(pts, idcolname = NULL, xyzcolnames = c(\"x2\", \"z2\", \"y2\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/create_quaddata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","text":"pts data.frame data.table columns name lat lon, one row per location (point), columns ignored. idcolname NULL (default), pointid column created unique id 1:NROW(). creating index blocks, idcolname \"blockid\" set \"id\" just uses even unique id. indexpoints() directly refer column index probably incorporates . xyzcolnames creating quaddata localtree index blocks, must set c(\"BLOCK_X\", \"BLOCK_Z\", \"BLOCK_Y\") ??","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_quaddata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","text":"returns data.table one row per point, columns names c(xyzcolnames, idcolname)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/create_quaddata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create a table used to create a quadtree spatial index of points etc. — create_quaddata","text":"similar used prepare quaddata, used getblocksnearby(). Note table index needed getblocksnearby() getpointsnearby() ! 8 million block points, takes couple seconds , may useful store index session rather building time used. saved disk works.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — custom","title":"a list of variable names for internal use in EJAM — custom","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — custom","text":"","code":"custom"},{"path":"https://usepa.github.io/EJAM-open/reference/custom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — custom","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — custom","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/custom_doaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"custom version of doaggregate(), to calculate user-provided indicators — custom_doaggregate","title":"custom version of doaggregate(), to calculate user-provided indicators — custom_doaggregate","text":"custom version doaggregate(), calculate user-provided indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom_doaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom version of doaggregate(), to calculate user-provided indicators — custom_doaggregate","text":"","code":"custom_doaggregate(   sites2blocks,   custom_blockgroupstats = blockgroupstats,   countcols = \"pop\",   popmeancols = names_these,   wtcols = \"pop\",   custom_formulas = NULL,   custom_cols = NULL,   custom_map_headernames = map_headernames )"},{"path":"https://usepa.github.io/EJAM-open/reference/custom_doaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom version of doaggregate(), to calculate user-provided indicators — custom_doaggregate","text":"sites2blocks see doaggregate() custom_blockgroupstats like blockgroupstats custom indicators, one value per block group, colnames bgid, bgfips, pop countcols vector colnames custom_blockgroupstats aggregated sums counts, like population counts popmeancols vector colnames custom_blockgroupstats aggregated weighted means, population weighted weights wtcols vector colnames use weights wtd means, length popmeancols, used yet custom_formulas like formulas_all,  used yet custom_cols used yet custom_map_headernames like map_headernames custom indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom_doaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"custom version of doaggregate(), to calculate user-provided indicators — custom_doaggregate","text":"list tables similar doaggregate() returns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"custom version of ejamit() for calculating user-provided indicators — custom_ejamit","title":"custom version of ejamit() for calculating user-provided indicators — custom_ejamit","text":"custom version ejamit() calculating user-provided indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom version of ejamit() for calculating user-provided indicators — custom_ejamit","text":"","code":"custom_ejamit(   sitepoints,   radius = 3,   fips = NULL,   shapefile = NULL,   custom_blockgroupstats = blockgroupstats,   countcols = names_wts,   popmeancols = names_these,   wtcols = names_wts,   custom_formulas = NULL,   custom_cols = NULL,   custom_map_headernames = map_headernames )"},{"path":"https://usepa.github.io/EJAM-open/reference/custom_ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom version of ejamit() for calculating user-provided indicators — custom_ejamit","text":"sitepoints see ejamit() radius see ejamit() fips see ejamit() shapefile see ejamit() custom_blockgroupstats like blockgroupstats custom indicators, one value per block group, colnames bgid, bgfips, pop countcols vector colnames custom_blockgroupstats aggregated sums counts, like population counts popmeancols vector colnames custom_blockgroupstats aggregated weighted means, population weighted weights wtcols vector colnames use weights wtd means, length popmeancols, used yet custom_formulas like formulas_all,  used yet custom_cols used yet custom_map_headernames like map_headernames custom indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/custom_ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"custom version of ejamit() for calculating user-provided indicators — custom_ejamit","text":"returns output custom_doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_dynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to download / load datasets — dataload_dynamic","title":"Utility to download / load datasets — dataload_dynamic","text":"Utility download / load datasets","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_dynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to download / load datasets — dataload_dynamic","text":"","code":"dataload_dynamic(   varnames = .arrow_ds_names[1:3],   envir = globalenv(),   folder_local_source = NULL,   silent = FALSE,   return_data_table = TRUE,   onAttach = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_dynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to download / load datasets — dataload_dynamic","text":"varnames character vector names R objects get board, set \"\" load envir needed specify environment default, e.g., globalenv() parent.frame() folder_local_source path local folder look locally saved copies silent set TRUE suppress cat() msgs console return_data_table whether read_ipc_file() return data.table (T, default), arrow (F). Passed dataload_from_local() onAttach Indicates whether function called onAttach. , download arrow files necessary","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_dynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to download / load datasets — dataload_dynamic","text":"returns vector names objects now memory specified envir, either already memory loaded local disk successfully downloaded.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_dynamic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to download / load datasets — dataload_dynamic","text":"First checks memory, installed package's data folder package first loaded, arrow files downloaded repository called ejamdata package's data directory","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Load datasets from local disk folder — dataload_from_local","title":"Load datasets from local disk folder — dataload_from_local","text":"Utility analysts / developers store large block / data locally instead re-downloading","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load datasets from local disk folder — dataload_from_local","text":"","code":"dataload_from_local(   varnames = .arrow_ds_names[1:3],   envir = globalenv(),   folder_local_source = NULL,   justchecking = FALSE,   testing = FALSE,   silent = FALSE,   return_data_table = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load datasets from local disk folder — dataload_from_local","text":"varnames use defaults, vector names like \"bgej\" use \"\" get available envir use defaults. see dataload_dynamic() folder_local_source local folder path. see dataload_dynamic() justchecking use defaults. DEPRECATED testing use defaults silent set TRUE stop cat() printing console like running tests return_data_table whether read_ipc_file() return data.table (T, default), arrow (F)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load datasets from local disk folder — dataload_from_local","text":"vector paths files (derived varnames) actually found folder_local_source, already memory, just ones loaded disk already memory found disk locally.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load datasets from local disk folder — dataload_from_local","text":"See dataload_dynamic() also. dataload_dynamic rm(bgid2fips, blockid2fips, blockpoints, blockwts, quaddata) dataload_from_local(folder_local_source = '.')","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"Utility load couple datasets using data immediately instead relying lazy loading","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"","code":"dataload_from_package(   olist = c(\"blockgroupstats\", \"usastats\", \"statestats\"),   envir = globalenv() )"},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"olist vector strings giving names objects load using data(). also include large datasets slow lazyload always needed: \"frs\", \"frs_by_programid \", \"frs_by_naics\", etc. envir environment loaded","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"Nothing","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"See also read_builtin() function readr package! Default load datasets memory immediately. blockgroupstats, usastats, statestats, others always essential EJAM, frs frs_by_programid huge datasets (frs_by_sic frs_by_naics) always used - find regulated facilities ID, etc. frs-related datasets can roughly 1.5 GB RAM, perhaps.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/dataload_from_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to load a couple of datasets using data immediately instead of relying on lazy loading — dataload_from_package","text":"","code":"x <- datapack(\"EJAM\")   subset(x, x$size >= 0.1) # at least 100 KB   grep(\"names_\", x$Item, value = T, ignore.case = T, invert = T) # most were like names_d, etc.   ls()   data(\"avg.in.us\", package=\"EJAM\") # lazy load an object into memory and make it visible to user   ls()   rm(avg.in.us, x)"},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"Wrapper data() can get memory size objects","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"","code":"datapack(pkg = \"EJAM\", len = 30, sortbysize = TRUE, simple = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"pkg character vector giving package(s) look data sets len affects printed console - specifies number characters limit Title , making easier see console. sortbysize TRUE (simple=F), sort increasing size object, within package, alpha. simple FALSE get object sizes, etc., TRUE just get names package, like data(package = \"EJAM\")$results[, c(\"Package\", 'Item')]","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"simple = TRUE, data.frame colnames Package Item. simple = FALSE, data.frame colnames Package, Item, size, Title.Short","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"rely much - quick utility. may create leave objects global envt - careful .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/datapack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UTILITY - DRAFT - See names and size of data sets in installed package(s) - internal utility function — datapack","text":"","code":"# see just a vector of the data object names  data(package = \"EJAM\")$results[, 'Item']   # not actually sorted within each pkg by default  datapack()  # not actually sorted by default  datapack(\"EJAM\")$Item  ##datapack(\"MASS\", simple=T)   # sorted by size if simple=F  ##datapack(\"datasets\", simple=F)  x <- datapack(simple = F)  # sorted by size already, to see largest ones among all these pkgs:  tail(x[, 1:3], 20)   # sorted alphabetically within each pkg  x[order(x$Package, x$Item), 1:2]  # sorted alphabetically across all the pkgs  x[order(x$Item), 1:2]   # datasets as lazyloaded objects vs. files installed with package  topic = \"fips\"  # or \"shape\" or \"latlon\" or \"naics\" or \"address\" etc.  # datasets / R objects cbind(data.in.package  = sort(grep(topic, EJAM:::datapack()$Item, value = T)))  # files cbind(files.in.package = sort(basename(testdata(topic, quiet = T))))"},{"path":"https://usepa.github.io/EJAM-open/reference/default_points_shown_at_startup.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Points Shown at Startup keywords internal — default_points_shown_at_startup","title":"Default Points Shown at Startup keywords internal — default_points_shown_at_startup","text":"Default Points Shown Startup keywords internal","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/default_points_shown_at_startup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Points Shown at Startup keywords internal — default_points_shown_at_startup","text":"","code":"default_points_shown_at_startup"},{"path":"https://usepa.github.io/EJAM-open/reference/default_points_shown_at_startup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default Points Shown at Startup keywords internal — default_points_shown_at_startup","text":"object class data.frame 2 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dependencies_of_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"utility for developing package, see what pkgs it depends on, recursively (i.e., downstream ones too) Reminder of ways to check this is printed to console. — dependencies_of_ejam","title":"utility for developing package, see what pkgs it depends on, recursively (i.e., downstream ones too) Reminder of ways to check this is printed to console. — dependencies_of_ejam","text":"utility developing package, see pkgs depends , recursively (.e., downstream ones ) Reminder ways check printed console.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dependencies_of_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility for developing package, see what pkgs it depends on, recursively (i.e., downstream ones too) Reminder of ways to check this is printed to console. — dependencies_of_ejam","text":"","code":"dependencies_of_ejam(   localpkg = \"EJAM\",   depth = 6,   ignores_grep = \"0912873410239478\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/dependencies_of_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility for developing package, see what pkgs it depends on, recursively (i.e., downstream ones too) Reminder of ways to check this is printed to console. — dependencies_of_ejam","text":"localpkg \"EJAM\" another installed package depth used using deepdep package function ignores_grep used using deepdep package function","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dir2.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - quick way to do dir() but for query pattern like *.xlsx useful if you forget glob2rx() is available — dir2","title":"utility - quick way to do dir() but for query pattern like *.xlsx useful if you forget glob2rx() is available — dir2","text":"utility - quick way dir() query pattern like  *.xlsx useful forget glob2rx() available","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dir2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - quick way to do dir() but for query pattern like *.xlsx useful if you forget glob2rx() is available — dir2","text":"","code":"dir2(   query_glob = \"*.*\",   ignore.case = TRUE,   recursive = FALSE,   silent = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/dir2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - quick way to do dir() but for query pattern like *.xlsx useful if you forget glob2rx() is available — dir2","text":"query_glob optional, something like \".r\" \".xlsx\" \"myfile.\" \"*.*\", like dir(pattern = glob2rx(query_glob)) ignore.case passed dir() recursive passed dir(), often useful set TRUE silent whether avoid printing console ... passed dir()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dir2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - quick way to do dir() but for query pattern like *.xlsx useful if you forget glob2rx() is available — dir2","text":"vector paths","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all distances between two sets of points (based on lat/lon) — distances.all","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"Returns distances one set geographic points another set points. Can return matrix distances (m x n points) vector data.frame one row per pair. Lets specify units whether need lat/lon etc, essentially just wrapper sf package sf::st_distance sf::st_as_sf functions.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"","code":"distances.all(   frompoints,   topoints,   units = \"miles\",   return.crosstab = FALSE,   return.rownums = TRUE,   return.latlons = TRUE,   as.df = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"frompoints matrix data.frame two cols, 'lat' 'lon' datum=WGS84 assumed. topoints matrix data.frame two cols, 'lat' 'lon' datum=WGS84 assumed. units string 'miles' default, 'km' kilometers, specifying units distances returned. return.crosstab Logical value, FALSE default. TRUE, value returned matrix distances, row per frompoint col per topoint. return.rownums Logical value, TRUE default. TRUE, value returned also includes two extra columns: col index numbers starting 1 specifying frompoint similar col specifying topoint. crosstab=TRUE, ignores return.rownums return.latlons return.latlons Logical value, TRUE default. TRUE, value returned also includes four extra columns, showing fromlat, fromlon, tolat, tolon. crosstab=TRUE, ignores return.rownums return.latlons .df Logical, default TRUE, case returns data.frame (unless vector), otherwise matrix (unless vector).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"default, returns dataframe 3 columns: fromrow, torow, distance (fromrow torow row number corresponding input, starting 1). return.crosstab=FALSE, default, return.rownums /return.latlons TRUE, returns row per -pair, columns depending parameters, sorted first cycling topoints first frompoint, . return.crosstab=FALSE return.rownums return.latlons FALSE, returns vector distances order rows described . return.crosstab=TRUE, returns matrix distances, one row per frompoint one column per topoint.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"","code":"*** Probably slower than it needs to be partly by using data.frame    instead of matrix class? Maybe 10-20 percent faster if as.df=FALSE than if TRUE   Just using distances.all is reasonably fast?   When it was still using sp and not sf package, it was     (30-40 seconds for     100 million distances, but slow working with results so large),  Sys.time(); x=distances.all(testpoints_n(1e5), testpoints_n(1000),    return.crosstab=TRUE); Sys.time()         IF NO PROCESSING OTHER THAN CROSSTAB  Sys.time(); x=distances.all(testpoints_n(1e6), testpoints_n(100),     return.crosstab=TRUE); Sys.time()         (1m x 100, or 100k x 1000)  Sys.time(); x=distances.all(testpoints_n(1e6), testpoints_n(300),    return.crosstab=TRUE); Sys.time()     seconds for 300 million pairs.   plus_____ seconds or so for x[x>100] <- Inf        # so 11m blocks to 1k points could take >xxx minutes!        (you would want to more quickly remove the ones outside some radius)             About xxx seconds per site for 11m blocks?      Sys.time(); x=distances.all(testpoints_n(1e5), testpoints_n(1000),       units='miles',return.rownums=TRUE); Sys.time()   xxx SECONDS IF DATA.FRAME ETC. DONE       TO FORMAT RESULTS AND GET ROWNUMS    Sys.time(); x=distances.all(testpoints_n(1e5), testpoints_n(1000),      units='miles',return.rownums=TRUE)$d; Sys.time()    xxx SECONDS IF DATA.FRAME ETC. DONE       TO FORMAT RESULTS AND GET ROWNUMS IN distances.all"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/distances.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all distances between two sets of points (based on lat/lon) — distances.all","text":"","code":"set.seed(999) t1=testpoints_500[1,c(\"lon\", \"lat\")] t10=testpoints_500[1:10,c(\"lon\", \"lat\")] t100=testpoints_500[1:100,c(\"lon\", \"lat\")] t1k=rbind(testpoints_500, testpoints_500)  distances.all(t1, t1) distances.all(t1, t10[2, , drop = FALSE]) x=distances.all(t10, t100[1:20 , ], units = 'km')  plot(x$tolon, x$tolat,pch='.')  points(x$fromlon, x$fromlat)  with(x, linesegments(fromlon, fromlat, tolon, tolat ))  with(x[x$d < 500, ], linesegments(fromlon, fromlat, tolon, tolat ,col='red'))     test.from <- structure(list(fromlat = c(38.9567309094, 45),      fromlon = c(-77.0896572305, -100)), .Names = c(\"lat\", \"lon\"),      row.names = c(\"1\", \"2\"), class = \"data.frame\")     test.to <- structure(list(tolat = c(38.9575019287, 38.9507043428, 45),     tolon = c(-77.0892818598, -77.2, -90)),     .Names = c(\"lat\", \"lon\"), class = \"data.frame\",     row.names = c(\"1\", \"2\", \"3\"))  test.to.NA = rbind(c(NA,NA), test.to[2:3,])  test.from.NA = rbind(test.from[1,], c(NA,NA))   distances.all(test.from, test.to) distances.all(test.from, test.to, return.crosstab=TRUE) distances.all(test.from, test.to, return.rownums=FALSE) distances.all(test.from, test.to, return.latlons=FALSE) distances.all(test.from, test.to, return.latlons=FALSE,    return.rownums=FALSE)       # test cases distances.all(test.from,    test.to.NA) distances.all(test.from.NA, test.to) distances.all(test.from.NA, test.to.NA) distances.all(test.from[1,],test.to[1,],return.rownums=F, return.latlons=F) distances.all(test.from[1,],test.to[1,],return.rownums=FALSE, return.latlons=TRUE) distances.all(test.from[1,],test.to[1,],return.rownums=TRUE, return.latlons=FALSE) distances.all(test.from[1,],test.to[1,],return.rownums=TRUE, return.latlons=TRUE)  distances.all(test.from[1,],test.to[1:3,],return.rownums=F, return.latlons=F) distances.all(test.from[1,],test.to[1:3,],return.rownums=FALSE, return.latlons=TRUE) distances.all(test.from[1,],test.to[1:3,],return.rownums=TRUE, return.latlons=FALSE) distances.all(test.from[1,],test.to[1:3,],return.rownums=TRUE, return.latlons=TRUE)  distances.all(test.from[1:2,],test.to[1,],return.rownums=F, return.latlons=F) distances.all(test.from[1:2,],test.to[1,],return.rownums=FALSE, return.latlons=TRUE) distances.all(test.from[1:2,],test.to[1,],return.rownums=TRUE, return.latlons=FALSE) distances.all(test.from[1:2,],test.to[1,],return.rownums=TRUE, return.latlons=TRUE)  round(distances.all(test.from[1:2,],test.to[1:3,],return.rownums=F, return.latlons=F),1) distances.all(test.from[1:2,],test.to[1:3,],return.rownums=FALSE, return.latlons=T) distances.all(test.from[1:2,],test.to[1:3,],return.rownums=TRUE, return.latlons=F) distances.all(test.from[1:2,],test.to[1:3,],return.rownums=TRUE, return.latlons=TRUE) distances.all(test.from[1:2,],test.to[1:3,], return.rownums=TRUE,   return.latlons=TRUE, units='km') distances.all(test.from[1:2,],test.to[1:3,], return.rownums=TRUE,   return.latlons=TRUE, units='miles')  distances.all(test.from[1,],test.to[1:3, ], return.crosstab=TRUE) distances.all(test.from[1:2,],test.to[1, ], return.crosstab=TRUE) round(distances.all(test.from[1:2,],test.to[1:3, ], return.crosstab=TRUE, units='miles'),2) round(distances.all(test.from[1:2,],test.to[1:3, ], return.crosstab=TRUE, units='km'),2)"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average distance for ONE population group versus everyone else — distance_by_group1","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"Get average distance ONE population group versus everyone else","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"","code":"distance_by_group1(   results_bybg_people,   demogvarname = varlist2names(\"names_d\")[1],   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname e.g., \"pctlowinc\" demoglabel e.g., \"Low Income Residents\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"list 2 numbers: avg_distance_for_group avg_distance_for_nongroup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"Note Avg Distance range distances Demog group, & %D function distance: info blockgroup near site, means small % bgs duplicated table:   Mostly want overall (site) know avg cum distrib distances demog, (also %D function continuous distance), stats want take unique blockgroups , using shorter distance, distribution distances double-count people. might also want see distribution distances D just 1 site? might also want see %D function continuous distance just 1 site? retain flexibility doaggregate() reports instances blockgroup-site pairings.","code":"results_bybg_people"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get average distance for ONE population group versus everyone else — distance_by_group1","text":"","code":"y <- ejamit(testpoints_100, radius = 3)    # see barplot and table comparing groups to see which are closer to sites analyzed  plot_distance_mean_by_group(y$results_bybg_people) # or distance_mean_by_group() synonym    # table - proximity of sites for just one demog group vs rest of population  print(distance_by_group(y$results_bybg_people,    demogvarname = 'pctlowinc'))      # plot cumulative share of group by distance vs overall population   distance_by_group_plot(y$results_bybg_people,      demogvarname = 'pctlowinc' )        # plot cum. shares for two groups    # about 14% of black and 12% of asian residents have a site within 1 mile.   # 29% vs 21% have a site within 1.5 miles.  round(xyz[findInterval(c(1, 1.5),  xyz$dist), ], 3)     # plot is too busy for all groups at once so this is a way to tap through them 1 by 1  these = c(names_d, names_d_subgroups)  for (i in 1:length(these)) {    readline(\"press any key to see the next plot\")    print(distance_by_group_plot(y$results_bybg_people, demogvarname = these[i]) )  }"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"Like distance_by_group() multiple sites - DRAFT FUNCTION","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"","code":"distance_by_group_by_site(bybg)"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"bybg ejamit()$results_bybg_people","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"table ratios, one col per site, one row per indicator","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"two aspects proximity consider analyzing residential population groups within certain fixed distance (radius) single facility point (whole set facilities). two ways summarizing proximity complementary: groups tend live nearby sense within selected radius versus outside radius? words, groups \"-represented\" within X miles site? treats proximity yes/, binomial question – resident nearby . focus whether someone anywhere within 3 miles, say, ignore differences 1, 2, 3 miles away. Among residents within X miles site, groups live especially close facility? question recognizes proximity continuous variable, focuses difference 1 mile, 1.5 miles, etc. However, looks residents within X miles radius area analyzed, fails recognize groups tend live 3 miles away, example. perspective take account groups -represented within original total radius near site. function second two types analysis. reports, among anywhere inside radius, groups closer site. specific location, example, one group underrepresented within 3 miles, group still might live right next facility case average distance higher group function counts within radius analyzed. location, opposite occur – one group -represented within 3 miles, still might live community 2.9 miles away site – mean distance site average greater (proximity score lower) groups within 3 miles site.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_by_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratios at each site, of avg dist of group / avg dist of everyone else near site — distance_by_group_by_site","text":"","code":"# distance_by_group_by_site(   #   testoutput_ejamit_10pts_1miles$results_bybg_people   # )"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Each groups distribution of distances — distance_by_group_plot","title":"Each groups distribution of distances — distance_by_group_plot","text":"SLOW / needs optimized. CDF Line Plots cumulative share residential population group, within distance plots cumulative share residents found within distance, single population group. function, distance_cdf_by_group_plot(), based ejamit()$results_bybg_people, provides block group resolution information distance. block resolution analysis distance group, see plot_distance_by_pctd().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Each groups distribution of distances — distance_by_group_plot","text":"","code":"distance_by_group_plot(   results_bybg_people = NULL,   radius_miles = NULL,   subgroups_type = NULL,   demogvarname = NULL,   demoglabel = NULL,   colorlist = colorspace::diverging_hcl(length(demogvarname)),   coloroverall = \"black\",   returnwhat = \"table\",   ... )  distance_cdf_by_group_plot(   results_bybg_people,   radius_miles = NULL,   demogvarname = \"Demog.Index\",   demoglabel = demogvarname,   color1 = \"red\",   color2 = \"black\" )  plot_distance_cdf_by_group(   results_bybg_people = NULL,   radius_miles = NULL,   subgroups_type = NULL,   demogvarname = NULL,   demoglabel = NULL,   colorlist = colorspace::diverging_hcl(length(demogvarname)),   coloroverall = \"black\",   returnwhat = \"table\",   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Each groups distribution of distances — distance_by_group_plot","text":"results_bybg_people data.table doaggregate()$results_bybg_people radius_miles miles radius max distance analyzed subgroups_type optional, can set \"nh\" \"alone\". Specifies types race ethnicity subgroups use demogvarname demogvarname specified parameter. demogvarname name column results_bybg_people, e.g., \"pctlowinc\" demoglabel friendly text name labeling graphic, like \"Low income residents\" colorlist colors like \"red\" etc. residential population groups interest coloroverall color like \"gray\" everyone whole returnwhat returnwhat \"table\", invisibly returns full table sorted distances blockgroups, cumulative count demog groups block group's distance. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format() ... parameters passed points() color1 color like \"red\" residential population group interest color2 color like \"gray\" everyone else","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Each groups distribution of distances — distance_by_group_plot","text":"see returnwhat parameter invisibly returns full table sorted distances blockgroups, cumulative count demog group block group's distance, cumulative count everyone else block group see distance_by_group_plot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Each groups distribution of distances — distance_by_group_plot","text":"function distance_cdf_by_group_plot SLOW - ***needs optimized","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/distance_by_group_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Each groups distribution of distances — distance_by_group_plot","text":"","code":"y <- ejamit(testpoints_100, radius = 3)    # see barplot and table comparing groups to see which are closer to sites analyzed  plot_distance_mean_by_group(y$results_bybg_people) # or distance_mean_by_group() synonym    # table - proximity of sites for just one demog group vs rest of population  print(distance_by_group(y$results_bybg_people,    demogvarname = 'pctlowinc'))      # plot cumulative share of group by distance vs overall population   distance_by_group_plot(y$results_bybg_people,      demogvarname = 'pctlowinc' )        # plot cum. shares for two groups    # about 14% of black and 12% of asian residents have a site within 1 mile.   # 29% vs 21% have a site within 1.5 miles.  round(xyz[findInterval(c(1, 1.5),  xyz$dist), ], 3)     # plot is too busy for all groups at once so this is a way to tap through them 1 by 1  these = c(names_d, names_d_subgroups)  for (i in 1:length(these)) {    readline(\"press any key to see the next plot\")    print(distance_by_group_plot(y$results_bybg_people, demogvarname = these[i]) )  }"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_near_eachother.html","id":null,"dir":"Reference","previous_headings":"","what":"which points are near any of the others in a list? — distance_near_eachother","title":"which points are near any of the others in a list? — distance_near_eachother","text":"points near others list?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_near_eachother.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"which points are near any of the others in a list? — distance_near_eachother","text":"","code":"distance_near_eachother(lon, lat, distance, or_tied = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_near_eachother.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"which points are near any of the others in a list? — distance_near_eachother","text":"lon longitude lat latitude distance distance points miles check or_tied TRUE, checks less equal distance, otherwise less ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_near_eachother.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"which points are near any of the others in a list? — distance_near_eachother","text":"logical vector length lon lat, telling point within distance point list example, sites residents might also near others sites?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_near_eachother.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"which points are near any of the others in a list? — distance_near_eachother","text":"","code":"mapfast(testpoints_500[distance_near_eachother(   lon = testpoints_500$lon,    lat = testpoints_500$lat,    3.1), ], radius = 3.1)"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":null,"dir":"Reference","previous_headings":"","what":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"indicators fall proximity ? (.e., higher closer site) variables strongest trend distance based slope linear fit","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"","code":"distance_trends(   results_bydistance,   myvars = names_d_subgroups_ratio_to_state_avg,   radii,   n = 1 )"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"results_bydistance data.frame indicators, columns, taken output ejamit_compare_distances() myvars optional, vector colnames results_bydistance radii optional vector - taken results_bydistance$radius.miles n optional number indicators list. n=3 mean show top 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"vector text names indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"Used ejamit_compare_distances2plot() used ejamit_compare_distances()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/distance_trends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Which indicators fall most as proximity does? (i.e., are higher if closer to site) Which variables have strongest trend with distance based on slope of linear fit — distance_trends","text":"","code":"distance_trends(ejamit_compare_distances(testpoints_10, radii = c(1,3)))"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_via_surfacedistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert surface distance to actual distance — distance_via_surfacedistance","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"","code":"\\preformatted{     Just a simple formula:    earthRadius_miles <- 3959    angle_rad <- x/earthRadius_miles    # Calculate  radius * cord length    return( earthRadius_miles * 2*sin(angle_rad/2) )    }"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_via_surfacedistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"","code":"distance_via_surfacedistance(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/distance_via_surfacedistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert surface distance to actual distance — distance_via_surfacedistance","text":"x surface distance miles","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize environmental and residential population indicators at each location and overall — doaggregate","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"Used ejamit() shiny app summarize blockgroups scores site overall.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"","code":"doaggregate(   sites2blocks,   sites2states_or_latlon = NA,   radius = NULL,   countcols = NULL,   wtdmeancols = NULL,   calculatedcols = NULL,   calctype_maxbg = NULL,   calctype_minbg = NULL,   subgroups_type = \"nh\",   include_ejindexes = FALSE,   calculate_ratios = TRUE,   extra_demog = TRUE,   need_proximityscore = FALSE,   infer_sitepoints = FALSE,   called_by_ejamit = FALSE,   updateProgress = NULL,   silentinteractive = TRUE,   testing = FALSE,   showdrinkingwater = TRUE,   showpctowned = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"sites2blocks data.table distances miles sites (facilities) nearby Census block internal points, columns ejam_uniq_id, blockid, distance, created getblocksnearby  function. See testoutput_getblocksnearby_10pts_1miles dataset package, input function sites2states_or_latlon data.table just data.frame, columns ejam_uniq_id (unique one sites2blocks) ST (2-character State abbreviation) lat lon radius Optional radius miles limit analysis . default function uses distances provided output getblocksnearby(), reports radius estimated rounded max distance values inputs doaggregate. may cases want run getblocksnearby() 10 miles, say, long list sites (1,000 , say), get summary results 1, 3, 5, 10 miles without redo getblocksnearby() part radius. lets just run getblocksnearby() largest radius, query results get doaggregate() summarize distance less equal original radius analyzed getblocksnearby(). countcols character vector names variables  aggregate within buffer using sum counts, like, example, number people poverty ratio known, count exact denominator needed correctly calculate percent low income. wtdmeancols character vector names variables aggregate within buffer using population weighted mean type weighted mean. calculatedcols character vector names variables aggregate within buffer using formulas specified. calctype_maxbg character vector names variables aggregate within buffer using max() blockgroup-level values. calctype_minbg character vector names variables aggregate within buffer using min() blockgroup-level values. subgroups_type Optional (uses default). Set \"nh\" non-hispanic race subgroups Non-Hispanic White Alone, nhwa others names_d_subgroups_nh; \"alone\" EJScreen v2.2 style race subgroups    White Alone, wa others names_d_subgroups_alone; \"\" versions. Possibly another option \"original\" \"default\" work progress. include_ejindexes whether calculate Summary Indexes return information calculate_ratios whether calculate return ratio indicator US State overall mean extra_demog include extra indicators EJScreen report, language, age groups, sex, percent disability, poverty, etc. need_proximityscore whether calculate proximity scores (may implemented yet) infer_sitepoints set TRUE try infer lat,lon site around blocks sites2blocks found. lat,lon site approximated average nearby blocks, although accurate slower way use reported distance 3 furthest block points triangulate called_by_ejamit Set TRUE ejamit() suppress outputs even ejamit(silentinteractive=F) updateProgress progress bar function used shiny app silentinteractive Set TRUE see results RStudio console. Set FALSE prevent long output showing console RStudio interactive mode testing used testing function showdrinkingwater T/F whether include drinking water indicator values display NA. Defaults TRUE. showpctowned T/f whether include percent owner-occupied units indicator values display NA. Defaults TRUE. ... pass another function (may implemented yet)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"list named elements: results_overall   one row data.table, like results_bysite, just one row aggregated results unique residents. results_bysite   results individual sites (buffers) - data.table results, one row per ejam_uniq_id, one column per indicator results_bybg_people  results block group, allow showing distribution indicator across everyone within residential population group. longnames  descriptive long names indicators outputs count_of_blocks_near_multiple_sites  additional detail Also see outputs ejamit() similar provide additional info.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"getblocksnearby() doaggregate() two key functions run ejamit(). doaggregate() takes set sites like facilities set blocks near , combines indicator scores block groups, aggregates numbers within place across overall. examples, see getblocksnearbyviaQuadTree() doaggregate() code run getblocksnearby() (related function polygons FIPS Census units) identified blocks nearby. doaggregate() aggregates blockgroup scores create summary indicator, raw score US percentile State percentile, buffer (.e., near facility): SUMS COUNTS: population count, number households Hispanics, etc. POPULATION-WEIGHTED MEANS:  Environmental indicators, also percentage indicator universe (denominator) population count (rather households, persons age 25up, etc.) Summary Indexes: pop wtd mean Summary Index raw scores. CALCULATED FORMULA: Buffer overall score calculated weighted mean percentages, weights correct denominator like count poverty ratio known. LOOKED : Aggregated scores converted percentile terms via lookup tables (US State version). function requires following datasets: blockwts: data.table columns: blockid , bgid, blockwt quaddata data.table used create localtree, quad tree index block points (localtree created package loaded) blockgroupstats - data.table (EJScreen residential population environmental data blockgroup)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"identification-of-nearby-residents-methodology-","dir":"Reference","previous_headings":"","what":"Identification of nearby residents – methodology:","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"EJAM uses approach EJScreen identify count residential population nearby residents, EJScreen technical documentation consulted approach, EJScreen Technical Info. EJAM implements approach using faster code data formats, still uses high-resolution approach described EJScreen documentation summarized . identification nearby residents currently done way includes 2020 Census blocks whose \"internal point\" (lat/lon provided Census Bureau) within specified distance facility point. taken EJScreen block weights file, can also independently calculated. summary aggregation \"rollup\" within buffer done calculating population-weighted average block group score among people residing buffer. weighting population count variables fractions population, denominators weights (e.g., households count) used appropriate, explained EJScreen technical documentation formulas, replicated formulas used EJAM functions doaggregate(). Since blockgroup population counts American Community Survey (ACS) estimates, block population counts decennial census, totals blockgroup differ. amount partial blockgroup contributes buffer's overall score based estimated number residents blockgroup buffer. based fraction blockgroup population estimated buffer, fraction calculated fraction blockgroup's decennial census block population census blocks inside buffer. given block considered entirely inside entirely outside buffer, used accurately estimate fraction given block group's population inside buffer. accurate faster areal apportionment block groups. Census blocks generally small relative typical buffers accurate - least accurate small buffer distance specified extremely low density rural area block can geographically large. Although rarely ever significant issue (reasonable, useful buffer sizes), even accurate approach cases might either areal apportionment blocks, slow assumes residents evenly spread across full block's area, else approach uses higher resolution estimates residential locations even Decennial census blocks can provide, dasymetric map approach.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize environmental and residential population indicators at each location and overall — doaggregate","text":"","code":"structure.of.output.list(testoutput_doaggregate_10pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate_newscores.html","id":null,"dir":"Reference","previous_headings":"","what":"For user-provided indicators and formulas, aggregate at each site and overall — doaggregate_newscores","title":"For user-provided indicators and formulas, aggregate at each site and overall — doaggregate_newscores","text":"Like doaggregate() user-provided indicator available block groups (nationwide US percentiles make sense, least statewide)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate_newscores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For user-provided indicators and formulas, aggregate at each site and overall — doaggregate_newscores","text":"","code":"doaggregate_newscores(   sites2blocks,   userstats,   formulas = NULL,   sites2states_or_latlon = NA,   radius = NULL,   countcols = \"pop\",   popmeancols = NULL,   calculatedcols = NULL,   varsneedpctiles = NULL,   usastats_newscores = NULL,   statestats_newscores = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate_newscores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For user-provided indicators and formulas, aggregate at each site and overall — doaggregate_newscores","text":"sites2blocks output getblocksnearby(), doaggregate() userstats like blockgroupstats data.frame data.table US blockgroups one columns user provided raw indicator scores variables needed formulas aggregate indicators across block groups site. formulas character vector formulas R code (see formulas_d example), use variables userstats calculate derived indicators aggregated ones, cases just sum population weighted mean right way aggregate indicator. Formulas can include intermediate steps, can aggregate across places. example one formula might \"pctover64 = ifelse(pop == 0, 0, over64 / pop)\" sites2states_or_latlon see doaggregate() radius see doaggregate() countcols see doaggregate() popmeancols see doaggregate() calculatedcols see doaggregate() varsneedpctiles see doaggregate() usastats_newscores calculated provided statestats_newscores calculated provided ... used","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/doaggregate_newscores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For user-provided indicators and formulas, aggregate at each site and overall — doaggregate_newscores","text":"see doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/download_latest_arrow_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download latest versions of arrow datasets if user doesn't have them already — download_latest_arrow_data","title":"Download latest versions of arrow datasets if user doesn't have them already — download_latest_arrow_data","text":"Used EJAM package attached","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/download_latest_arrow_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download latest versions of arrow datasets if user doesn't have them already — download_latest_arrow_data","text":"","code":"download_latest_arrow_data(   varnames = .arrow_ds_names,   repository = NULL,   envir = globalenv() )"},{"path":"https://usepa.github.io/EJAM-open/reference/download_latest_arrow_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download latest versions of arrow datasets if user doesn't have them already — download_latest_arrow_data","text":"varnames use defaults, vector names like \"bgej\" use \"\" get available repository repository name https://usepa.github.io/EJAM-open \"XYZ/ejamdata\" (wherever ejamdata repo hosted, specified DESCRIPTION file package) envir needed specify environment default, e.g., globalenv() parent.frame()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/download_latest_arrow_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download latest versions of arrow datasets if user doesn't have them already — download_latest_arrow_data","text":"Checks see latest version datasets available according repository's latest release tag. Compares version last saved locally (stored installed package's ejamdata_version.txt file). Relies piggyback::pb_releases() download data files specific release (version) package.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupenames.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check conflicting exported function or data names — dupenames","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"See -named objects (functions data) exported (installed) packages","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"","code":"dupenames(   pkg = EJAM::ejampackages,   sortbypkg = FALSE,   compare.functions = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/dupenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"pkg one package names vector strings. \"\" checks installed pkgs, takes long potentially. sortbypkg TRUE, just returns thing sorted package name compare.functions TRUE, sends console inf whether body formals functions identical functions name different packages. checks first 2 copies, additional ones (3+ pkgs use name)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"data.frame columns Package, Object name (NA dupes)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupenames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - check conflicting exported function or data names — dupenames","text":"utility find -named exported objects (functions datasets) within source code 2+ packages, see search path, dev renaming / moving functions/ packages See dupeRfiles() files supporting shiny app package, e.g. See dupenames() objects R packages. See functions_in_pkg() See datapack()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupeRfiles.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - check conflicting sourcefile names in 2 packages/folders — dupeRfiles","title":"UTILITY - check conflicting sourcefile names in 2 packages/folders — dupeRfiles","text":"See -named .R files 2 sourcecode folders","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupeRfiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - check conflicting sourcefile names in 2 packages/folders — dupeRfiles","text":"","code":"dupeRfiles(folder1 = \"../EJAM/R\", folder2 = \"./R\")"},{"path":"https://usepa.github.io/EJAM-open/reference/dupeRfiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UTILITY - check conflicting sourcefile names in 2 packages/folders — dupeRfiles","text":"folder1 path folder R source files folder2 path folder R source files, defaults \"./R\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/dupeRfiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UTILITY - check conflicting sourcefile names in 2 packages/folders — dupeRfiles","text":"See dupeRfiles() files supporting shiny app package See dupenames() objects R packages. See datapack() objects R packages. See functions_in_pkg() functions R package. See functions_that_use() - searches text function exported pkg (.R source file pkg/R)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/echo_colids_from_num_name_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","title":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","text":"Interpret check list requested columns asked ECHO API get_facility_info","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/echo_colids_from_num_name_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","text":"","code":"echo_colids_from_num_name_group(x = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/echo_colids_from_num_name_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","text":"x vector specifiers variables needed get ECHO facility query API, can variable column id API needs (1 316), actual ObjectName (variable name) found varsinfo_ECHO_API, word specifying group variables like critical best others logical class columns varsinfo_ECHO_API word (available, 316).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/echo_colids_from_num_name_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","text":"sort order length input necessarily! valid list numbers ColumnID numbers","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/echo_colids_from_num_name_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpret and check the list of requested columns to be asked of the ECHO API get_facility_info — echo_colids_from_num_name_group","text":"","code":"x <- echo_colids_from_num_name_group(c('critical', 'NC', 'CensusBlockGroup' ))   x   varsinfo_ECHO_API$ObjectName[match( x, varsinfo_ECHO_API$ColumnID)]   echo_colids_from_num_name_group(300:400)   echo_colids_from_num_name_group(5:1)   echo_colids_from_num_name_group(c(5:1,1:3))"},{"path":"https://usepa.github.io/EJAM-open/reference/EJAM.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM - Environment and Residential Population Analysis Multisite tool — EJAM","title":"EJAM - Environment and Residential Population Analysis Multisite tool — EJAM","text":"EJAM provides way run hundreds thousands location-specific reports , quickly. also R package, functions data fast analysis areas defined proximity points like regulated facilities, areas defined shapefiles/polygons, areas specified Census units (e.g., Counties).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/EJAM.html","id":"what-is-ejam-and-how-to-do-analysis-with-the-ejam-r-package","dir":"Reference","previous_headings":"","what":"What is EJAM and How to do Analysis with the EJAM R Package","title":"EJAM - Environment and Residential Population Analysis Multisite tool — EJAM","text":"EJAM package documentation provides overview EJAM, complete reference document functions, articles (vignettes) introducing key functions use .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/EJAM.html","id":"data-sources-residential-population-and-environmental-indicators","dir":"Reference","previous_headings":"","what":"Data Sources – Residential Population and Environmental Indicators","title":"EJAM - Environment and Residential Population Analysis Multisite tool — EJAM","text":"Documentation provides information sources, definitions, vintage residential population environmental data indicators used EJAM. year, EJAM updated use newer residential population environmental data, indicators may added, dropped, revised updates. details updates changes datasets indicators, please note information updates changes: Data Change Log. Residential population data American Community Survey 5-year summary file data updated United States Census Bureau annually used EJAM.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2areafeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","title":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","text":"simple way see table summary stats special areas features like schools","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2areafeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","text":"","code":"ejam2areafeatures(ejamitout)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2areafeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","text":"ejamitout output ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2areafeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","text":"data frame summary flagged areas","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2areafeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"simple way to see the table of summary stats on special areas and features like schools — ejam2areafeatures","text":"table, summary stats mean following: \"flag\" \"yesno\" indicators population weighted sums, show many people analysis live blockgroups overlap given special type area, non-attainment areas Clean Air Act. \"number\" indicators counts site ejamit()$results_overall table, summarized percent residents overall analysis LEAST ONE type site blockgroup live . \"pctno\" % indicators summarized % residents analyzed lack critical service.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"Barplot ratios residential population () scores averages - simpler syntax Helper - Barplot ratios indicators (site sites overall) US State average helper - Barplot ratios residential population percentages (scores) averages (references)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"","code":"ejam2barplot(   ejamitout,   varnames = c(names_d_ratio_to_avg, names_d_subgroups_ratio_to_avg),   sitenumber = NULL,   main = \"Residential Populations at the Analyzed Locations Compared to US Overall\",   ... )  plot_barplot_ratios_ez(   out,   varnames = c(names_d_ratio_to_avg, names_d_subgroups_ratio_to_avg),   main = \"Residential Populations at the Analyzed Locations Compared to US Overall\",   single_location = FALSE,   row_index = NULL,   ... )  plot_barplot_ratios(   ratio.to.us.d.overall,   shortlabels = NULL,   mycolorsavailable = c(\"gray\", \"yellow\", \"orange\", \"red\"),   main = \"Residential Populations at the Analyzed Locations Compared to US Overall\",   ylab = \"Ratio vs. Average\",   caption = \"NH = \\\"non-Hispanic\\\"\\nNHA = \\\"non-Hispanic alone, aka single race\\\"\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"ejamitout like ejamit() varnames vector indicator names ratios avg, like c(names_d_ratio_to_avg , names_d_subgroups_ratio_to_avg) c(names_d_ratio_to_state_avg , names_d_subgroups_ratio_to_state_avg) sitenumber default sites ejamitout$results_overall, integer, row number show ejamitout$results_bysite. Important: note row number necessarily ejamitout$results_bysite$ejam_uniq_id main optional, title plot, like \"Stats Analyzed Locations Compared US Overall\" ... passed plot_barplot_ratios() list tables output ejamit() related function single_location set TRUE using row_index view one site, set FALSE view overall results $results_overall row_index number row use $results_bysite ratio..us.d.overall named list ratios plot, see ejam2barplot() easier way specify indicator show. shortlabels optional, names use plot - length named list ratio..us.d.overall mycolorsavailable optional (best leave default) ylab optional, label y axis caption text key defining terms abbreviations","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"ggplot ggplot returned","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"Used similar ejam2barplot(), easier way ! function requires specify single_location = TRUE using row_index param. ejam2barplot() function just uses sitenumber parameter. function flexible plot_barplot_ratios(), relies , since lets specify whether use overall results ejamit()$results_overall just one site ejamit()$results_bysite parameter called main word \"State\" , legend refer \"State Average\" instead \"US Average\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of ratios of residential population (or other) scores to averages - simpler syntax — ejam2barplot","text":"","code":"# Check a long list of indicators for any that are elevated  out <- testoutput_ejamit_100pts_1miles  ejam2barplot(out,   varnames = names_these_ratio_to_avg,   main = \"Envt & Demog Indicators at Selected Sites Compared to State Averages\")    ejam2barplot(out,   varnames = names_these_ratio_to_state_avg,   main = \"Envt & Demog Indicators at Selected Sites Compared to State Averages\")  # Residential population percentages only  # vs nationwide avg ejam2barplot(out)  # vs statewide avg ejam2barplot(out,    varnames = c(names_d_ratio_to_state_avg, names_d_subgroups_ratio_to_state_avg),   main = \"Residential Populations at Selected Sites Compared to State Averages\")  # Environmental only  ejam2barplot(out,   varnames = c(names_e_ratio_to_avg, names_e_ratio_to_state_avg),   main = \"Environmental Indicators at Selected Sites Compared to Averages\")     ## select your own ratio-type indicators that are available  ## -- and you could see the range of available ratio indicators like this:  if (FALSE) { # \\dontrun{  varinfo(    grep(\"ratio\",         names(testoutput_ejamit_10pts_1miles$results_overall),         value = TRUE),    info = c(\"varlist\", \"shortname\")  )    } # }    # helper functions related to ejam2barplot()     plot_barplot_ratios_ez(     out,      varnames = c(names_d_ratio_to_avg , names_d_subgroups_ratio_to_avg)   )      # same plot but with function that would need more work to format inputs:   plot_barplot_ratios(       unlist(out$results_overall[ ,       c(..names_d_ratio_to_avg , ..names_d_subgroups_ratio_to_avg) ])       )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"Summary whether residents analyzed locations likely certain types features (schools) special areas (Tribal, nonattainment, etc.)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"","code":"ejam2barplot_areafeatures(   ejamitout,   main =     \"% of analyzed population that lives in blockgroups with given features or that overlap given area type\",   ylab = \"Ratio of Indicator in Analyzed Locations / in US Overall\",   shortlabels = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"ejamitout output ejamit() main optional title plot ylab optional y axis label shortlabels optional alternative labels bars caption left blank avoid default caption used plot_barplot_ratios()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"ggplot2 plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"See varinfo(c(names_featuresinarea, names_flag, names_criticalservice))[,c(\"longname\", \"varlist\")] indicator summary stats shown: 1, \"Number Schools\" 2, \"Number Hospitals\" 3, \"Number Worship Places\" 4, \"Flag Overlapping Tribes\" 5, \"Flag Overlapping Non-Attainment Areas\" 6, \"Flag Overlapping Impaired Waters\" 7, \"Flag Overlapping CJEST Disadvantaged Communities\" 8, \"Flag Overlapping EPA IRA Disadvantaged Communities\" 9, \"Flag Overlapping Housing Burden Communities\" 10, \"Flag Overlapping Transportation Disadvantaged Communities\" 11, \"Flag Overlapping Food Desert Areas\" 12, \"% Households without Broadband Internet\" 13, \"% Households without Health Insurance\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_areafeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"barplot of summary stats on special areas and features at the sites — ejam2barplot_areafeatures","text":"","code":"out <- testoutput_ejamit_1000pts_1miles ejam2barplot_areafeatures(out)  shortlabels = EJAM:::flagged_areas_shortlabels_from_ejam(out) ejam2barplot_areafeatures(out, shortlabels = shortlabels)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","title":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","text":"Barplot comparing ejamit_compare_distances() results one radius","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","text":"","code":"ejam2barplot_distances(   results_bydistance,   myvars = names_d_subgroups_ratio_to_state_avg,   ylab = \"Ratio of Avg. within X miles to Avg. Statewide or Nationwide\",   ylim = c(0, 5),   n = 1,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","text":"results_bydistance output ejamit_compare_distances(), table similar ejamit()$results_overall except one row per distance. myvars optional, see ejamit_compare_distances() ylab optional, see ejamit_compare_distances() ylim optional, see ejamit_compare_distances() n optional, see ejamit_compare_distances() ... optional, parameters passed plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","text":"text vector length n, naming indicators strongly increase get closer site(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot comparing ejamit_compare_distances() results for more than one radius — ejam2barplot_distances","text":"","code":"out = ejamit_compare_distances(testpoints_10, radii = 1:2, plot = F) ejam2barplot_distances(out)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","title":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","text":"Create facetted barplots groups indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","text":"","code":"ejam2barplot_indicators(   ejamitout,   indicator_type = \"Demographic\",   data_type = \"raw\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","text":"ejamitout output running EJAM analysis, ejamit EJAM shiny app indicator_type group indicators display, 'Environmental', etc. data_type form display data : 'raw' 'ratio'","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","text":"ggplot object facets indicator 3 bars","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create facetted barplots of groups of indicators — ejam2barplot_indicators","text":"","code":"ejam2barplot_indicators(testoutput_ejamit_1000pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"Barplot comparing groups sites 1 indicator, output ejamit_compare_types_of_places() easy high-level function getting quick look top groups sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"","code":"ejam2barplot_sitegroups(   ejamitout,   varname = \"pctlowinc\",   names.arg = NULL,   main = \"Sites by Type\",   xlab = \"Groups or Types of Sites\",   ylab = NULL,   sortby = NULL,   topn = 10,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"ejamitout list output ejamit_compare_types_of_places(), one element table named results_bytype varname name column results_bytype, bar height names.arg optional vector labels bars, like types sites represented group main optional, barplot xlab optional, barplot ylab optional, barplot, plain English version varname, indicator bar height sortby set FALSE want sorting, increasing vector provides sort order topn optional, show top n groups (site types) – show default – shows top n groups. ... passed barplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"barplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"see ejamit_compare_types_of_places() examples","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sitegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot comparing groups of sites on 1 indicator, for output of ejamit_compare_types_of_places() easy high-level function for getting a quick look at top few groups of sites — ejam2barplot_sitegroups","text":"","code":"out <- ejamit_compare_types_of_places(testpoints_10[1:4, ],     typeofsite <- c(\"A\", \"B\", \"B\", \"C\"))    cbind(Rows_or_length = sapply(out, NROW))     ejam2barplot_sitegroups(out, \"sitecount_unique\", topn=3, sortby = F)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","title":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","text":"Barplot comparing sites 1 indicator, based full output ejamit() easy high-level function getting quick look top sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","text":"","code":"ejam2barplot_sites(   ejamitout,   varname = \"pctlowinc\",   names.arg = NULL,   main = \"Comparison of Sites\",   xlab = \"Sites\",   ylab = NULL,   sortby = NULL,   topn = 5,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","text":"ejamitout list like output ejamit(), one element table sites, one row per site, column names least varname (\"ejam_uniq_id\" names.arg specified) varname name column results_bysite, bar height names.arg optional vector labels bars, like short site names IDs main optional, barplot xlab optional, barplot ylab optional, barplot, plain English version varname, indicator bar height sortby set FALSE want sorting, increasing vector provides sort order topn optional, show top n sites – show sites default – shows top n sites. ... passed barplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","text":"barplot()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2barplot_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot comparing sites on 1 indicator, based on full output of ejamit() easy high-level function for getting a quick look at top few sites — ejam2barplot_sites","text":"","code":"# Quickly compare top few sites by population count nearby out <- copy(testoutput_ejamit_10pts_1miles) ejam2barplot_sites(out, \"pop\")  # Show all 10, ejam2barplot_sites(out, \"traffic.score\", topn = 10, cex.names = 0.8)  # Sort by site id ejam2barplot_sites(out, \"blockcount_near_site\", topn = 10,   sortby = -1 * out$results_bysite$ejam_uniq_id)  # Plot a calculated variable sites <- copy(out$results_bysite) sites$log_traffic = log10(sites$traffic.score) plot_barplot_sites(sites, \"log_traffic\", ylab = \"Traffic Score (log10 scale)\", topn = 10)  # On a large monitor, 100 sites with legible labels if the window is wide enough ejam2barplot_sites(testoutput_ejamit_100pts_1miles, topn = 100, cex.names = 0.4)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"Make boxplot ratios US averages","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"","code":"ejam2boxplot_ratios(   ejamitout,   radius,   varnames = c(names_d, names_d_subgroups),   main = NULL,   maxratio = 5 )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"ejamitout output EJAM analysis, like ejamit() radius buffer radius used analysis varnames currently works names_d names_d_subgroups main can specify main title use instead default maxratio largest ratio plot case outliers, plot looks better","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"ggplot object","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"IMPORTANT: NOTE uses ratio site USING AVERAGE RESIDENT SITE, BOXPLOT SHOWS ONE DOT PER SITE BOXPLOT POP WTD MEANING SHOWS MEDIAN 75TH PERCENTILE SITE RESIDENT, ETC.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2boxplot_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make boxplot of ratios to US averages — ejam2boxplot_ratios","text":"","code":"ejam2boxplot_ratios(testoutput_ejamit_1000pts_1miles, radius=1)  out <- testoutput_ejamit_100pts_1miles ejam2boxplot_ratios(out, radius=1) ejam2boxplot_ratios(out) ## not ## ejam2boxplot_ratios(out$results_bysite)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Save EJAM results in a spreadsheet — ejam2excel","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"ejam2excel() takes output something like ejamit() creates spreadsheet overall summary tab, site site table tab, well tabs map, plot, notes, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"","code":"ejam2excel(   ejamitout,   fname = NULL,   save_now = TRUE,   overwrite = TRUE,   launchexcel = FALSE,   interactive_console = TRUE,   ok2plot = TRUE,   in.testing = FALSE,   in.analysis_title = \"EJAM analysis\",   react.v1_summary_plot = NULL,   radius_or_buffer_in_miles = NULL,   buffer_desc = NULL,   radius_or_buffer_description =     \"Miles radius of circular buffer (or distance used if buffering around polygons)\",   hyperlink_colnames = \"ECHO Report\",   site_method = \"\",   mapadd = FALSE,   report_map = NULL,   community_reportadd = TRUE,   community_html = NULL,   shp = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"ejamitout output ejamit() fname optional name full path name file save locally, like \".xlsx\" save_now optional logical, whether save .xlsx file locally just return workbook object can later written .xlsx file using openxlsx::saveWorkbook() overwrite optional logical, passed openxlsx::saveWorkbook() launchexcel optional logical, passed table_xls_format(), whether launch browser see spreadsheet immediately interactive_console optional - set FALSE used code server. TRUE, prompts RStudio user interactively asking save downloaded file ok2plot optional logical, passed  table_xls_format(), whether safe try plot set FALSE debugging plot problems .testing optional logical .analysis_title optional title character string react.v1_summary_plot optional - plot object radius_or_buffer_in_miles optional radius miles buffer_desc description location use labels, like \"Selected Locations\" radius_or_buffer_description optional text phrase describing places analyzed hyperlink_colnames optional names columns URLs site_method site selection method, SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT optional site method parameter used create specific title create_filename. Note ejamitout$sitetype quite site_method parameter used building reports. sitetype can latlon, fips, shp site_method can one : SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT mapadd Logical, whether add tab map sites. report tab added, though, standalone static map excel tab redundant. report_map map use mapadd = TRUE (re-created omitted/NULL mapadd TRUE) community_reportadd Logical, whether add tab static copy summary report (tables, map, barplot). community_html HTML summary/community report available (re-created omitted/NULL community_reportadd TRUE) shp shapefile create map providing via report_map community_html parameters ... optional additional parameters passed table_xls_format(), heatmap_colnames, heatmap_cuts, heatmap_colors, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"returns workbook object use openxlsx::saveWorkbook(wb_out, pathname) returns just full path/file name saved save_now = TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save EJAM results in a spreadsheet — ejam2excel","text":"","code":"# \\donttest{ # Add purple to flag indicators at 99th percentile ejam2excel(testoutput_ejamit_10pts_1miles,   # View spreadsheet 1st without saving it as a file   launchexcel = T, save_now = F,   heatmap_cuts = c(80, 90, 95, 99),   heatmap_colors  = c(\"yellow\", \"orange\", \"red\", \"purple\"),   # Apply heatmap to only a few of the ratio columns   heatmap2_colnames = names_d_ratio_to_state_avg) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram of single indicator from EJAM output — ejam2histogram","title":"Histogram of single indicator from EJAM output — ejam2histogram","text":"Histogram single indicator EJAM output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram of single indicator from EJAM output — ejam2histogram","text":"","code":"ejam2histogram(   ejamitout,   varname,   distn_type = \"Sites\",   data_type = \"raw\",   n_bins = 30,   sitetype = ejamitout$sitetype )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram of single indicator from EJAM output — ejam2histogram","text":"ejamitout output EJAM analysis, like ejamit() varname indicator name, 'Demog.Ind' 'pctlowinc' distn_type group show distribution across, either 'Sites' 'People' data_type type values show indicator, either 'raw' 'pctile' n_bins number bins sitetype type sites analyzed, like ejamit() 'sitetype'. Examples 'latlon', 'FIPS', 'SHP'","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram of single indicator from EJAM output — ejam2histogram","text":"","code":"ejam2histogram(testoutput_ejamit_1000pts_1miles, 'Demog.Index', distn_type='Sites', data_type='raw')"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":null,"dir":"Reference","previous_headings":"","what":"Show EJAM results as a map of points — ejam2map","title":"Show EJAM results as a map of points — ejam2map","text":"Takes output ejamit() uses mapfastej() create map points.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show EJAM results as a map of points — ejam2map","text":"","code":"ejam2map(   ejamitout,   radius = NULL,   column_names = \"ej\",   launch_browser = TRUE,   shp = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show EJAM results as a map of points — ejam2map","text":"ejamitout output ejamit() radius radius miles column_names can \"ej\", passed mapfast() launch_browser logical optional whether open web browser view map shp shapefile can map analysis polygons, example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show EJAM results as a map of points — ejam2map","text":"like mapfastej() returns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show EJAM results as a map of points — ejam2map","text":"Gets radius checking ejamitout$results_overall$radius.miles can use browse=TRUE save shareable .html file see web browser.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show EJAM results as a map of points — ejam2map","text":"","code":"pts = testpoints_100 mapfast(pts)  # out = ejamit(pts, radius = 1) out = testoutput_ejamit_100pts_1miles  # See in RStudio viewer pane ejam2map(out, launch_browser = FALSE) mapfastej(out$results_bysite[c(12,31),]) # \\donttest{  # See in local browser instead ejam2map(out)  # Open folder where interactive map #  .html file is saved, so you can share it: x = ejam2map(out) fname = map2browser(x) # browseURL(normalizePath(dirname(fname))) # to open the temp folder # file.copy(fname, \"./map.html\") # to copy map file to working directory  out <- testoutput_ejscreenapi_plus_5 mapfastej(out) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2means.html","id":null,"dir":"Reference","previous_headings":"","what":"ejam2means - quick look at averages, via ejamit() results — ejam2means","title":"ejam2means - quick look at averages, via ejamit() results — ejam2means","text":"ejam2means - quick look averages, via ejamit() results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ejam2means - quick look at averages, via ejamit() results — ejam2means","text":"","code":"ejam2means(ejamitout, vars = names_these)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ejam2means - quick look at averages, via ejamit() results — ejam2means","text":"ejamitout ejamit() vars colnames ejamitout$results_overall","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2means.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ejam2means - quick look at averages, via ejamit() results — ejam2means","text":"means useful format","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2means.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ejam2means - quick look at averages, via ejamit() results — ejam2means","text":"","code":"out <- testoutput_ejamit_100pts_1miles ejam2means(out, vars = names_e_ratio_to_state_avg)  #' # these should tell you the same thing: out$results_summarized$keystats[   rownames(out$results_summarized$keystats) %in% names_e_ratio_to_state_avg,  ] ejam2means(out, vars = names_e_ratio_to_state_avg)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"DRAFT - get quantiles indicator values among people analyzed See ejamit() (batch.summarize()) instead , percentiles!","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"","code":"ejam2quantiles(   ejamitout,   vars = names_e_state_pctile,   w = NULL,   probs = c(50, 90)/100,   topx_insteadof_pctile = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"ejamitout ejamit() vars colnames ejamitout$results_bybg_people w weights probs written always pctile, default report top X%, 100-probs topx_insteadof_pctile logical","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"info quantiles places people","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"DRAFT – YET ACTUALLY PROVIDE QUANTILES ACROSS UNIQUE PEOPLE using results_bysite DIFFERENT WEIGHTS NEEDED DIFFERENT INDICATORS using results_bybg_people avoid overlaps sites get unique people. See ejamit() (batch.summarize()) instead , percentiles!","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT - get quantiles of indicator values among all people analyzed See ejamit() (or batch.summarize()) instead of this, for percentiles! — ejam2quantiles","text":"","code":"# pctiles   ejam2quantiles(out,  vars = names_e_state_pctile, topx_insteadof_pctile = F)  # ratios     ejam2quantiles(out, vars = names_e_ratio_to_state_avg,  topx_insteadof_pctile = T) # see the quantiles and mean together  t(rbind(   AvgPerson = ejam2means(out, vars = names_e_ratio_to_state_avg),   ejam2quantiles(      out,       vars = names_e_ratio_to_state_avg,       probs = 0.5, topx_insteadof_pctile = T   )    ))"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","text":"Quick view summary stats type stat, lacks rounding specific type, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","text":"","code":"ejam2ratios(ejamitout, sitenumber = NULL, decimals = 1)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","text":"ejamitout list ejamit() includes results_overall sitenumber NULL, uses overall results. integer, uses site, based just one row ejamitout$results_bysite decimals optional number decimal places round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","text":"prints console returns simple data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — ejam2ratios","text":"","code":"ejam2barplot(testoutput_doaggregate_100pts_1miles)  ejam2ratios(testoutput_ejamit_100pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":null,"dir":"Reference","previous_headings":"","what":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"Get URL view browser 2-page summary report similar EJScreen Community Report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"","code":"ejam2report(   ejamitout = testoutput_ejamit_10pts_1miles,   sitenumber = NULL,   analysis_title = \"Summary of Analysis\",   submitted_upload_method = c(\"latlon\", \"SHP\", \"FIPS\")[1],   shp = NULL,   return_html = FALSE,   fileextension = c(\"html\", \"pdf\")[1],   filename = NULL,   launch_browser = TRUE,   show_ratios_in_report = TRUE,   extratable_show_ratios_in_report = TRUE,   extratable_title = \"\",   extratable_title_top_row = \"ADDITIONAL INFORMATION\",   extratable_list_of_sections = list(`Breakdown by Population Group` = names_d_subgroups,     `Language Spoken at Home` = names_d_language,     `Language in Limited English Speaking Households` = names_d_languageli,     `Breakdown by Sex` = c(\"pctmale\", \"pctfemale\"), Health = names_health, Age =     c(\"pctunder5\", \"pctunder18\", \"pctover64\"), Community =     names_community[!(names_community %in% c(\"pctmale\", \"pctfemale\",     \"pctownedunits_dupe\"))], Poverty = names_d_extra, `Features and Location Information`     = c(names_e_other, names_sitesinarea, names_featuresinarea,       names_flag),     Climate = names_climate, `Critical Services` = names_criticalservice, Other =     names_d_other_count),   extratable_hide_missing_rows_for = as.vector(unlist(extratable_list_of_sections)),   report_title = NULL,   logo_path = NULL,   logo_html = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"ejamitout output ejamit(), list data.table called results_bysite sitenumber parameter used, data.table called results_overall otherwise sitenumber number provided, report ejamitout$results_bysite[sitenumber, ] number provided (param NULL) report ejamitout$results_overall analysis_title optional title analysis submitted_upload_method something like \"latlon\", \"SHP\", \"FIPS\", etc. (just used -part filename) shp provide sf spatial data.frame polygons analyzed can map since ejamitout return_html set TRUE function return HTML object instead URL local file fileextension html .html pdf .pdf (assuming pdf option implemented). Creating PDF output R Markdown requires LaTeX installed. filename optional path name report file, used web app launch_browser set TRUE launch browser show report. show_ratios_in_report logical, whether add columns ratios US State overall values, main table envt/demog. info. extratable_show_ratios_in_report logical, whether add columns ratios US State overall values, extra table extratable_title Text overall title extra table extratable_title_top_row Text INSIDE top left cell extra table extratable_list_of_sections defines extra indicators shown. named list vectors, name text phrase title section table, vector vector colnames output_df indicators show section, extra table demog. subgroups, etc. extratable_hide_missing_rows_for indicators named vector, leave rows table raw value NA, many names_d_language, extra table demog. subgroups, etc. report_title optional generic name type report, shown top, like \"EJAM Multisite Report\" logo_path optional relative path logo upper right overall header. Ignored logo_html specified NULL, otherwise uses default param set run_app() logo_html optional HTML img logo upper right overall header. specified, overrides logo_path. omitted, gets created based logo_path.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"URL temp file object depending return_html, side effect launching browser view depending return_html","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"relies build_community_report() used web app viewing report 1 site list sites (overall). can customize report somewhat using parameters like extratable_list_of_sections","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View HTML Report on EJAM Results (Overall or at 1 Site) — ejam2report","text":"","code":"#out <- ejamit(testpoints_10, radius = 3, include_ejindexes = T) out <- testoutput_ejamit_10pts_1miles  ejam2report(out) table_gt_from_ejamit_overall(out$results_overall) table_tall_from_overall(out$results_overall)  x <- ejam2report(out, sitenumber = 1) table_gt_from_ejamit_1site(out$results_bysite[1, ]) browseURL(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"export EJAM results geojson/zipped shapefile/kml use ArcPro, EJScreen, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"","code":"ejam2shapefile(   ejamitout,   file = \"EJAM_results_bysite_date_time.geojson\",   folder = tempdir(),   save = TRUE,   crs = 4269,   shortcolnames = TRUE,   varnames = \"basic250\",   shp = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"ejamitout output EJAM ejamit() file optional filename path, extension one \"geojson\"/\"json\", \"shp\", \"zip\", \"kml\" (zip shp mean .zip file zipped set .shp format files) Ignored save=F. folder optional - omitted (running shiny interactive() mode), function prompts specify folder file saved. omitted running shiny interactive() mode, uses tempdir(). Ignored save=F. save whether save file - FALSE, returns object file path crs optional coord ref system shortcolnames Whether cut colnames 10 characters using .shp format varnames optional vector colnames ejamitout$results_bysite include shapefile. DJefault averages, ratios, raw EJ scores. Can \"\" NULL include columns. shp data.frame also \"sf\" class, \"geometry\" column mapping, rows exactly corresponding ejamitout$results_bysite","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"path saved file","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"FIELD NAMES (indicator names) CURRENTLY TRUNCATED NUMBERED 10 CHARACTERS MAX. see Shapefile format basics arcgis.com","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2shapefile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"export EJAM results as geojson/zipped shapefile/kml for use in ArcPro, EJScreen, etc. — ejam2shapefile","text":"","code":"# \\donttest{   # folder = getwd()   # out <- ejamit(testpoints_100 , radius = 3.1)   # file <- ejam2shapefile(out, file = \"test100_3miles.geojson\", folder = folder)    out <- testoutput_ejamit_10pts_1miles   file <- ejam2shapefile(out)   shp <- shapefile_from_any(file)   map_shapes_leaflet(shp)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2tableviewer.html","id":null,"dir":"Reference","previous_headings":"","what":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","title":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","text":"See ejamit()$results_bysite interactive table RStudio viewer pane","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2tableviewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","text":"","code":"ejam2tableviewer(   out,   fname = \"automatic\",   maxrows = 1000,   launch_browser = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2tableviewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","text":"output ejamit(), one table like ejamit()$results_overall, subset like ejamit()$results_bysite[7,] fname optional. path filename html file save table , uses tempdir() specified. Set NULL prevent saving file. maxrows load/ try show many rows max. launch_browser set TRUE launch browser show report. Ignored interactive() fname set NULL.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2tableviewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","text":"datatable object using DT::datatable() can printed console shown RStudio viewer pane","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2tableviewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See ejamit()$results_bysite in interactive table in RStudio viewer pane — ejam2tableviewer","text":"","code":"ejam2tableviewer(testoutput_ejamit_10pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2table_tall.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple quick look at results of ejamit() in RStudio console — ejam2table_tall","title":"Simple quick look at results of ejamit() in RStudio console — ejam2table_tall","text":"Simple quick look results ejamit() RStudio console","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2table_tall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple quick look at results of ejamit() in RStudio console — ejam2table_tall","text":"","code":"ejam2table_tall(ejamitout, sitenumber)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2table_tall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple quick look at results of ejamit() in RStudio console — ejam2table_tall","text":"ejamitout like ejamit() doaggregate() sitenumber omitted, shows results_overall, integer, identifies site (row) show results_bysite","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejam2table_tall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple quick look at results of ejamit() in RStudio console — ejam2table_tall","text":"data.frame one indicator per row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"main function EJAM runs analysis. essentially web app , analyze/summarize near set points, set polygons shapefile, list Census Units like Counties.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"","code":"ejamit(   sitepoints = NULL,   radius = 3,   radius_donut_lower_edge = 0,   maxradius = 31.07,   avoidorphans = FALSE,   quadtree = NULL,   fips = NULL,   shapefile = NULL,   countcols = NULL,   wtdmeancols = NULL,   calculatedcols = NULL,   calctype_maxbg = NULL,   calctype_minbg = NULL,   subgroups_type = \"nh\",   include_ejindexes = TRUE,   calculate_ratios = TRUE,   extra_demog = TRUE,   need_proximityscore = FALSE,   infer_sitepoints = FALSE,   need_blockwt = TRUE,   thresholds = list(80, 80),   threshnames = list(c(names_ej_pctile, names_ej_state_pctile), c(names_ej_supp_pctile,     names_ej_supp_state_pctile)),   threshgroups = list(\"EJ-US-or-ST\", \"Supp-US-or-ST\"),   updateProgress = NULL,   updateProgress_getblocks = NULL,   progress_all = NULL,   in_shiny = FALSE,   quiet = TRUE,   silentinteractive = FALSE,   called_by_ejamit = TRUE,   testing = FALSE,   showdrinkingwater = TRUE,   showpctowned = TRUE,   download_fips_bounds_to_calc_areas = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point radius_donut_lower_edge radius lower edge donut ring analyzing ring circle maxradius miles distance (max distance check even 1 block point within radius) avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function fips optional FIPS code vector provide using FIPS instead sitepoints specify places analyze, list US Counties tracts. Passed getblocksnearby_from_fips() shapefile optional. sf shapefile object path .zip, .gdb, .json, .kml, etc., folder shapefiles, analyze polygons. e.g., = ejamit(shapefile = testdata(\"portland.json\", quiet = T), radius = 0) RStudio want interactively prompt pick file, use shapefile=1 (otherwise assumes want pick latlon file). countcols character vector names variables aggregate within buffer using sum counts, like, example, number people poverty ratio known, count exact denominator needed correctly calculate percent low income. wtdmeancols character vector names variables aggregate within buffer using population-weighted -weighted mean. calculatedcols character vector names variables aggregate within buffer using formulas specified. calctype_maxbg character vector names variables aggregate within buffer using max() blockgroup-level values. calctype_minbg character vector names variables aggregate within buffer using min() blockgroup-level values. subgroups_type Optional (uses default). Set \"nh\" non-hispanic race subgroups Non-Hispanic White Alone, nhwa others names_d_subgroups_nh; \"alone\" race subgroups like White Alone, wa others names_d_subgroups_alone; \"\" versions. Possibly another option \"original\" \"default\" Alone means single race. include_ejindexes whether try include Summary Indexes (assuming dataset available) - passed doaggregate() calculate_ratios whether calculate return ratio indicator US State overall averages - passed doaggregate() extra_demog include indicators v2.2 report language etc. need_proximityscore whether calculate proximity scores infer_sitepoints set TRUE try infer lat,lon site around blocks sites2blocks found. lat,lon site approximated average nearby blocks, although accurate slower way use reported distance 3 furthest block points triangulate need_blockwt fips parameter used, passed getblocksnearby_from_fips() thresholds list percentiles like list(80,90) passed batch.summarize(), counted report many set indicators exceed thresholds site. (see default) threshnames list groups variable names (see default) threshgroups list text names groups (see default) updateProgress progress bar function passed doaggregate() shiny app updateProgress_getblocks progress bar function passed getblocksnearby() shiny app progress_all progress bar app R shiny run in_shiny fips parameter used, passed getblocksnearby_from_fips() quiet Optional. passed getblocksnearby() batch.summarize(). set TRUE avoid message using getblocks_diagnostics(), relevant user saved output function. silentinteractive prevent long output showing console RStudio interactive mode, passed doaggregate() also. app server sets TRUE calling doaggregate() ejamit() default set FALSE calling doaggregate(). called_by_ejamit Set TRUE ejamit() suppress outputs even ejamit(silentinteractive=F) testing used testing function, passed doaggregate() showdrinkingwater T/F whether include drinking water indicator values display NA. Defaults TRUE. showpctowned T/f whether include percent owner-occupied units indicator values display NA. Defaults TRUE. download_fips_bounds_to_calc_areas set TRUE, slower downloads bounds unit calculate area square miles ... passed getblocksnearby() etc.  report_progress_every_n = 0","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"returns named list results.   results_overall  data.table one row provides summary across sites, aggregated results unique residents. results_bysite   results individual sites (buffers) - data.table results, one row per ejam_uniq_id (.e., site analyzed), one column per indicator results_bybg_people  results block group, allow showing distribution indicator across everyone, including distribution within single residential population group, example. table essential analyzing distribution indicator across unique residents analyzed. columns results_bysite , however. One row one blockgroup either partly entirely counted () one analyzed sites, bgid can linked bgfips via table blockgroupstats. indicators row totals averages entire blockgroup, just portion counted /analyzed sites. column bgwt records fraction blockgroup counted /analyzed sites whole, may reflect one blockgroup since may near two analyzed sites, example. results_summarized See batch.summarize() documenting ! longnames  descriptive long names indicators outputs count_of_blocks_near_multiple_sites  additional detail sitetype indicates analysis used latlon, fips, shp formatted another tall format showing averages indicators sitetype type analysis done: \"latlon\", \"shp\", \"fips\", etc.","code":"# To see the structure of the outputs of ejamit()  structure.of.output.list(testoutput_ejamit_10pts_1miles)  dim(testoutput_ejamit_10pts_1miles$results_summarized$keystats)  dim(testoutput_ejamit_10pts_1miles$results_summarized$rows)  dim(testoutput_ejamit_10pts_1miles$results_summarized$cols)  dim(testoutput_ejamit_10pts_1miles$results_summarized$keyindicators)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"See examples vignettes/ articles https://usepa.github.io/EJAM-open","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an EJ analysis (residential population and environmental indicators) in or near a list of locations — ejamit","text":"","code":"# See examples in vignettes/ articles   # All in one step, using functions not shiny app:  out <- ejamit(testpoints_100_dt, 2)   # \\donttest{  # Do not specify sitepoints and it will prompt you for a file,  # if in RStudio in interactive mode!  out <- ejamit(radius = 3)    # Specify facilities or sites as points for test data,   # use 1000 test facility points from the R package   testsites <- testpoints_1000   # use facility points in an excel or csv file    testsites <- latlon_from_anything(      system.file(paste0(\"testdata/latlon/\",       \"testpoints_10.xlsx\"),     package = \"EJAM\")     )    # head(testsites)   # use facility points from a random sample of EPA-regulated facilities   testsites <- testpoints_n(1e3)    # Specify max distance from sites to look at (residents within X miles of site point)   radius <- 3.1 # miles    # Get summaries of all indicators near a set of points   out <- ejamit(testsites, radius)   # out <- ejamit(\"myfile.xlsx\", 3.1)    # Shapefile examples   out2 = ejamit(shapefile = testshapes_2, radius = 0)   out3 = ejamit(shapefile = testdata(\"portland.json\", quiet = T), radius = 0)      # FIPS examples   out4 = ejamit(fips = testinput_fips_cities)   out5 = ejamit(fips = fips_counties_from_state_abbrev(\"DE\"), radius = 0)      # View results overall   round(t(out$results_overall), 3.1)    # View plots    plot_distance_by_group(results_bybg_people = out$results_bybg_people)    distance_by_group(out$results_bybg_people)    # View maps   mapfast(out$results_bysite, radius = 3.1)    # view results at a single site   mapfast(out$results_bysite, radius = 3.1)   # all the raw numbers at one site   t(out$results_bysite[1, ])    # if doing just 1st step of ejamit()   #  get distance between each site and every nearby Census block    s2b <- testoutput_getblocksnearby_100pts_1miles   getblocks_diagnostics(s2b)    testsites <- testpoints_10[2,]   s2b <- getblocksnearby(testsites, radius = 3.1)   getblocks_diagnostics(s2b)   plotblocksnearby(s2b)    # if doing just 2d step of ejamit()   #  get summaries of all indicators based on table of distances   out <- doaggregate(s2b, testsites) # this works now and is simpler  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","title":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","text":"Compare EJAM results overall one radius Run ejamit() per radius, get summary table row per radius","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","text":"","code":"ejamit_compare_distances(   sitepoints,   radii = c(1, 2, 3),   donuts_not_cumulative = FALSE,   quiet = TRUE,   silentinteractive = TRUE,   plot = TRUE,   myvars = names_d_subgroups_ratio_to_state_avg,   ylab = \"Ratio of Avg. within X miles to Avg. Statewide or Nationwide\",   ylim = c(0, 5),   n = 1,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","text":"sitepoints like ejamit() radii optional, vector radius values like 1:3 ejamit() donuts_not_cumulative optional, implemented, set TRUE, return results areas \"donut\" ring distance bin,    0 < R <= radii[1]  radii[1] < R <= radii[2]    etc. quiet optional, passed ejamit() silentinteractive optional, passed ejamit() plot optional logical, set FALSE avoid plotting myvars optional, plot, see default value ylab optional, plot, see default value ylim optional, plot, see default value n optional, many indicators report (printed console), reporting indicators strongly increase radius decreases. ... optional, passed ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","text":"data.table can call results_bydistance, like ejamit()$results_overall one row per radius","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare EJAM results overall for more than one radius Run ejamit() once per radius, get a summary table with a row per radius — ejamit_compare_distances","text":"","code":"radii <- c(convert_units(5,\"km\",\"miles\"), convert_units(50,\"km\",\"miles\"))   radii <- 1:10   radii <- c(1, 10)   pts <- testpoints_100   pts <- testpoints_10    bydist <- ejamit_compare_distances(pts, radii = radii)   ejamit_compare_distances2plot(bydist, myvars = c(     \"ratio.to.avg.pctlowinc\", \"ratio.to.avg.pcthisp\", \"ratio.to.avg.pctnhba\"))    names(bydist) <- fixcolnames(names(bydist), \"r\", \"shortlabel\")"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances2plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","title":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","text":"plot indicators function distance point(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances2plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","text":"","code":"ejamit_compare_distances2plot(   results_bydistance,   myvars = names_d_subgroups_ratio_to_state_avg,   ylab = \"Ratio of Avg. within X miles to Avg. Statewide or Nationwide\",   ylim = c(0, 5),   n = 1,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances2plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","text":"results_bydistance output ejamit_compare_distances(), table similar ejamit()$results_overall except one row per distance. myvars optional, see ejamit_compare_distances() ylab optional, see ejamit_compare_distances() ylim optional, see ejamit_compare_distances() n optional, see ejamit_compare_distances() ... optional, passed plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances2plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","text":"text vector length n, naming indicators strongly increase get closer site(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances2plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot indicators as a function of distance from point(s) — ejamit_compare_distances2plot","text":"used ejam2barplot_distances() plot results ejamit_compare_distances()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"Compare ejamit() full results one radius Helper used ejamit_compare_distances() run ejamit() per radius, get FULL ejamit() output list per radius","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"","code":"ejamit_compare_distances_fulloutput(   sitepoints,   radii = c(1, 2, 3),   donuts_not_cumulative = FALSE,   quiet = TRUE,   silentinteractive = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"sitepoints like ejamit() radii vector radius values like 1:3 ejamit() donuts_not_cumulative set TRUE get results ring full circle quiet passed ejamit() silentinteractive passed ejamit() ... passed ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"list can think \"out_bydistance\" element full output ejamit() 1 radius","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"typically need ejamit_compare_distances(), gives just summary overall distance, want retain full outputs ejamit() distance, results every site every distances, can use ejamit_compare_distances_fulloutput() extract slice results, use helper functions like out_bydistance2results_bydistance() out_bydistance2results_bydistance_bysite() out_bydistance2results_bysite_bydistance()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_distances_fulloutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare ejamit() full results for more than one radius Helper used by ejamit_compare_distances() to run ejamit() once per radius, get FULL ejamit() output list per radius — ejamit_compare_distances_fulloutput","text":"","code":"radii <- c(1,2,3,6,10)   pts <- testpoints_10   # \\donttest{   x <- ejamit_compare_distances_fulloutput(pts, radii = radii)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_types_of_places.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","title":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","text":"*** DRAFT - May change works currently drafted. e.g., change output formats results_bytype vs results_overall","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_types_of_places.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","text":"","code":"ejamit_compare_types_of_places(   sitepoints,   typeofsite = NULL,   shapefile = NULL,   fips = NULL,   silentinteractive = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_types_of_places.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","text":"sitepoints see ejamit() typeofsite vector length NROW(sitepoints), unique value defines group sites shapefile see ejamit() fips see ejamit() silentinteractive passed ejamit() ... see ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_types_of_places.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","text":"similar ejamit output results_overall one row per unique typeofsite","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_compare_types_of_places.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare subsets (types) of places that are all from one list — ejamit_compare_types_of_places","text":"","code":"out <- ejamit_compare_types_of_places(testpoints_10[1:4, ],      typeofsite = c(\"A\", \"B\", \"B\", \"C\"))   cbind(Rows_or_length = sapply(out, NROW))      ejam2barplot_sitegroups(out, names_these_ratio_to_avg[1], topn = 3)      ejam2barplot_sitegroups(out, \"sitecount_unique\", topn=3, sortby = F)      ejam2barplot_sitegroups(out, \"pop\", topn = 3, sortby = F)      # use calculated variable not in original table   df <- out$results_bytype   df$share <- df$pop / sum(df$pop)   df$pop_per_site <- df$pop / df$sitecount_unique      plot_barplot_sites(df,     \"share\", ylab = \"Share of Total Population\",     topn = 3, names.arg = out$types , sortby = F)        plot_barplot_sites(df,     \"pop_per_site\", ylab = \"Pop. at Avg. Site in Group\",     topn = 3, main = \"Nearby Residents per Site, by Site Type\",     names.arg = out$types , sortby = F)      # \\donttest{        # Analyze by EPA Region      pts <- data.frame(testpoints_1000)      # Get State and EPA Region of each point from lat/lon       x <- state_from_latlon(lat = pts$lat, lon = pts$lon)    pts <- data.frame(pts, x)        out_byregion <- ejamit_compare_types_of_places(      pts, typeofsite = pts$REGION)        dvarname <- names_d[3]    ejam2barplot_sitegroups(out_byregion, dvarname)    abline(h = usastats_means(dvarname))        ejam2barplot_sitegroups(out_byregion, \"ratio.to.avg.pctmin\",       main = \"By EPA Region\", ylim = c(0, 2))    abline(h = 1)          # Analyze by State (slow)        out_bystate <- ejamit_compare_types_of_places(pts, typeofsite = pts$ST)        ejam2barplot_sitegroups(out_bystate, \"sitecount_unique\",       names.arg = out_bystate$types, topn = 52, cex.names = 0.5,      main = \"Sites by State\")    # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_sitetype_from_input.html","id":null,"dir":"Reference","previous_headings":"","what":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","title":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","text":"helper infer type sites analyzed looking params given INPUT ejamit() used ejamit() ejamit_compare_types_of_places()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_sitetype_from_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","text":"","code":"ejamit_sitetype_from_input(sitepoints = NULL, fips = NULL, shapefile = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_sitetype_from_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","text":"sitepoints parameter passed ejamit() fips parameter passed ejamit() shapefile parameter passed ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_sitetype_from_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","text":"either \"latlon\", \"fips\", \"shp\", errors 2 3 types specified ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejamit_sitetype_from_input.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper to infer what type of sites were analyzed by looking at params given as INPUT to ejamit() used by ejamit() and ejamit_compare_types_of_places() — ejamit_sitetype_from_input","text":"Note sitetype quite site_method parameter used building reports. site_method can one : SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT sitetype can latlon, fips, shp returned ejamit(), can include lowercase versions site_method values within server code function parameters!","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejampackages.html","id":null,"dir":"Reference","previous_headings":"","what":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","title":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","text":"ejampackages (DATA) list names key EJAM-related R packages","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejampackages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","text":"","code":"ejampackages"},{"path":"https://usepa.github.io/EJAM-open/reference/ejampackages.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ejampackages (DATA) list of names of key EJAM-related R packages — ejampackages","text":"object class character length 1.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","title":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","text":"Get data.table EJScreen report results one multiple circular buffers.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","text":"","code":"ejscreenapi(   lon,   lat,   radius = 3,   unit = \"miles\",   wkid = 4326,   fips = NULL,   shapefile = NULL,   namestr = \"\",   report_every_n = 1000,   save_when_report = FALSE,   format_report_or_json = \"pjson\",   on_server_so_dont_save_files = FALSE,   ipurl = \"ejscreen.epa.gov\",   updateProgress = NULL,   drop_redundant_indicators = TRUE,   nicenames = FALSE,   verbose = TRUE,   getstatefromplacename = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","text":"lon Longitude numeric vector lat Latitude numeric vector radius radius circular buffer (uses default none specified) unit \"miles\" (default) \"kilometers\" wkid optional spatial reference code, default needed fips used instead lon,lat character FIPS code vector (counties, tracts, blockgroups) shapefile implemented namestr optional text report_every_n report ETA snd possibly save interim file every n points save_when_report optional, write .rdata file working directory results far, ever n points, results even crashes format_report_or_json default pjson modify allow report get just pdf URL also can gotten via url_ejscreen_report() on_server_so_dont_save_files FALSE default, TRUE prevents saving progress crash-related files ipurl URL IP try updateProgress Used create progress bar Shiny app drop_redundant_indicators Set FALSE want exclude results indicators appear twice just 2 different names, like RAW_D_LIFEEXP RAW_HI_LIFEEXPPCT identical. nicenames Set TRUE want rename headers long friendly plain English R variable names note downstream functions mostly expect rname format uses ejscreenapi1() ejscreenRESTbroker()  ejscreenRESTbroker2table() verbose whether print console / viewer / plot getstatefromplacename set FALSE need exact output API TRUE want try extract ST abbrev statename placename field, likely correct stateAbbr stateName fields API output.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","text":"Specify radius vector latitude longitude points, get buffer population weighted mean value raw indicator like percent low-income, total population count, percentiles raw indicator scores, EJScreen, EJScreen standard report. functions ejscreenapi_plus() ejscreenit() higher-level functions provide renamed variables outputs. Column names returned ejscreenapi() provided EJScreen API, e.g., RAW_D_INCOME, renamed variables like pctlowinc etc. Percent Low Income ejscreenRESTbroker() lowest level function access API. ejscreenRESTbroker2table() converts table. ejscreenRESTbroker2table(ejscreenRESTbroker()) returns 1-row data.frame ejscreenapi1() except latter drops percent signs makes values numeric, converting text like 45% number 45. also drops redundant columns numbers returned API using normal name synonym name, TOTALPOP \"totalPop\" compare API variable names renamed versions:   Note related functions recoded using httr2 best practices, described : https://httr.r-lib.org/articles/api-packages.html. relies ejscreenapi1() request URL pdf report site via API, error checking, like ejscreenapi1() GET request via API parses JSON results GET request, cleans , adds URLs links, compiles data.table, enables progress bar, etc. Note API fairly slow, fine 10 sites, large numbers. varies, can run 1k 10k sites per hour, circular buffers 1 3 mile radius. sometimes fails obtain results, may caused unreliable results API rather code requesting results via API. See  https://web.archive.org/web/20250118193121/https://www.epa.gov/ejscreen/ejscreen-api","code":"x <- ejscreenapi(-100, 40, 1) cbind(names(x), fixnames(names(x)))"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use EJScreen API to get stats on one or more circular buffers — ejscreenapi","text":"","code":"# \\donttest{  # Specify size of buffer circle and pick random points as example data  myradius <- 1  pts2 <- data.frame(lon = c(-111.9040233, -73.7917865), lat = c(33.5604162, 41.0613821))  pts5 <- testpoints_5    out <- ejscreenapi(lon = pts2$lon, lat = pts2$lat, radius = myradius)  head(t(out))  outnice <- ejscreenapi(lon = pts2$lon, lat = pts2$lat, radius = myradius, nicenames = TRUE)  head(t(outnice), 24)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi1.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","title":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","text":"Get EJScreen report results one circular buffer, data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","text":"","code":"ejscreenapi1(   lon,   lat,   radius = 3,   unit = \"miles\",   wkid = 4326,   fips = NULL,   shapefile = NULL,   namestr = \"\",   format_report_or_json = \"pjson\",   ipurl = \"ejscreen.epa.gov\",   getstatefromplacename = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","text":"lon Longitude numeric lat Latitude numeric radius radius, miles, circular buffer unit miles (default) kilometers wkid optional spatial reference code. https://epsg.io/4326 fips used instead lon,lat character FIPS code (counties, tracts, blockgroups) shapefile implemented namestr optional text used report fips provided want show text instead FIPS code report format_report_or_json default \"pjson\" \"report\" get URL pdf report ipurl IP URL start getstatefromplacename set FALSE need exact output API TRUE want try extract ST abbrev statename placename field, likely correct stateAbbr stateName fields API output.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","text":"Specify radius vector latitude longitude points, get buffer population weighted mean value raw indicator like percent low-income, total population count, percentiles raw indicator scores, EJScreen, EJScreen standard report. Note API fairly slow, fine 10 sites, large numbers. Relies ejscreenRESTbroker() actual request via API, ejscreenRESTbroker2table() format handle errors. essentially : ejscreenRESTbroker2table(ejscreenRESTbroker()) adds columns  \"pdf_report\" \"pdf_acs_report\" returns 1-row data.frame makes relevant columns values numeric, converts text like 45% number 45. also drops redundant columns numbers returned API using normal name synonym name, TOTALPOP \"totalPop\" See  (https://web.archive.org/web/20250118193121/https://www.epa.gov/ejscreen/ejscreen-api)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use EJScreen API to get stats on ONLY ONE circular buffer — ejscreenapi1","text":"","code":"# \\donttest{  # Specify size of buffer circle and pick random points as example data  myradius <- 1  pts <- structure(list(lon = c(-96.4798957, -111.7674343, -75.4173589,   -95.9573172, -87.8402677, -77.9996191, -73.920702, -79.9545638,   -76.0638877, -114.9881473), lat = c(31.782716, 33.7522735, 39.8697972,   33.2522474, 41.9763992, 38.4661259, 41.2940801, 32.8099327, 40.9888266,   36.0043628), id = 1:10), row.names = c(NA, -10L), class = \"data.frame\")  out1 <- ejscreenapi1(lon = pts$lon[1], lat=pts$lat[1], radius = myradius)  t(out1)  #out <- ejscreenapi(lon=pts$lon, lat=pts$lat, radius = myradius)  #t(out[1:2,])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi2ejam_format.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"Used ejscreenit_for_ejam() make easier compare EJScreen EJAM results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi2ejam_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"","code":"ejscreenapi2ejam_format(   ejscreenapi_plus_out,   fillmissingcolumns = FALSE,   ejamcolnames = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi2ejam_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"ejscreenapi_plus_out results ejscreenapi_plus() also results ejscreenit()$table even though colnames differ, get converted case. Alternatively also can whole list output ejscreenit() just ejscreenit()$table, function figure . fillmissingcolumns optional. set TRUE want output exactly columns EJAM table , fill NA values columns provided EJScreen API. ejamcolnames optional. specified vector colnames, overrides assumed colnames taken colnames(testoutput_ejamit_10pts_1miles$results_bysite). colnames specify colnames output fillmissingcolumns = TRUE, else names(ejscreenapi_plus_out) omitted.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi2ejam_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"data.table just data.frame, columns found output ejamit()$results_bysite","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi2ejam_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - Convert output of ejscreenapi_plus to format of ejamit table of sites — ejscreenapi2ejam_format","text":"","code":"# \\donttest{   y1 <- ejscreenit_for_ejam(testpoints_10[1:2, ], radius = 1)     x <- ejscreenapi_plus(testpoints_10[1:2, ], radius = 1)    y <- ejscreenapi2ejam_format(x)    ejamvars <- names(testoutput_ejamit_10pts_1miles$results_bysite)    all.equal(      names(y),       ejamvars[ejamvars %in% names(y)]   )      z <- ejscreenapi2ejam_format(x, fillmissingcolumns = T)   all.equal(names(z), ejamvars)      # for convenience also can do this:   x <- ejscreenapi2ejam_format()      # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_online.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - check if EJScreen API seems to be online or offline — ejscreenapi_online","title":"utility - check if EJScreen API seems to be online or offline — ejscreenapi_online","text":"utility - check EJScreen API seems online offline","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - check if EJScreen API seems to be online or offline — ejscreenapi_online","text":"","code":"ejscreenapi_online(url = \"https://ejscreen.epa.gov\")"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - check if EJScreen API seems to be online or offline — ejscreenapi_online","text":"url DEFAULT 2024 base url EJScreen API","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - check if EJScreen API seems to be online or offline — ejscreenapi_online","text":"TRUE FALSE (NA internet connection seems available )","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"Using EJScreen API without Shiny app interface","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"","code":"ejscreenapi_plus(   x,   y = NULL,   radius = 3,   unit = \"miles\",   wkid = 4326,   fips = NULL,   shapefile = NULL,   namestr = \"\",   report_every_n = 100,   save_when_report = FALSE,   format_report_or_json = \"pjson\",   on_server_so_dont_save_files = FALSE,   ipurl = \"ejscreen.epa.gov\",   mapping_for_names = NULL,   usewhichnames = \"r\",   calculate_ratios = TRUE,   verbose = FALSE,   getstatefromplacename = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"x longitudes; path/filename xlsx csv lat, lon; data.frame data.table lat,lon y latitudes, ignored x file table lat,lon info. radius circular buffer radius (miles default, unless unit changed) unit default miles wkid use. https://epsg.io/4326 fips used instead lon,lat character FIPS code vector (counties, tracts, blockgroups) shapefile implemented namestr optional text report_every_n default provide update every often save_when_report default FALSE TRUE saves work progress every often format_report_or_json use on_server_so_dont_save_files default FALSE, set TRUE run server ipurl change different URL used EJScreen API mapping_for_names table translates original (FTP site), short friendly (useful coding analysis), long complete variable names (clearer Excel headers). can read csv file data package. documented , format may change. usewhichnames default use short friendly ones? calculate_ratios whether add columns ratio raw score US State average verbose whether print console / viewer / plot getstatefromplacename set FALSE need exact output API TRUE want try extract ST abbrev statename placename field, likely correct stateAbbr stateName fields API output.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"Returns data.frame results, one row per buffer (site), one column per indicator, 300 columns. ejscreenit() returns one element list also map plot.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"See ejscreenit() details . ejscreenit() uses functions , returns list table, map, plot, etc. ejscreenapi_plus() accepts file table vectors point data, uses ejscreenapi() get EJScreen stats, prepends input table renames columns, return table. ejscreenapi()    gets EJ stats many points data.table many rows. ejscreenapi1() gets EJ stats 1 point via API, data.frame 1 row. ejscreenRESTbroker() gets EJ stats one point JSON. also now drops redundant columns numbers returned API using normal name synonym name, TOTALPOP \"totalPop\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenapi_plus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given a set of points (lat lon), get table of EJScreen API results near each — ejscreenapi_plus","text":"","code":"# see [ejscreenit()] for examples   pts <- data.frame(    siteid = 1:2,    sitename = c(\"site A\", \"site B\"),    lon =      c(-91.132107, -91.09),    lat =      c(30.494982,   30.45)   )   # pts <- testpoints_5      myradius <- 1      x <- testoutput_ejscreenapi_plus_5; names(x) <- fixcolnames(names(x), \"r\", \"long\")   # x <- ejscreenapi_plus(pts,              radius = myradius, usewhichnames = \"long\")   # x <- ejscreenapi_plus(x = pts$lon, y = pts$lat, radius = myradius, usewhichnames = \"long\")   # x <- ejscreenapi_plus(pts,              radius = myradius, usewhichnames = \"long\")      ## view results   t(x[1, 3:ncol(x)])   DT::datatable(x , escape = FALSE)      names(x) <- fixcolnames(names(x), \"long\", \"r\")   plot_boxplot_ratios((calc_ratios_to_avg(x))$ratios_d, wheretext = myradius)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"main high-level function work involved using EJScreen API outside web app get results multiple locations compiled one table.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"","code":"ejscreenit(   x,   y = NULL,   radius = 3,   maxradiusmiles = 10,   fips = NULL,   shapefile = NULL,   namestr = \"\",   nosave = TRUE,   nosee = TRUE,   save_map = TRUE,   see_map = TRUE,   save_plot = TRUE,   see_plot = TRUE,   save_table = TRUE,   see_table = FALSE,   interactiveprompt = FALSE,   calculate_ratios = TRUE,   nicenames = TRUE,   folder = \".\",   getstatefromplacename = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"x Point locations may specified several ways: x can vector longitudes (decimal degrees), case y also must provided latitudes; x can path/filename file .xlsx .csv format lat, lon header names x can data.frame, data.table, matrix (list) lat,lon column names (names list elements) x can omitted one using RStudio interactively, case user prompted select file local drive. y latitudes, ignored x file table lat,lon info. radius miles - gets data residents within distance point maxradiusmiles optional case want use radius default cap fips used instead x,y can specify fips codes counties, tracts, blockgroups shapefile implemented namestr optional text nosave logical, TRUE, sets FALSE overrides save_map, save_plot, save_table. Ignored FALSE. nosee logical, TRUE, sets FALSE overrides see_map, see_plot, see_table. Ignored FALSE. save_map logical, whether save png image file locally see_map logical, whether display interactive map save_plot logical, whether save png image file locally see_plot logical, whether display plot (boxplots) save_table logical, whether save table data file locally see_table logical, whether display interactive table interactiveprompt logical, whether prompt upload file ask hit key continue map shown, etc. interactive() TRUE, actually defaults TRUE. calculate_ratios whether add columns ratio raw score US State average nicenames whether use long plain English headers table R variable names, e.g.,  \"Particulate Matter (PM 2.5 ug/m3)\" \"pm\" folder full path directory save files like map, plot, table Default working directory. getstatefromplacename set FALSE need exact output API TRUE want try extract ST abbrev statename placename field, likely correct stateAbbr stateName fields API output. ... passed ejscreenapi_plus()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"Returns list map, boxplot, table map sites popups EJ stats, returned plot, viewed interactive map .png graphic boxplot residential population percentages ratios average, returned plot, viewed noninteractive plot .png table results returned data.frame, viewed interactive datatable, .xlsx .csv includes us.ratios state.ratios via one row per site one column per indicator ratios US State average. also now drops redundant columns numbers returned API using normal name synonym name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"function provides EJScreen indicator results near list sites, one function, want RStudio (interactive analysis) via software/apps (programmatically) rather web app interface. alternative EJAM, explained . Based set places, ejscreenit() requests EJScreen standard report place assembles results single spreadsheet. indicators include residential population environmental indicators well Summary Indexes combine , geospatial information site. ejscreenit() basic, high-level tool enables easy access EJScreen API list sites, outside context web app. accepts lat/lon values flexibly interactively R console, uses helper functions return list 3 objects: table interactive map (html widget popups R console saved html file) plot indicators range sites table provides uses plain-English column headers, \"Traffic Proximity Volume (daily traffic count/distance road)\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"ejam-vs-ejscreen","dir":"Reference","previous_headings":"","what":"EJAM vs EJScreen","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"obtain overall summary statistics (faster results) use ejamit() EJAM package instead ejscreenit(). two tools, ejamit() ejscreenit(), different, pros cons: key advantages EJAM ejscreenit / EJScreen API much, much slower EJAM ejscreenit provide overall summary across sites, EJAM can \"overall summary\" means, example, overall percent low income among unique residents near one sites. inability provide overall summary aggregating across sites due limitations EJScreen API – provide data needed correctly aggregate across sites (see detailed explanation ejscreenapi document).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"inputs-and-outputs","dir":"Reference","previous_headings":"","what":"Inputs and Outputs","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"ejscreenit() function accepts set points (locations) radius, accesses EJScreen (server via API) assemble list results similar EJScreen standard report many sites. Points can specified several ways: table (columns lat, lon geographic coordinates) spreadsheet file info (named, pointed interactively RStudio) function returns list items: table, map, plot table scores like EJScreen standard buffer report, one row per site (input point) set columns table, set ratios, indicator value nearby site divided indicator value US overall (puts indicators common units, facilitating comparisons, offering summary statistic complementary percentile may useful cases) map interactivity popups results point plot/graphic visualization range sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"details-of-helper-functions-used","dir":"Reference","previous_headings":"","what":"Details of helper functions used","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"function works requesting site report EPA servers via EJScreen API using various helper functions. uses functions including following: ejscreenit() basic, high-level tool enables access EJScreen API list sites, outside context web app. accepts lat/lon values flexibly interactively R console, uses helper functions return list 3 objects: table, interactive map, plot. table provides uses plain-English column headers, \"Traffic Proximity Volume (daily traffic count/distance road)\" ejscreenapi_plus() can accept file point data, uses ejscreenapi() get EJScreen stats, prepends input table renames columns R variables like \"traffic.score\" ejscreenapi()  gets EJ stats many points data.table many rows. ejscreenapi1() gets EJ stats 1 point via API, data.frame 1 row. ejscreenRESTbroker() gets EJ stats one point JSON. Also used ejscreenapi_plus(), ejscreenapi(), urls_clusters_and_sort_cols(), fixcolnames(), url_linkify(), popup_from_ejscreen(), calc_ratios_to_avg(), plot_boxplot_ratios()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get EJScreen results near each site, compiled as a table, with map and plot — ejscreenit","text":"","code":"# \\donttest{  pts <- testpoints_50[1:3, ] # sample data from package  mapfast(pts)  #pts <- system.file(\"testdata/latlon/testpoints_10.xlsx\", package=\"EJAM\")   if (interactive)    x <- ejscreenit(pts,     save_map = F, save_plot = F, save_table = F, folder = \"~\", see_table = T)    myradius <- 1 # in miles  # myradius <- 5000 / meters_per_mile # 5 kilometer radius, approx 3.1 miles  # Get results from server by using API   x <- ejscreenit(    pts=pts, radius = myradius,    save_table = FALSE, save_map = FALSE, save_plot = FALSE)     # see format of output results  names(x) # [1] \"table\" \"map\"   \"plot\"    y = ejscreenapi_plus(pts, radius = myradius)  all.equal(x$table, y)    # For this table view, remove map and pdf URL columns   y <- x$table[ , !grepl(\"EJScreen\", names(x$table))]   t(y[1, ])  # see one column of results  DT::datatable(y)  # see interactive data table view in viewer of RStudio    # View links in RStudio Viewer window rather than shiny app or Excel   html_print(HTML(paste(paste(x$table[,\"EJScreen Report\"], collapse=\"<br>\"),     \"<p><\/p>\", paste(x$table[,\"EJScreenMAP\"], collapse=\"<br>\") )  ))    # View the boxplots of results  x$plot    # Save the plot as a file:    # You can save it while running ejscreenit()  # by including the parameters save_map = T, nosave = F, folder = \".\"  # or afterwords like this:    png(filename = file.path(folder,\"Boxplot of EJ stats.png\"),     width = 1200, height = 600)  x$plot  dev.off()    # Save the map as a file:    # You can save the map while running ejscreenit()  # by including the parameters save_plot = T, nosave = F, folder = \".\"  # or afterwords save as an interactive HTML webpage, like this:    # htmltools::save_html(x$map, \"mapfile.html\")    # or make it printable as a static file like this:  x$map %>% leaflet.extras2::easyprintMap(    filename = file.path(folder, \"map.png\"), exportOnly = TRUE) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_for_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"wrapper EJAM use ejscreenit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_for_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"","code":"ejscreenit_for_ejam(   sitepoints,   radius = 3,   fips = NULL,   shapefile = NULL,   namestr = \"\",   nosave = TRUE,   nosee = TRUE,   fillmissingcolumns = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_for_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"sitepoints table lat lon columns radius miles fips fips code (possibly vector fips codes) shapefile implemented namestr optional text nosave passed ejscreenit() nosee passed ejscreenit() fillmissingcolumns passed ejscreenapi2ejam_format() ... parameters passed ejscreenit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_for_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EJScreen results directly from EJScreen servers via their API — ejscreenit_for_ejam","text":"data.table looks like output ejamit()$results_bysite","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"Utility get quick view RStudio viewer datatable ejscreenapi results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"","code":"ejscreenit_see_table(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"x output ejscreenit(), just table element output, easier something like example.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"output DT::datatable()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"Also see functions EJAM package.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenit_see_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to get quick view in RStudio viewer of datatable of ejscreenapi results — ejscreenit_see_table","text":"","code":"# out <- ejscreenit(testpoints_5, radius = 1)   out <- testoutput_ejscreenit_5   ejscreenit_see_table(out)   out$map"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"Use EJScreen API get raw json-format response, ready parsed ejscreenRESTbroker2table(). function underlies higher level functions like ejscreenapi() overall ejscreenit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"","code":"ejscreenRESTbroker(   lon = NULL,   lat = NULL,   radius = 3,   fips = NULL,   namestr = \"\",   shapefile = NULL,   url = c(\"https://ejscreen.epa.gov/mapper/ejscreenRESTbroker1.aspx?\",     \"https://ejscreen.epa.gov/mapper/ejscreenRESTbroker.aspx?\")[1],   ipurl = \"ejscreen.epa.gov\",   wkid = 4326,   unit = 9035,   f = \"pjson\",   reportstyle = c(\"EJscreen_SOE_report\", \"EJSCREEN_report\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"lon longitude lat latitude radius radius circular buffer (normally miles) fips specified, lon lat ignored, one fips code must FIPS code blockgroup tract, county (5 digits leading zero) city/town/cdp/etc. (7 digits leading zero). character string best, leading zero relevant. namestr optional text shapefile implemented url URL base API (provides access shorter version vs default longer list indicators), newer 2023 version default, using ejscreenRESTbroker1.aspx, old style/mini version ejscreenRESTbroker.aspx ipurl fixed ip domain/URL try wkid spatial reference. https://epsg.io/4326 unit 9035 miles, 9036 kilometers, default miles f pjson results JSON format, report URL pdf report reportstyle EJscreen_SOE_report full community profile new 7/2023, EJSCREEN_report older style standard report (fewer indicators ).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"Returns JSON default. See source code function notes format. status_code","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"Note public internal IP addresses differ. API: Introduction API works: https://web.archive.org/web/20250118193121/https://www.epa.gov/ejscreen/ejscreen-api API URL https://ejscreen.epa.gov/mapper/ejscreenRESTbroker1.aspx?geometry={%22spatialReference%22:{%22wkid%22:4326},%22x%22:-100.2,%22y%22:36}&distance=1&unit=9035&f=json example json output format, see source code function. API URL https://ejscreen.epa.gov/mapper/EJscreen_SOE_report.aspx?namestr=&geometry={%22spatialReference%22:{%22wkid%22:4326},%22x%22:-100.12811027526683,%22y%22:36.6582500495267}&distance=10&unit=9035&areatype=&areaid=&f=report example pdf report output. Note variables duplicated outputs. API: Simple web interface try API learn parameters can specified URL: 2023_07         ver 2.2        https://ejscreen.epa.gov/mapper/ejscreenapi1.html old style/mini ver 2.2 (fewer indicators) https://ejscreen.epa.gov/mapper/ejscreenapi.html API: REST endpoint: 2023_07  ver 2.2 https://ejscreen.epa.gov/mapper/ejscreenRESTbroker1.aspx?namestr= old style/mini ver 2.2 https://ejscreen.epa.gov/mapper/ejscreenRESTbroker.aspx?namestr= csv/gdb files: Data dictionary downloadable dataset: 2023_07  ver 2.2 https://gaftp.epa.gov/EJScreen/2023/EJSCREEN_2023_BG_Columns.xlsx API: Data dictionary variable names: 2023_07  ver 2.2 https://ejscreen.epa.gov/mapper/ejsoefielddesc1.html old style/mini ver 2.2 https://ejscreen.epa.gov/mapper/ejsoefielddesc.html Webpage explaining indicators ver 2.2 https://origin-awswest-www.epa.gov/ejscreen/ejscreen-map-descriptions Web tool user guide: 2023_07         ver 2.2 https://ejscreen.epa.gov/mapper/help/ejscreen_help.pdf","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-level utility to query EJScreen API for one circular buffer - API may or may not be available — ejscreenRESTbroker","text":"","code":"# \\donttest{   browseURL(ejscreenRESTbroker(lon = -80, lat = 42, f = 'report'))    x = ejscreenRESTbroker(lon = -80, lat = 42)   df = ejscreenRESTbroker2table(x)   class(df)   t(df)    x = ejscreenRESTbroker(lon = -80, lat = 42)   names(x)   x$url   x$status_code   names(jsonlite::fromJSON(rawToChar(x$content)))   names(jsonlite::fromJSON(rawToChar(x$content))$data)   names(jsonlite::fromJSON(rawToChar(x$content))$data$main)   names(jsonlite::fromJSON(rawToChar(x$content))$data$extras)   names(jsonlite::fromJSON(rawToChar(x$content))$data$demographics)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","title":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","text":"Convert json output ejscreenRESTbroker() simple 1-row data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","text":"","code":"ejscreenRESTbroker2table(brokeroutput, getstatefromplacename = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","text":"brokeroutput results ejscreenRESTbroker() getstatefromplacename set FALSE need exact output API TRUE want try extract ST abbrev statename placename field, likely correct stateAbbr stateName fields API output.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","text":"data.frame 1 row (site) many columns (indicators)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Low-level utility to convert result of EJScreen API query into table format — ejscreenRESTbroker2table","text":"function assumes got full results via API using ejscreenRESTbroker(). handles 300 indicators, including categorized API outputs main, extras, residential populations, duplicated indicators removed. drops redundant columns numbers returned API using normal name synonym name, \"TOTALPOP\" \"totalPop\" ejscreenapi1() relies function essentially :   Drops percent signs makes values numeric, converting text like 45% number 45. ensure one result per input point, even points invalid, later steps like ejscreenapi1, ejscreenapi, ejscreenapi_plus, ejscreenit(), function return row right columns NA values input seems wrong.","code":"ejscreenRESTbroker2table(ejscreenRESTbroker())"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table_na_filler.html","id":null,"dir":"Reference","previous_headings":"","what":"used to fill in NA values in correctly-formatted output of ejscreenRESTbroker2table() when no data are available — ejscreenRESTbroker2table_na_filler","title":"used to fill in NA values in correctly-formatted output of ejscreenRESTbroker2table() when no data are available — ejscreenRESTbroker2table_na_filler","text":"used fill NA values correctly-formatted output ejscreenRESTbroker2table() data available","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table_na_filler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"used to fill in NA values in correctly-formatted output of ejscreenRESTbroker2table() when no data are available — ejscreenRESTbroker2table_na_filler","text":"","code":"ejscreenRESTbroker2table_na_filler"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreenRESTbroker2table_na_filler.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"used to fill in NA values in correctly-formatted output of ejscreenRESTbroker2table() when no data are available — ejscreenRESTbroker2table_na_filler","text":"object class data.frame 1 rows 291 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"EJAM/EJSCREEN comparisons - Key function Best starting point comparing single-site (EJScreen API) multisite (EJAM) results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"","code":"ejscreen_vs(   defdir = \".\",   n,   newpts,   pts = NULL,   radius = NULL,   fips = NULL,   shapefile = NULL,   savedejscreentableoutput,   x100fix = TRUE,   x100varnames = names_pct_as_fraction_ejamit,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"defdir folder save results files n many places analyze compare newpts logical, need new set random locations pts data.frame points columns lat,lon testpoints_10 radius miles (analyzing points) fips vector fips codes relevant (instead pts, radius, shapefile) shapefile implemented directly shapefiles can analyzed fips provided cities, newpts requested cities, analyzed using shapefiles EJAM, provided fips ejscreenit() API. Select new, shape (city) options interactive mode. savedejscreentableoutput data.table ejscreenit()$table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"list data frames, names EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, diff, absdiff, pctdiff, abspctdiff diff EJAM - EJSCREEN ratio EJAM / EJSCREEN pctdiff ratio - 1 abs absolute value data.frame, colnames indicators like pop, blockcount_near_site, etc. rows represent sites analyzed.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"INTERACTIVE RSTUDIO CONSOLE USE RUN SET POINTS EJScreen EJAM multisite tool SAVE STATS DIFFERENCES Also lets use saved ejscreenapi results input points can iterate rerun just EJAM portion compare saved benchmark data. EJAM tool/ function called ejamit() rely EJScreen's typical single-location approach calculations instead tries replicate EJScreen single-site report . result, ejamit() much, much faster ejscreenit_for_ejam() provides additional information (distribution distances group, etc.) features (histograms, spreadsheet heatmaps, etc.) flexibility (easy analysts using R customize analysis, etc.), ejamit() always exactly replicate EJScreen – provide 100% identical results (percentiles, etc.) every indicator every analysis every location. almost indicators, 97% sites tested, difference either zero difference reports smaller 1% difference. may edge cases indicator differs significantly. differences due slight variations details spatial calculations (blocks nearby, sometimes counting 1 extra block 2.995 miles away EJScreen counts outside 3 mile radius, e.g., often differing just <50 feet 3 miles). possibly factors like rounding  (many digits retained calculations, many shown final reports via rounding /significant digits) percentile assignment method now (percentile lookup tables used, ties treated percentile lookup tables, etc.) possibly undocumented small differences calculation step","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - Key function Best starting point for comparing single-site (EJScreen API) and multisite (EJAM) results — ejscreen_vs","text":"","code":"# \\donttest{ load_all() # so it is easier to use internal functions  vs = ejscreen_vs(pts = testpoints_100, radius = 3) ejscreen_vs_explain(vs, 1:2)    # To filter that to just the ones where rounded pop disagrees  table(vs$same_shown$pop)  vspopoff <- lapply(vs, function(df) df[!vs$same_shown$pop, ])  ##  To filter that to just the ones where blockcount was identical, #   to exclude that as source of difference vs_blocksmatch = lapply(vs, function(df) df[vs$absdiff[, \"blockcount_near_site\"] == 0, ]) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"Used ejscreen_vs()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"","code":"ejscreen_vs_ejam(   latlon,   radius = 3,   fips = NULL,   shapefile = NULL,   nadrop = FALSE,   save_ejscreen_output = \"ejscreenapi_plus_out.rda\",   save_when_report = FALSE,   report_every_n = 250,   calculate_ratios = FALSE,   include_ejindexes = TRUE,   x100fix = TRUE,   x100varnames = names_pct_as_fraction_ejamit,   showdrinkingwater = TRUE,   showpctowned = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"latlon data.table data.frame colnames lat lon, one row per site radius miles, used ejamit() ejscreenapi_plus() fips FIPS code(s) counties blockgroups, using latlon radius. save_ejscreen_output set NULL FALSE avoid saving ejscreen results locally. specified valid path filename ending .rda, saves . missing, function prompt interactive R session folder use saving .rda results ejscreenapi save_when_report see ejscreenapi_plus(), save progress every often just case. report_every_n see ejscreenapi_plus() calculate_ratios passed ejscreenapi_plus() ejamit() include_ejindexes passed ejscreenapi_plus() ejamit() x100fix whether multiply x100 ejamit() outputs names_d names_d_subgroups indicator scores convert fractions 0 1 percentages 0 100, prior rounding reporting EJAM results . x100varnames optional, x100fix = TRUE, vector colnames x$EJAM convert scaled 0 1 rescaled values 0 100, outputs EJSCREEN reported percentages 0 100 0 1 EJAM. ... passed ejamit() additional parameters","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"list data frames, names EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, diff, absdiff, pctdiff, abspctdiff diff EJAM - EJSCREEN ratio EJAM / EJSCREEN pctdiff ratio - 1 abs absolute value data.frame, colnames indicators like pop, blockcount_near_site, etc. rows represent sites analyzed.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"Consider using ejscreen_vs() interactively. ejscreen_vs_ejam() ejscreen_vs_ejam_alreadyrun() used ejscreen_vs()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - compare EJScreen API vs EJAM stats at tested sites — ejscreen_vs_ejam","text":"","code":"# \\donttest{  # in RStudio, interactive:  vs <- ejscreen_vs()   # vs filtered to just the ones where rounded pop disagrees   table(vs$same_shown$pop)  vspopoff <- lapply(vs, function(x) x[!vs$same_shown$pop, ])   pts2 <- testpoints_100[1:2, ]  vs2 <- ejscreen_vs_ejam(pts2, radius = 1, save_ejscreen_output = F )   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see results at every site, for 1 INDICATOR after using ejscreen_vs_ejam() — ejscreen_vs_ejam_1var","title":"EJAM/EJSCREEN comparisons - see results at every site, for 1 INDICATOR after using ejscreen_vs_ejam() — ejscreen_vs_ejam_1var","text":"EJAM/EJSCREEN comparisons - see results every site, 1 INDICATOR using ejscreen_vs_ejam()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see results at every site, for 1 INDICATOR after using ejscreen_vs_ejam() — ejscreen_vs_ejam_1var","text":"","code":"ejscreen_vs_ejam_1var(   vs,   varname = \"pop\",   info = c(\"EJSCREEN\", \"EJAM\", \"ratio\", \"diff\", \"absdiff\", \"pctdiff\", \"abspctdiff\")[c(1,     2, 5, 6)] )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see results at every site, for 1 INDICATOR after using ejscreen_vs_ejam() — ejscreen_vs_ejam_1var","text":"vs output ejscreen_vs_ejam() ejscreen_vs() varname 1 indicator examine, colname output table ejamit(), \"pop\" info optional, vector names metrics use comparison, .e., named elements vs","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see results at every site, for 1 INDICATOR after using ejscreen_vs_ejam() — ejscreen_vs_ejam_1var","text":"data frame colnames like EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, diff, absdiff, pctdiff, etc. rows represent sites analyzed.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_bysite.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates for 1 indicator — ejscreen_vs_ejam_1var_bysite","title":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates for 1 indicator — ejscreen_vs_ejam_1var_bysite","text":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates 1 indicator","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_bysite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates for 1 indicator — ejscreen_vs_ejam_1var_bysite","text":"","code":"ejscreen_vs_ejam_1var_bysite(vs, pts, varname = \"blockcount_near_site\")"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_bysite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates for 1 indicator — ejscreen_vs_ejam_1var_bysite","text":"vs results ejscreen_vs_ejam() pts data.frame lat, lon input ejscreen_vs_ejam() varname default \"blockcount_near_site\" can \"pop\", \"Demog.Index\", etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_bysite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see 1 site/row, check estimates for 1 indicator — ejscreen_vs_ejam_1var_bysite","text":"table","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_cdf.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see cumulative distribution for 1 variable after using ejscreen_vs_ejam() Plot distribution of absolute values of Percent Differences in 1 indicator at tested sites — ejscreen_vs_ejam_1var_cdf","title":"EJAM/EJSCREEN comparisons - see cumulative distribution for 1 variable after using ejscreen_vs_ejam() Plot distribution of absolute values of Percent Differences in 1 indicator at tested sites — ejscreen_vs_ejam_1var_cdf","text":"EJAM/EJSCREEN comparisons - see cumulative distribution 1 variable using ejscreen_vs_ejam() Plot distribution absolute values Percent Differences 1 indicator tested sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_cdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see cumulative distribution for 1 variable after using ejscreen_vs_ejam() Plot distribution of absolute values of Percent Differences in 1 indicator at tested sites — ejscreen_vs_ejam_1var_cdf","text":"","code":"ejscreen_vs_ejam_1var_cdf(vs, varname = \"pop\")"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_cdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see cumulative distribution for 1 variable after using ejscreen_vs_ejam() Plot distribution of absolute values of Percent Differences in 1 indicator at tested sites — ejscreen_vs_ejam_1var_cdf","text":"vs output ejscreen_vs() similar varname like \"pop\" colnames(testoutput_ejamit_10pts_1miles$results_bysite) among colnames(ejscreen_vs_ejam(testpoints_10[1:2,], save_ejscreen_output = F ))","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_1var_cdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see cumulative distribution for 1 variable after using ejscreen_vs_ejam() Plot distribution of absolute values of Percent Differences in 1 indicator at tested sites — ejscreen_vs_ejam_1var_cdf","text":"CDF plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_alreadyrun.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","title":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","text":"Compare EJScreen API vs EJAM stats tested sites (results already run)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_alreadyrun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","text":"","code":"ejscreen_vs_ejam_alreadyrun(   apisite,   ejamsite,   nadrop = FALSE,   x100fix = TRUE,   x100varnames = names_pct_as_fraction_ejamit )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_alreadyrun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","text":"apisite table output ejscreenit()$table, ejscreenapi_plus(), also see ejscreenit_for_ejam() ejamsite table output ejamit()$results_bysite nadrop optional, whether drop indicators EJScreen API returns NA x100fix optional, whether multiply x100 names_d names_d_subgroups indicator scores convert fractions 0 1 percentages 0 100, prior rounding reporting EJAM results . x100varnames optional, x100fix = T, vector colnames x$EJAM convert scaled 0 1 rescaled values 0 100, outputs EJSCREEN reported percentages 0 100 0 1 EJAM.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_alreadyrun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","text":"prints summary console, returns invisible list tables (data frames matrix/arrays), names EJSCREEN, EJAM, EJSCREEN_shown, EJAM_shown, same_shown, ratio, diff, absdiff, pctdiff, etc. table, colnames indicators like pop, blockcount_near_site, etc. rows represent sites analyzed. @details See ejscreen_vs() complete, interactive way .","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_alreadyrun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - used by ejscreen_vs() — ejscreen_vs_ejam_alreadyrun","text":"","code":"vs = ejscreen_vs_ejam_alreadyrun(     apisite = testoutput_ejscreenapi_plus_5,     ejamsite = ejamit(testpoints_5, radius = 1, include_ejindexes = TRUE)$results_bysite)   ejscreen_vs_ejam_see1(vs, mysite = 1)  vsum = ejscreen_vs_ejam_summary(vs)"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"EJAM/EJSCREEN comparisons - see results 1 site using ejscreen_vs_ejam()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"","code":"ejscreen_vs_ejam_see1(   vs,   myvars = c(\"ejam_uniq_id\", \"pop\", names_d),   mysite = 1 )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"vs output ejscreen_vs_ejam() ejscreen_vs() myvars optional check just subset colnames found vs$EJAM vs$EJSCREEN, possible values: myvars = \"\"    # indicators output tables, .e., colnames(vs$EJAM) myvars = \"inboth\" # just ones (NA values EJAM EJSCREEN report indicator) myvars = \"bad\"    # just ones EJAM_shown EJSCREEN_shown disagree myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(vs$EJAM), value = T) mysite rownumber corresponding site interest, among 1:nrow(vs$EJAM)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"table showing one row per indicator, columns like EJSCREEN, EJAM, ratio, etc., see str() list matrix form","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"see also ejscreen_vs_ejam_1var_bysite() ejscreen_vs_explain()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - see results for 1 site after using ejscreen_vs_ejam() — ejscreen_vs_ejam_see1","text":"","code":"mysite <- 9   # \\donttest{   vs <- ejscreen_vs_ejam(testpoints_10, radius = 3)   ejscreen_vs_ejam_see1(vs, mysite = mysite,     myvars = colnames(vs$EJAM))[!is.na(vs$EJSCREEN[mysite, ]) , 1:2]   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1map.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","title":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","text":"EJAM/EJSCREEN comparisons - Try explain discrepancy pop blocks via map tables blocks near site","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","text":"","code":"ejscreen_vs_ejam_see1map(   vs,   n = 1,   overlay_blockgroups = FALSE,   radius = NULL,   map = TRUE,   extramiles2check = 0.08,   extra_blocks2check_almost_at_radius = 5,   extra_blocks2check_beyond_radius = 5,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","text":"vs results  vs <- ejscreen_vs_ejam(testpoints_10, radius = 3, include_ejindexes = TRUE) n row number vs$EJAM site check overlay_blockgroups optional, set TRUE see overlay boundaries parent blockgroups, noting click turn layer block point info popups work map set FALSE suppress drawing map still return block-level info extramiles2check miles additional radius look possible extra blocks may missed EJAM extra_blocks2check_almost_at_radius many blocks check almost far radius, addition number blockcount extra_blocks2check_beyond_radius many blocks check almost just beyond radius, addition number blockcount ... passed plotblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","text":"Just draws map shows tables returns table blocks near site info much distance pop count differ EJAM thinks actual exact radius, possible explanation discrepancy ejscreen api ejam estimate, may also want output ejscreen_vs_ejam_see1()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_see1map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - Try to explain discrepancy in pop and blocks via map and tables of blocks near a site — ejscreen_vs_ejam_see1map","text":"","code":"radius = 3; n = 3  # \\donttest{   vs <- ejscreen_vs_ejam(testpoints_10, radius = radius, include_ejindexes = TRUE)   ejscreen_vs_ejam_see1map(vs, n = n, overlay_blockgroups = TRUE)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"EJAM/EJSCREEN comparisons - see summary stats using ejscreen_vs_ejam()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"","code":"ejscreen_vs_ejam_summary(   vs = NULL,   myvars = colnames(vs$EJAM),   tol = 0.05,   prob = 0.95,   na.rm = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"vs output ejscreen_vs_ejam() myvars optional check just subset colnames found vs$EJAM vs$EJSCREEN, possible values: myvars = \"\"    # indicators output tables, .e., colnames(vs$EJAM) myvars = \"inboth\" # just ones (NA values EJAM EJSCREEN report indicator) myvars = \"bad\"    # just ones EJAM_shown EJSCREEN_shown disagree myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(vs$EJAM), value = T) tol optional, set results can said agree tolerance differ less tol percent tol expressed fraction 0 1. prob optional fraction 1 representing percentile p check absolute percentage differences. See within.x.pct..p.pct..sites value returned. na.rm needs testing, optional","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"data.frame summary stats showing counts percents analyzed sites (valid data found EJAM EJSCREEN outputs), indicating many sites agree EJSCREEN EJAM estimates, exactly reported within tolerance. Columns include \"indicator\" (variable name) \"sites..data.ejam\" many sites value EJAM given indicator? \"sites..data.neither\" many sites NA EJAM EJSCREEN? \"sites..data.\" \"sites.agree.rounded\" many sites agree (EJSCREEN vs EJAM) value shown reports? .e., reported, rounded value. \"sites.agree.within.tol\" many sites agree within tol? (.e., tol x 100 percent) \"pct..sites.agree.rounded\"  percent 0-100% sites data \"pct..sites.agree.within.tol\"  percent 0-100% sites data \"median.abs.diff\" Median sites data, absolute differences, EJAM - EJSCREEN \"max.abs.diff\" \"mean.pct.diff\" Percent difference 0-100% absolute value 100*(ratio - 1), ratio EJAM/EJSCREEN \"median.pct.diff\" 0-100% \"max.pct.diff\" 0-100% \"within.x.pct..p.pct..sites\"  X, EJAM EJSCREEN agree within X percent 0-100% better prob share sites. Prob share used last stat mean prob (e.g. 0.95) share sites absolute percentage difference estimated indicator values less equal x x one actual values abspctdiff found * 100. uses 100 * quantile(y, probs = prob, type = 1)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - see summary stats after using ejscreen_vs_ejam() — ejscreen_vs_ejam_summary","text":"","code":"radius = 3   # \\donttest{   pts <- testpoints_n(100, weighting = 'frs')    # This step can take a long time, almost 1 minute per 20 points, as it uses the EJScreen API:   vs100 <- ejscreen_vs_ejam(pts, radius = radius, include_ejindexes = TRUE)    ejscreen_vs_ejam_see1(vs100, mysite = 1)    # see site with largest % disagreement:   ejscreen_vs_ejam_see1(vs, 'pop', mysite = which.max(vs$abspctdiff$pop))    vs100$diff$blockcount_near_site   sum100 <- ejscreen_vs_ejam_summary(vs100, tol = 0.01)   s100 <- sum100[ , c(1, 6:12)]    s100[s100$indicator %in% names_e, ]   s100[s100$indicator %in% names_d, ]   s100[s100$indicator %in% names_these, ]   s100[s100$indicator %in% c(names_ej_pctile, names_ej_state_pctile,     names_ej_supp_pctile, names_ej_supp_state_pctile), ]    sum100_within5pct <- ejscreen_vs_ejam_summary(vs100, tol = 0.05)   sum100_within5pct[sum100_within5pct$indicator %in% names_these, ][ , c(1, 6:12)]    ## longer analysis (45 minutes perhaps)   # This step can take a long time, almost 1 minute per 20 points, as it uses the EJScreen API:   # pts <- testpoints_n(1000, weighting = 'frs')   # vs1000pts3miles <- ejscreen_vs_ejam(pts, radius = 3, include_ejindexes = TRUE)   # sum_vs1000pts3miles <- ejscreen_vs_ejam_summary(vs1000pts3miles)    # }"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_byvarlist.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see summary stats after ejscreen_vs_ejam() for JUST 1 VARLIST at a time, just 2-3 key stats What percent of sites have agreement to +-1%? etc. — ejscreen_vs_ejam_summary_byvarlist","title":"EJAM/EJSCREEN comparisons - see summary stats after ejscreen_vs_ejam() for JUST 1 VARLIST at a time, just 2-3 key stats What percent of sites have agreement to +-1%? etc. — ejscreen_vs_ejam_summary_byvarlist","text":"EJAM/EJSCREEN comparisons - see summary stats ejscreen_vs_ejam() JUST 1 VARLIST time, just 2-3 key stats percent sites agreement +-1%? etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_byvarlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see summary stats after ejscreen_vs_ejam() for JUST 1 VARLIST at a time, just 2-3 key stats What percent of sites have agreement to +-1%? etc. — ejscreen_vs_ejam_summary_byvarlist","text":"","code":"ejscreen_vs_ejam_summary_byvarlist(   vs = NULL,   vsum = NULL,   myvars = colnames(vs$EJAM),   tol = 0.01 )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_byvarlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see summary stats after ejscreen_vs_ejam() for JUST 1 VARLIST at a time, just 2-3 key stats What percent of sites have agreement to +-1%? etc. — ejscreen_vs_ejam_summary_byvarlist","text":"vs ejscreen_vs() can provided (vsum provided) vsum ejscreen_vs_ejam_summary() can provided vs tol ignored already defined creating vsum tol fraction 1, percentage tolerance agreement 0.01 means agree +/-1%","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_byvarlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see summary stats after ejscreen_vs_ejam() for JUST 1 VARLIST at a time, just 2-3 key stats What percent of sites have agreement to +-1%? etc. — ejscreen_vs_ejam_summary_byvarlist","text":"table rounded metrics like percent sites agree within 1%? returned invisibly long list indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"EJAM/EJSCREEN comparisons - see quantiles tested sites, stat like ratio EJAM/EJSCREEN","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"","code":"ejscreen_vs_ejam_summary_quantiles(   vs,   mystat = c(\"ratio\", \"diff\", \"absdiff\", \"pctdiff\", \"abspctdiff\")[1],   myvars = c(\"pop\", names_these),   probs = (0:20)/20,   na.rm = TRUE,   digits = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"vs output ejscreen_vs_ejam() mystat just one (1) : \"ratio\", \"diff\", \"absdiff\", \"pctdiff\", \"abspctdiff\" myvars optional vector indicators, check just subset colnames found vs$EJAM vs$EJSCREEN, myvars = c(names_d, names_d_subgroups) myvars = grep(\"pctile\", colnames(vs$EJAM), value = T) probs optional vector probabilities 0 1 pass quantile() na.rm optional, leave default TRUE digits round results many digits","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_ejam_summary_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - see quantiles over tested sites, of a stat like ratio of EJAM/EJSCREEN — ejscreen_vs_ejam_summary_quantiles","text":"table percentiles across analyzed locations, stat like ratio EJAM estimates EJSCREEN estimates, specified list indicators like names_d","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - loop or interactively step through sites to see which blocks may explain difference in population count — ejscreen_vs_explain","title":"EJAM/EJSCREEN comparisons - loop or interactively step through sites to see which blocks may explain difference in population count — ejscreen_vs_explain","text":"EJAM/EJSCREEN comparisons - loop interactively step sites see blocks may explain difference population count","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - loop or interactively step through sites to see which blocks may explain difference in population count — ejscreen_vs_explain","text":"","code":"ejscreen_vs_explain(   vs,   ejam_uniq_id = NULL,   pause_on_each_site = TRUE,   onlyifpopdiffers = TRUE,   map = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - loop or interactively step through sites to see which blocks may explain difference in population count — ejscreen_vs_explain","text":"vs output ejscreen_vs_ejam() ejscreen_vs() pause_on_each_site set FALSE avoid tapping key advance next one onlyifpopdiffers set FALSE map show table ones population counts agreed zero decimal places map set FALSE suppress drawing map still return block-level info","code":""},{"path":[]},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","title":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","text":"EJAM/EJSCREEN comparisons - Summarize explanations discrepancies pop Summarize output ejscreen_vs_explain()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","text":"","code":"ejscreen_vs_explain_summary(   whyall,   radius = \"analyzed radius\",   showmeters = TRUE,   showpop = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","text":"whyall Output ejscreen_vs_explain() radius optional radius miles, labels plot table showmeters set FALSE hide CDF plot stats table quantiles meters (note creates 1 plot click back arrow plots pane see rest) showpop set FALSE hide CDF plot quantiles pop counts","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","text":"summary table info, many sites type explanation","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/ejscreen_vs_explain_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EJAM/EJSCREEN comparisons - Summarize explanations for discrepancies in pop Summarize output of ejscreen_vs_explain() — ejscreen_vs_explain_summary","text":"","code":"vs10 <- ejscreen_vs_ejam(           testpoints_10, radius = 3,           save_ejscreen_output = F,           save_when_report = F,           calculate_ratios = F         ) why10 <- ejscreen_vs_explain(vs10, ejam_uniq_id = 1:10, pause_on_each_site = F) whysum <- ejscreen_vs_explain_summary(why10, radius = 3)"},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"epa_programs (DATA) named vector with program counts — epa_programs","title":"epa_programs (DATA) named vector with program counts — epa_programs","text":"Named vector EPA programs facility count .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"epa_programs (DATA) named vector with program counts — epa_programs","text":"","code":"epa_programs"},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"epa_programs (DATA) named vector with program counts — epa_programs","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"epa_programs (DATA) named vector with program counts — epa_programs","text":"Also see EPA documentation describing program code aka data source. 2021-05/frs_program_abbreviations_and_names.xlsx Also see frs_by_programid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs_defined.html","id":null,"dir":"Reference","previous_headings":"","what":"Full names and definitions for acronyms of EPA programs in Facility Registry Services (FRS) — epa_programs_defined","title":"Full names and definitions for acronyms of EPA programs in Facility Registry Services (FRS) — epa_programs_defined","text":"Full names definitions acronyms EPA programs Facility Registry Services (FRS)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs_defined.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Full names and definitions for acronyms of EPA programs in Facility Registry Services (FRS) — epa_programs_defined","text":"","code":"epa_programs_defined"},{"path":"https://usepa.github.io/EJAM-open/reference/epa_programs_defined.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Full names and definitions for acronyms of EPA programs in Facility Registry Services (FRS) — epa_programs_defined","text":"object class data.frame 99 rows 3 columns.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/expand_gridMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","title":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","text":"function similar expand.grid, sense returns matrix 2 columns, one input, one row per combination, cycling first field first. differs expand.grid returns matrix data.frame, accepts two parameters creating two columns, now, lacks parameters expand.grid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/expand_gridMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","text":"","code":"expand_gridMatrix(x, y)"},{"path":"https://usepa.github.io/EJAM-open/reference/expand_gridMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","text":"x required vector y required vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/expand_gridMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","text":"function returns matrix tries assign colnames based two input parameters. variables, uses names colnames. Otherwise uses \"x\" \"y\" colnames.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/expand_gridMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility similar to expand.grid, but returns a matrix not data.frame — expand_gridMatrix","text":"","code":"expand_gridMatrix(99:103, 1:2)   zz <- 1:10; top <- 1:2  expand_gridMatrix(zz, top)"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"Create full demog. envt. HTML table indicator rows","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"","code":"fill_tbl_full(   output_df,   title = \"EJScreen environmental and socioeconomic indicators data\",   title_top_row = \"\",   show_ratios_in_report = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full demog. or envt. HTML table of indicator rows — fill_tbl_full","text":"output_df, single row results table doaggregate - either results_overall one row bysite title Text overall title report table title_top_row text upper left cell, header row. Can blank, e.g., 'SELECTED VARIABLES' show_ratios_in_report logical, whether add columns ratios US State overall values","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_ej.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"Create full EJ + EJ supp index HTML table indicator rows","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_ej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"","code":"fill_tbl_full_ej(   output_df,   title = \"EJScreen environmental and socioeconomic indicators data\",   title_top_row = \"\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_ej.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full EJ + EJ supp index HTML table of indicator rows — fill_tbl_full_ej","text":"output_df, single row results table doaggregate - either results_overall one row bysite title Text overall title report table title_top_row text upper left cell, header row. Can blank, e.g., 'SELECTED VARIABLES'","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Create full demog subgroup/ language/ health/ community/ etc. HTML table of indicator rows — fill_tbl_full_subgroups","title":"Create full demog subgroup/ language/ health/ community/ etc. HTML table of indicator rows — fill_tbl_full_subgroups","text":"Create full demog subgroup/ language/ health/ community/ etc. HTML table indicator rows","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create full demog subgroup/ language/ health/ community/ etc. HTML table of indicator rows — fill_tbl_full_subgroups","text":"","code":"fill_tbl_full_subgroups(   output_df,   extratable_title = \"\",   extratable_title_top_row = \"ADDITIONAL INFORMATION\",   list_of_sections = NULL,   extratable_show_ratios_in_report = TRUE,   hide_missing_rows_for = names_d_language )"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_full_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create full demog subgroup/ language/ health/ community/ etc. HTML table of indicator rows — fill_tbl_full_subgroups","text":"output_df single row results table doaggregate possibly ejamit(), either $results_overall one row $results_bysite, colnames indicators like pop, pctpoor, etc. extratable_title Text overall title text report table, actual table table extratable_title_top_row title text inside top left cell table, header row list_of_sections named list vectors, name text phrase title section table, vector vector colnames output_df indicators show section. extratable_show_ratios_in_report logical, whether add columns ratios US State overall values hide_missing_rows_for indicators named vector, leave rows table raw value NA, many names_d_language","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"Write demog. envt. indicator html table row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"","code":"fill_tbl_row(output_df, Rname, longname, show_ratios_in_report)"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a demog. or envt. indicator to an html table row — fill_tbl_row","text":"output_df, single row results table doaggregate - either results_overall one row bysite Rname, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' longname, nicer name indicator use table row; can include HTML sub/superscripts show_ratios_in_report logical, whether add columns ratios US State overall values","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_ej.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"Write EJ EJ supp index html table row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_ej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"","code":"fill_tbl_row_ej(output_df, Rname, longname)"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_ej.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an EJ or EJ supp index to an html table row — fill_tbl_row_ej","text":"output_df, single row results table doaggregate - either results_overall one row bysite Rname, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' longname, nicer name indicator use table row; can include HTML sub/superscripts","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a residential population subgroup indicator to an html table row — fill_tbl_row_subgroups","title":"Write a residential population subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"Write residential population subgroup indicator html table row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a residential population subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"","code":"fill_tbl_row_subgroups(   output_df,   Rname,   longname,   extratable_show_ratios_in_report )"},{"path":"https://usepa.github.io/EJAM-open/reference/fill_tbl_row_subgroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a residential population subgroup indicator to an html table row — fill_tbl_row_subgroups","text":"output_df, single row results table doaggregate - either results_overall one row bysite Rname, variable name indicator pull results, 'pm', 'pctlowinc', 'Demog.Index' longname, nicer name indicator use table row; can include HTML sub/superscripts extratable_show_ratios_in_report logical, whether add columns ratios US State overall values","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get county names from county FIPS codes — fips2countyname","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"FIPS - Get county names county FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"","code":"fips2countyname(fips, includestate = c(\"ST\", \"Statename\", \"\")[1])"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"fips vector US Census FIPS codes Counties (5 digits ). can string numeric, without leading zeroes. includestate can ST, Statename, \"\", TRUE specify anything comes county name comma","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"vector county names, optionally comma 2-character abbreviation full state name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"NOTE ISLAND AREAS WORK DIFFERENTLY SINCE FIPS QUITE LIKE COUNTY FIPS FIRST 5 LETTERS FIPS UNIQUE \"COUNTY\" CODE Northern Mariana Islands","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2countyname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get county names from county FIPS codes — fips2countyname","text":"","code":"# names of all counties in ME and NY   fips2countyname(fips_counties_from_state_abbrev(c(\"ME\", \"NY\")), includestate = \"ST\")    fips_counties_from_state_abbrev(c(\"AK\", \"LA\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2name.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get county or state names from county or state FIPS codes — fips2name","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"FIPS - Get county state names county state FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"","code":"fips2name(fips, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"fips vector US Census FIPS codes States (2 digits required leading zeroes included) Counties (5) City/town/CDP (7) Tracts (11) Blockgroups (12) Can string numeric, without leading zeroes. ... passed fips2countyname() control whether appends something like , NY , New York county name","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"vector state /county names, county names optionally comma 2-character abbreviation full state name.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fips2name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get county or state names from county or state FIPS codes — fips2name","text":"","code":"fips2name(fips_counties_from_state_abbrev(c(\"AK\", \"LA\"))  )   fips2name(c(22, 02013))  # can have mix where some are a whole state and others are a county."},{"path":"https://usepa.github.io/EJAM-open/reference/fips2pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population counts (ACS EJScreen) by FIPS Utility to aggregate just population count for each FIPS Census unit — fips2pop","title":"Get population counts (ACS EJScreen) by FIPS Utility to aggregate just population count for each FIPS Census unit — fips2pop","text":"Get population counts (ACS EJScreen) FIPS Utility aggregate just population count FIPS Census unit","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population counts (ACS EJScreen) by FIPS Utility to aggregate just population count for each FIPS Census unit — fips2pop","text":"","code":"fips2pop(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population counts (ACS EJScreen) by FIPS Utility to aggregate just population count for each FIPS Census unit — fips2pop","text":"fips vector fips (can state, county, tract, blockgroup, block). block, estimates using weights like aggregating report. city/cdp, returns NA currently since pop counts blockgroupstats.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population counts (ACS EJScreen) by FIPS Utility to aggregate just population count for each FIPS Census unit — fips2pop","text":"vector population counts length fips vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state names from any type of FIPS codes — fips2statename","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"FIPS - Get state names type FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"","code":"fips2statename(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"fips vector FIPS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"vector state names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state names from any type of FIPS codes — fips2statename","text":"","code":"cbind(fips_lead_zero(1:80), fips2state_abbrev(1:80), fips2statename(1:80))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"FIPS - Get state abbreviations type FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"","code":"fips2state_abbrev(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"fips vector FIPS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"vector abbreviations like \"NY\", \"LA\", \"DE\", etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state abbreviations from any type of FIPS codes — fips2state_abbrev","text":"","code":"cbind(     stfips    = fips_lead_zero(1:80),     ST     = fips2state_abbrev(1:80),     statename = fips2statename(1:80)   )"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"FIPS - Get state FIPS codes type FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"","code":"fips2state_fips(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"fips vector FIPS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"vector State FIPS 2 characters ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"Tells State contains County (tract blockgroup block)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips2state_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state FIPS codes from any type of FIPS codes — fips2state_fips","text":"","code":"fips2state_fips(fips_counties_from_statename(c(\"Delaware\", \"Rhode Island\")))"},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"FIPS - Identify type Census geography FIPS code seems (block, county, etc.)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"","code":"fipstype(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"fips vector one Census FIPS without leading zeroes, strings numeric","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"vector types: \"block\", \"blockgroup\", \"tract\", \"city\", \"county\", \"state\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"NOTE: check fips real fips. , use fips_valid() Note number length 11 ambiguous case able resolve either complete tract fips blockgroup fips missing leading zero.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fipstype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Identify what type of Census geography each FIPS code seems to be (block, county, etc.) — fipstype","text":"","code":"fips_counties_from_statename(\"Delaware\")  fipstype(9001)  fipstype(\"10001\")   test_tract_missing0 =   4013116500   # 10 digits tract missing 0 test_tract_good     = \"04013116500\"  # 11 digits full tract includes leading 0 !!!!!!!!!! test_bg_missing0    =   40131165002  # 11 digits blockgroup missing leading 0 !!!!!!!!!! test_bg_good        = \"040131165002\" # 12 digits full blockgroup  fipstype(test_tract_missing0) fipstype(test_tract_good) fipstype(test_bg_missing0) fipstype(test_bg_good)  fips_valid(test_tract_missing0) fips_valid(test_bg_missing0)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"Convert FIPS codes FIPS blockgroups among within containing FIPS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"","code":"fips_bgs_in_fips(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"fips vector US FIPS codes, character numeric, without leading zeroes, many characters","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"vector blockgroup FIPS (NA values) may much longer vector fips passed function.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"way get list blockgroups, specified state/county/tract even block. Takes vector one FIPS State (2-digit), County (5-digit), Tract (11-digit), blockgroup (12 digit), even block (15-digit fips). Returns unique vector FIPS US blockgroups (including DC Puerto Rico) contain specified blocks, equal specified blockgroup fips, contained within provided tract/county/state FIPS.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fips_bgs_in_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get unique blockgroup fips in or containing specified fips of any type — fips_bgs_in_fips","text":"","code":"# all blockgroups in one state   fips_counties_from_state_abbrev(\"DE\")   fips_bgs_in_fips( fips_counties_from_state_abbrev(\"DE\") )    blockgroupstats[,.N,by=substr(bgfips,1,2)]   length(fips_bgs_in_fips(\"72\"))    # all blockgroups in this one county   fips_bgs_in_fips(30001)   fips_bgs_in_fips(\"30001\")   fips_bgs_in_fips(fips_counties_from_statename(\"Rhode Island\")[1])    # all blockgroups that contain any of these 6 blocks (i.e., just one bg)   ## dataload_dynamic(\"blockid2fips\") # very large file to avoid using unless essential   ## x = blockid2fips$blockfips[1:6]    x = c(\"010010201001000\", \"010010201001001\", \"010010201001002\",    \"010010201001003\", \"010010201001004\", \"010010201001005\")   fips_bgs_in_fips(x)    # 2 counties   fips_bgs_in_fips(c(36009,36011))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countyname.html","id":null,"dir":"Reference","previous_headings":"","what":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","title":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","text":"get FIPS county based part countyname state abbrev","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countyname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","text":"","code":"fips_counties_from_countyname(countyname_start, ST = NULL, exact = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countyname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","text":"countyname_start first letters countyname look via grep(\"^x\", ) like \"Johnson\" \"Johnson County\". Ignores case. ST two letter abbreviation State, \"TX\" – Can omitted 1st parameter full name ST like \"Harris County, TX\". Ignores case. exact TRUE requires exact matches, FALSE allow partial matches means first letters match (using grep), case outputs might differ inputs length 1--1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countyname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","text":"county FIPS (5 digits long leading zero needed, character) can return one guess per input name!","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countyname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get FIPS for a county based on part of the countyname and state abbrev — fips_counties_from_countyname","text":"","code":"fips2name(fips_counties_from_countyname(\"Har\", \"TX\")) # finds 5 matches  fips_counties_from_countyname(\"Har\",               \"TX\")    # finds 5  matches  fips_counties_from_countyname(\"Harris\",            \"TX\")    # finds 2 matches  fips_counties_from_countyname(\"Harris \",           \"TX\")    # finds 1 match  fips_counties_from_countyname(\"Harris County\",     \"TX\")    # same  fips_counties_from_countyname(\"harris county, tx\", \"TX\")    # same  fips_counties_from_countyname(\"Harris County, Texas\", \"TX\") # finds 0 if state spelled out  fips_counties_from_countyname(\"harris county, tx\") # can omit ST param like this  fips_counties_from_countyname(\"Harris County TX\")  # needs comma"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countynamefull.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - get county FIPS from exact countyname including, ST abbrev used by fips_counties_from_countyname() — fips_counties_from_countynamefull","title":"helper function - get county FIPS from exact countyname including, ST abbrev used by fips_counties_from_countyname() — fips_counties_from_countynamefull","text":"helper function - get county FIPS exact countyname including, ST abbrev used fips_counties_from_countyname()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countynamefull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - get county FIPS from exact countyname including, ST abbrev used by fips_counties_from_countyname() — fips_counties_from_countynamefull","text":"","code":"fips_counties_from_countynamefull(fullname, exact = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countynamefull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - get county FIPS from exact countyname including, ST abbrev used by fips_counties_from_countyname() — fips_counties_from_countynamefull","text":"fullname exact (case-insensitive) name county comma state abbreviation, like \"Johnson County, TX\". Ignores case. exact set FALSE use grep, can return one per input","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_countynamefull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - get county FIPS from exact countyname including, ST abbrev used by fips_counties_from_countyname() — fips_counties_from_countynamefull","text":"county FIPS (5 digits long leading zero needed, character) , NA non matches","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"FIPS - Get county fips specified states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"","code":"fips_counties_from_statefips(statefips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"statefips vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\") c(10,44)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"similar list_counties(state) tigris package.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statefips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statefips","text":"","code":"fips_counties_from_statefips(c(10,44,44))   fips_counties_from_statefips(\"10\")"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"FIPS - Get county fips specified states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"","code":"fips_counties_from_statename(statename)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"statename vector state names like c(\"New York\",\"Georgia\"), ignoring case","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_statename","text":"","code":"fips_counties_from_statename(\"Delaware\")"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"FIPS - Get county fips specified states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"","code":"fips_counties_from_state_abbrev(ST)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"ST vector state abbreviations like c(\"NY\",\"GA\"), ignoring case","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"vector 5-digit character string county FIPS unique counties states","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_counties_from_state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get ALL county fips in specified states — fips_counties_from_state_abbrev","text":"","code":"fips_counties_from_state_abbrev(\"DE\")   fips_counties_from_state_abbrev(\"RI\", \"RI\")"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_from_table.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"Just read codes one column table obtained something like read.csv, excel, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_from_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"","code":"fips_from_table(fips_table, addleadzeroes = TRUE, inshiny = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_from_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"fips_table data.frame data.table FIPS codes counties, states, tracts, example, column whose name can interpreted FIPS (one aliases like fips, countyfips, etc.) Aliases : c(\"FIPS\", \"fips\", \"fips_code\", \"fipscode\", \"Fips\", \"statefips\", \"countyfips\", \"ST_FIPS\", \"st_fips\", \"ST_FIPS\", \"st_fips\", \"FIPS.ST\", \"FIPS.COUNTY\", \"FIPS.TRACT\") addleadzeroes whether add leading zeroes needed State whose FIPS starts \"01\" inshiny used server shiny app","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_from_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"vector fips codes","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fips_from_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Read and clean FIPS column from a table, after inferring which col it is — fips_from_table","text":"","code":"fips_from_table( data.frame(countyfips=0, FIPS=1, bgfips=2, other=3, fips=4))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_lead_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"Ensures FIPS leading zero, VALIDATE FIPS - check FIPS valid checking length. fips state, county, tract, blockgroup, block FIPS code.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_lead_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"","code":"fips_lead_zero(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_lead_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"fips vector numeric character US FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_lead_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"vector length","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fips_lead_zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Add leading zeroes to fips codes if missing, replace with NA if length invalid — fips_lead_zero","text":"","code":"testfips1 <- c(1,\"01\",1234,\"1234\",\"12345\",123456) testfips <- c(1, \"1\", \"12\", \"123\", \"1234\", \"12345\", \"\", NA, \"words\") fips_lead_zero(testfips1) fips_lead_zero(testfips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_place_from_placename.html","id":null,"dir":"Reference","previous_headings":"","what":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","title":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","text":"search using names cities, towns, etc. try find matches get FIPS helper used name2fips()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_place_from_placename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","text":"","code":"fips_place_from_placename(   place_st,   geocoding = FALSE,   exact = FALSE,   usegrep = FALSE,   verbose = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_place_from_placename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","text":"place_st vector place names format like \"yonkers, ny\" \"Chelsea city, MA\" geocoding set TRUE use geocoding service try find hits exact FALSE allow partial matching usegrep DRAFT PARAM exact=T, usegrep TRUE use helper function fips_place_from_placename_grep() verbose prints console possible hits queried place name","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_place_from_placename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","text":"prints table possible hits returns just vector fips","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_place_from_placename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"search using names of cities, towns, etc. to try to find matches and get FIPS helper used by name2fips() — fips_place_from_placename","text":"helper used name2fips() Finding places name tricky master list censusplaces names places using words city, town, township, village, borrough, CDP people think include qualifier part query. Also, 300 places like \"Salt Lake City\" word \"City\" essential part actual name, listed table format, \"Salt Lake City city\" Also, cases exact town township name occurs State query name state always naming unique place. function currently distinguish . relatively rare - 38,000 place names, fewer 600 unique place-state pairs appear , fewer 150 appear twice state. Cases 4+ duplicates state arise towns townships. Chula Vista CDP, TX San Antonio comunidad, PR occur three times. duplicates CDP, borough, etc. occurs twice state. Almost duplicates PA, WI, MI MN. Pennsylvania particular many frequently reused township names: state, place names occur 15 times : Franklin township, Union township, Washington township, Jackson township. 500 unique name-state pairs reused within state.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_st2eparegion.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"FIPS - Get EPA Region number state FIPS code","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_st2eparegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"","code":"fips_st2eparegion(stfips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_st2eparegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"stfips vector one state fips codes (numbers strings)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_st2eparegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get EPA Region number from state FIPS code — fips_st2eparegion","text":"vector numbers representing US EPA Regions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_states_in_eparegion.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","title":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","text":"FIPS - Get state fips States EPA Region(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_states_in_eparegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","text":"","code":"fips_states_in_eparegion(region)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_states_in_eparegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","text":"region vector 1 EPA Regions (numbers 1 10)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_states_in_eparegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","text":"vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\"), length input, including duplicates","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_states_in_eparegion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state fips for all States in EPA Region(s) — fips_states_in_eparegion","text":"","code":"fips_states_in_eparegion(2)   fips_states_in_eparegion(6)   fips2state_abbrev(fips_states_in_eparegion(6))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_statename.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state fips for each state name — fips_state_from_statename","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"FIPS - Get state fips state name","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"","code":"fips_state_from_statename(statename)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"statename vector state names like c(\"New York\",\"Georgia\"), ignoring case. Converts ST statename case abbreviations provided instead name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\"), length input, including duplicates","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state fips for each state name — fips_state_from_statename","text":"","code":"fips_state_from_statename(\"Delaware\")   fips_state_from_statename(c(\"dc\", 'district of columbia', 'georgia'))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_state_abbrev.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"FIPS - Get state fips state abbrev","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_state_abbrev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"","code":"fips_state_from_state_abbrev(ST)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_state_abbrev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"ST vector state abbreviations like c(\"NY\",\"GA\"), ignores case. Converts statename ST case names provided instead ST.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_state_abbrev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"vector 2-digit state FIPS codes like c(\"10\", \"44\", \"44\"), length input, including duplicates","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_state_from_state_abbrev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Get state fips for each state abbrev — fips_state_from_state_abbrev","text":"","code":"fips_state_from_state_abbrev(c(\"DE\", \"DE\", \"RI\", 'new jersey'))"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"check if FIPS code is valid, meaning it is an actual Census FIPS code for a State, County, City/CDP, etc. — fips_valid","title":"check if FIPS code is valid, meaning it is an actual Census FIPS code for a State, County, City/CDP, etc. — fips_valid","text":"check FIPS code valid, meaning actual Census FIPS code State, County, City/CDP, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if FIPS code is valid, meaning it is an actual Census FIPS code for a State, County, City/CDP, etc. — fips_valid","text":"","code":"fips_valid(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/fips_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if FIPS code is valid, meaning it is an actual Census FIPS code for a State, County, City/CDP, etc. — fips_valid","text":"fips vector numeric character fips. works state, county, city/cdp, tract, blockgroup block fips.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fips_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if FIPS code is valid, meaning it is an actual Census FIPS code for a State, County, City/CDP, etc. — fips_valid","text":"logical vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to rename variables that are colnames of data.frame — fixcolnames","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"Changes variable names like colnames long plain-English headers short labels plots","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"","code":"fixcolnames(namesnow, oldtype = \"csvname\", newtype = \"r\", mapping_for_names)"},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"namesnow vector colnames renamed oldtype \"longname\" \"shortname\", \"csv\" \"r\" \"api\", etc. colname map_headernames, used one known types specified. newtype \"longname\" \"shortname\", \"csv\" \"r\" \"api\", etc. colname map_headernames, used one known types specified. mapping_for_names default dataset already package.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"Vector new column names length input","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"specify alias type like \"api\", \"r\", \"long\", \"short\", one colnames(map_headernames) like \"rname\", \"vartype\", \"decimals\", \"varlist\", etc. Also, can use extract info map_headernames (called mapping_for_names). NOTE: ask rename words known type like rname apiname, namesnow found among oldtype, renamed, returned unchanged. , specify newtype column known type name, like \"varcategory\" instead return empty string namesnow found among oldtype. way really seeking new name, rename, keeps old name really seeking metadata like category , returns blank old name found . key column names map_headernames table: \"shortname\" (aka \"short\", plot labels, etc.) \"longname\" (aka \"long\", full explanatory headers use table) \"rname\" (aka \"r\", R variable names used EJAM code) \"apiname\" (aka \"api\", returned EJScreen API) \"csvname\" (aka \"csv\", found CSV files just key residential population environmental indicators, found EJScreen FTP site) \"acsname\" (aka \"acs\", found ACS data file internally used EJScreen, containing extra residential population groups indicators stored CSV files EJScreen FTP site) \"DEJ\" (whether indicator residential population, environmental, etc.) \"varlist\" (group names variable , \"names_d\", \"names_d_subgroups\", \"names_d_state_pctile\", etc.) \"calculation_type\" (aggregated block groups, \"wtdmean\", \"sum counts\", etc.) \"denominator\" (weight use aggregating wtdmean, normally count variable universe percentage, \"pop\", \"hhlds\", etc.)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function to rename variables that are colnames of data.frame — fixcolnames","text":"","code":"# see package tests     names_d  namesbyvarlist('names_d')  x = varinfo(\"pctlowinc\")  x = varinfo(\"pcthisp\")     # see the different names for the same variable,   # and see it is not in the csv tables on the FTP site  varinfo(\"pcthisp\", c(\"csvname\", \"acsname\", \"apiname\"))   # EJAM:::names_whichlist(\"RAW_D_INCOME\")  fixcolnames(c(\"RAW_D_INCOME\", \"S_D_LIFEEXP\"), 'api')  fixcolnames('LOWINCPCT', 'csv')  fixcolnames(c(\"PCT_HISP\", \"HISP\"), 'acs')  fixcolnames(c(\"RAW_D_INCOME\", \"S_D_LIFEEXP\"), newtype = \"longname\")   addmargins(table(map_headernames$vartype, map_headernames$DEJ))      # the columns \"newsort\" and \"reportsort\" provide useful sort orders   x <- map_headernames$rname[map_headernames$varlist == \"names_d\"]   # same as       print(\"original order\"); print(x)    x <-  sample(x, length(x), replace = FALSE)      print(\"out of order\"); print(x)   print(\"fixed order\")   x[ order(fixcolnames(x, oldtype = \"r\", newtype = \"newsort\")) ]"},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":null,"dir":"Reference","previous_headings":"","what":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"Given names_d, e.g., returns names_d_ratio_to_state_avg","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"","code":"fixcolnames2related(   namesnow,   relatedtype = c(\"usavg\", \"stateavg\", \"uspctile\", \"statepctile\", \"usratio\",     \"stateratio\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"namesnow vector one basic Envt Demog indicator variable names found c(names_e, names_d, names_d_subgroups) relatedtype One \"usavg\", \"stateavg\", \"uspctile\", \"statepctile\", \"usratio\", \"stateratio\" (values among unique(map_headernames$vartype) since give ambiguous answers).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"vector long namesnow (just returns namesnow relatedtype invalid)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"Given basic variable name(s) like \"pctlowinc\" names_e, see related variable names storing US State percentiles, averages, ratios averages given variables. works variable names among : c(names_e, names_d, names_d_subgroups)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames2related.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get name of related avg, pctile, or ratio variable name — fixcolnames2related","text":"","code":"names_d fixcolnames2related(names_d, 'stateratio') names_d_ratio_to_state_avg fixcolnames2related(names_e, \"stateavg\") fixcolnames2related(names_e, \"usvag\") paste0(\"avg.\", names_e) fixcolnames2related(names_e, \"usratio\") # names_ej # does not work with this as input # fixcolnames2related(names_ej, \"uspctile\") # does not return names_ej_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","title":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","text":"convert colnames standardized names, via aliases, change best match standard name Used address_from_table()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","text":"","code":"fixcolnames_infer(   currentnames,   alias_list = list(lat = lat_alias, lon = lon_alias, address = c(\"address\"), street =     c(\"street\", \"street address\", \"address1\", \"address 1\"), city = c(\"city\", \"cityname\",     \"city name\"), state = c(\"state\", \"mystate\", \"statename\", \"ST\"), zip = c(\"zip\",     \"zipcode\", \"zip code\")),   ignore.case = TRUE,   verbose = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","text":"currentnames vector colnames may include aliases alias_list optional named list names standard colnames like \"street\" named element list vector aliases standard name ignore.case whether ignore case matching aliases verbose set TRUE testing/ check function ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","text":"vector like currentnames renamed standard name alias found, ignoring case.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixcolnames_infer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert colnames to standardized names, via aliases, but change only best match for each standard name Used by address_from_table() — fixcolnames_infer","text":"fixcolnames_infer() fixnames_aliases() similar. latlon_infer() also similar. fixcolnames_infer() designed figure data.frame one column best guess (top pick) used \"lat\" column, example, several colnames matches one preferred name, based alias_list, function picks one rename preferred canonical name, leaving others -. contrast , fixnames_aliases() general every input element can matched canonical name gets changed preferred version, even multiple input names different aliases \"lat\", example, get changed \"lat.\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixmapheadernamescolname.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","title":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","text":"utility convert aliases proper colnames map_headernames used varinfo() fixcolnames()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixmapheadernamescolname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","text":"","code":"fixmapheadernamescolname(   x,   alias_list = list(rname = \"r\", longname = c(\"long\", \"longnames\", \"full\",     \"description\"), shortlabel = c(\"short\", \"shortname\", \"shortnames\", \"labels\",     \"label\"), acsname = \"acs\", apiname = \"api\", csvname = c(\"csv\"), oldname =     c(\"original\", \"old\", \"oldnames\")) )"},{"path":"https://usepa.github.io/EJAM-open/reference/fixmapheadernamescolname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","text":"x character vector colnames map_headernames, aliases like \"long\" alias_list optional named list canonical names (colnames map_headernames) names vectors alternative names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixmapheadernamescolname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","text":"vector aliases replaced actual colnames unmatched ones left -","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixmapheadernamescolname.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to convert aliases to proper colnames of map_headernames used by varinfo() and fixcolnames() — fixmapheadernamescolname","text":"","code":"fixmapheadernamescolname(c('long', 'csv', 'api', 'r'))"},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames.html","id":null,"dir":"Reference","previous_headings":"","what":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","title":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","text":"Changes column names R variable names original API names FTP site file","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","text":"","code":"fixnames(namesnow, oldtype = \"api\", newtype = \"r\", mapping_for_names)"},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","text":"namesnow vector colnames (can data.frame data.table ) oldtype friendly long original, csv r api newtype friendly long original, csv r api mapping_for_names data.frame passed fixnames() work.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","text":"Vector new column names length input. function return entire renamed df dt. Just new colnames returned.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"like fixcolnames(), a helper function to rename variables that are colnames of data.frame — fixnames","text":"CAN SPECIFY TYPE USING ALIAS LIKE \"api\" \"long\" UNLIKE fixnames_to_type() specify actual colnames map_headernames, like \"apiname\" NOTE: happen pass entire data.frame data.table function, instead passing just colnames, function see still return just vector new colnames","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert terms to standardized terms based on synonyms — fixnames_aliases","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"Convert terms standardized terms based synonyms","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"","code":"fixnames_aliases(   x,   na_if_no_match = FALSE,   alias_list = NULL,   ignore.case = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"x vector terms, colnames(testpoints_10), etc. na_if_no_match optional, set TRUE want return NA element x found alias_list info alias_list built-already source code (can replace using optional parameter), list named vectors names standard, preferred, canonical versions terms, vector set aliases term. ignore.case optional set FALSE want ignore case","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"character vector like x may replaced standardized versions elements x, NA appropriate","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"fixcolnames_infer() fixnames_aliases() similar. fixcolnames_infer() designed figure data.frame one column best guess (top pick) used \"lat\" column, example, several colnames matches based alias_list, function picks one rename preferred canonical name, leaving others -. contrast , fixnames_aliases() general every input element can matched canonical name gets changed preferred version, even multiple input names different aliases \"lat\", example, get changed \"lat.\" alias_list example :","code":"alias_list <- list(   sqkm = c('km2', 'kilometer2','kilometers2', 'sq kilometers', 'sq kilometer',    'sqkilometers', 'sqkilometer',  'squarekilometers', 'squarekilometer',    'square kilometers', 'square kilometer'),   sqm = c('m2', 'meter2','meters2', 'sq meters', 'sq meter','sqmeters', 'sqmeter',   'squaremeters', 'squaremeter', 'square meters', 'square meter'),   mi = c('mile', 'miles'),    lat = lat_alias,   #[1]\"lat\" \"latitude83\" \"latitude\" \"latitudes\"  \"faclat\" \"lats\" \"y\"   lon = lon_alias,   #[1]\"lon\" \"longitude83\" \"longitude\" \"longitudes\" \"faclong\" \"lons\" \"long\" \"longs\" \"lng\" \"x\"  )"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_aliases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert terms to standardized terms based on synonyms — fixnames_aliases","text":"","code":"fixnames_aliases(c(\"km\", \"kilometer\", \"miles\", \"statename\", 'X', \"y\")) fixnames_aliases(\"LATITUDE\") fixnames_aliases(\"LATITUDE\", ignore.case = F) fixnames_aliases(\"LATITUDE\", na_if_no_match = T) fixnames_aliases(\"LATITUDE\", na_if_no_match = T, ignore.case = F) fixnames_aliases(c(NA, 1, \"typo\", 1:2, list()))  fixnames_aliases(c(1:4, \"na\", \"tbd\"),    alias_list = list(upto1 = 0:1, company = 2, crowd = 3:10, other = c(\"na\", \"tbd\")))"},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_to_type.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","title":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","text":"helps convert original, friendly, long versions variable names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_to_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","text":"","code":"fixnames_to_type(   namesnow,   oldtype = \"apiname\",   newtype = \"rname\",   mapping_for_names )"},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_to_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","text":"namesnow vector strings, colnames(x) oldtype string name column data.frame mapping_for_names, column old column names overlap namesnow, like \"ejscreen_csv\" aka \"csvname2.2\" like \"ejscreen_api\" aka \"apiname\" like \"rname\" maybe aka \"newnames_ejscreenapi\" newtype string name column data.frame mapping_for_names, like \"rname\" maybe aka \"newnames_ejscreenapi\" like  \"longname_tableheader\" \"shortlabel\" column old column names overlap namesnow mapping_for_names data.frame passed fixnames() work colnames referred oldtype newtype","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_to_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","text":"Vector new column names length input","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/fixnames_to_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function to change elements of namesnow from an oldtype to a newtype of names — fixnames_to_type","text":"NEED SPECIFY NAMES COLUMNS MAP_HEADERNAMES, like \"apiname\" \"rname\", UNLIKE fixnames() fixcolnames() specify type like \"long\" \"api\" Using lookup table mapping_for_names, finds namesnow column specified oldtype replaces corresponding string column specified newtype","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/format_ejamit_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","title":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","text":"Applies rounding, sigfig, percentage info display columns ejamit using map_headernames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/format_ejamit_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","text":"","code":"format_ejamit_columns(df, nms = c())"},{"path":"https://usepa.github.io/EJAM-open/reference/format_ejamit_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","text":"df data table ejamit results, nms, name(s) columns referring EJAM indicators, \"Demog.Index'","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/format_ejamit_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","text":"named vector formatted values, corresponding valid column names provided","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/format_ejamit_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format ejamit results for use in tables, charts, etc. — format_ejamit_columns","text":"","code":"# x <- ejamit(testpoints_10, radius = 1)   x <- testoutput_ejamit_10pts_1miles   format_ejamit_columns(x$results_overall, 'Demog.Index')   format_ejamit_columns(x$results_overall, c('Demog.Index', 'no2'))   format_ejamit_columns(x$results_overall, names_d)"},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_all.html","id":null,"dir":"Reference","previous_headings":"","what":"formulas_all (DATA) table of formulas to aggregate or calculate indicators — formulas_all","title":"formulas_all (DATA) table of formulas to aggregate or calculate indicators — formulas_all","text":"formulas can describe indicator calculated variables like counts aggregated weighted mean, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"formulas_all (DATA) table of formulas to aggregate or calculate indicators — formulas_all","text":"","code":"formulas_all"},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"formulas_all (DATA) table of formulas to aggregate or calculate indicators — formulas_all","text":"object class character length 202.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"formulas_all (DATA) table of formulas to aggregate or calculate indicators — formulas_all","text":"Created EJAM datacreate_formulas.R script Can used calc_ejam() aggregation create derived custom indicator US blockgroups based counts obtained ACS.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_d.html","id":null,"dir":"Reference","previous_headings":"","what":"formulas_d (DATA) table of formulas to aggregate or calculate indicators — formulas_d","title":"formulas_d (DATA) table of formulas to aggregate or calculate indicators — formulas_d","text":"formulas can describe indicator calculated variables like counts aggregated weighted mean, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"formulas_d (DATA) table of formulas to aggregate or calculate indicators — formulas_d","text":"","code":"formulas_d"},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_d.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"formulas_d (DATA) table of formulas to aggregate or calculate indicators — formulas_d","text":"object class character length 130.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formulas_d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"formulas_d (DATA) table of formulas to aggregate or calculate indicators — formulas_d","text":"Created EJAM datacreate_formulas.R script Can used calc_ejam() aggregation create derived custom indicator US blockgroups based counts obtained ACS.)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formula_varname.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to check formulas and extract variable names they calculate values for — formula_varname","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"utility check formulas extract variable names calculate values ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/formula_varname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"","code":"formula_varname(myforms)"},{"path":"https://usepa.github.io/EJAM-open/reference/formula_varname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to check formulas and extract variable names they calculate values for — formula_varname","text":"myforms see calc_byformula()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs.html","id":null,"dir":"Reference","previous_headings":"","what":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","title":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","text":"data.table snapshot version EPA FRS. can look sites REGISTRY_ID frs, get location, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frs (DATA) EPA Facility Registry Service table of regulated sites — frs","text":"dataset can updated package maintainer using frs_update_datasets() (exported function) definitions active/inactive quite used ECHO. See attributes(frs) see date created, etc. Also, EJScreen maps EPA-regulated facilities program types, provided : https://web.archive.org/web/20250118193121/https://www.epa.gov/ejscreen/ejscreen-map-descriptions#sites-reporting--epa table acronym definitions see https://www.epa.gov/sites/default/files/2021-05/frs_program_abbreviations_and_names.xlsx epa_programs_defined Count    REGISTRY_ID rows:   Approx 7 million Count unique REGISTRY_ID values: Approx 4-5 million Clearly inactive unique IDs:        Approx 1-2 million Assumed   active unique IDs:        Approx 3 million frs rows total:            Approx 2-3 million (2.6m 02/2025) frs_by_programid rows:     Approx 3-4 million (3.5m 02/2025) frs_by_naics rows:         Approx 640k (541k unique regid 02/2025, 1858 unique NAICS) frs_by_sic rows:           Approx 764k (664k unique regid 02/2025, 2048 unique SIC) Classes ‘data.table’ 'data.frame' colnames [1,] \"lat\" [2,] \"lon\" [3,] \"REGISTRY_ID\" like 110000343003 [4,] \"PRIMARY_NAME\" [5,] \"NAICS\" csv group codes per site [6,] \"SIC\" [7,] \"PGM_SYS_ACRNMS\" like RCRAINFO:XJW000200113","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frsprogramcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"","code":"data.frame                                                                           description     code  1               National Pollutant Discharge Elimination System (NPDES) (ICIS-NPDES)    NPDES  2             The Integrated Compliance Information System (ICIS) for Air (ICIS-Air)      AIR  3               The Resource Conservation and Recovery Act (RCRA) Information System RCRAINFO  4                                              Risk Management Plan (RMP) facilities      RMP  5                                 The Safe Drinking Water Information System (SDWIS)     SFDW  6                                         The Superfund Enterprise Management System     SEMS  7                                         Clean Air Markets Division Business System   CAMDBS  8                                                   Toxics Release Inventory Program     TRIS  9                                                   Greenhouse Gas Reporting Program   E-GGRT  10                                                      Emissions Inventory System        EIS  11                                                    Toxic Substances Control Act       TSCA  12     Assessment, Cleanup and Redevelopment Exchange System (ACRES) for Brownfields    ACRES  13   Biennial Reporters (BR) Hazardous Waste Treatment, Storage, Disposal Facilities       BR"},{"path":"https://usepa.github.io/EJAM-open/reference/frsprogramcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"","code":"frsprogramcodes"},{"path":"https://usepa.github.io/EJAM-open/reference/frsprogramcodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"object class data.frame 13 rows 2 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frsprogramcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"Created script /data-raw/ Also see EPA documentation describing program code aka data source.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frsprogramcodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frsprogramcodes DATA EPA programs listed in Facility Registry Service — frsprogramcodes","text":"","code":"# \\donttest{   frs_by_programid[program %in% frsprogramcodes$code, .N, by=program]      setkey(frs_by_programid,\"program\")   frs_by_programid[\"TRIS\",]   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_active_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","title":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","text":"Download huge national COMBINED file find IDs ACTIVE sites FRS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_active_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","text":"","code":"frs_active_ids(   active = TRUE,   closecodes = c(\"CLOSED\", \"PERMANENTLY CLOSED\", \"PERMANENTLY SHUTDOWN\", \"INACTIVE\",     \"TERMINATED\", \"N\", \"RETIRED\", \"OUT OF SERVICE – WILL NOT BE RETURNED\",     \"CANCELED, POSTPONED, OR NO LONGER PLANNED\"),   zfile = \"national_combined.zip\",   zipbaseurl = \"https://ordsext.epa.gov/FLA/www3/state_files\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_active_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","text":"active optional. TRUE, default, returns registry IDs sites seem active, obviously inactive, least, based closecodes. FALSE, returns IDs sites inactive. closecodes optional, vector values ACTIVE_STATUS field assumed mean site inactive zfile optional Default national_combined.zip contains NATIONAL_ENVIRONMENTAL_INTEREST_FILE.CSV zipbaseurl optional Default https://ordsext.epa.gov/FLA/www3/state_files","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_active_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","text":"vector FRS IDs seem active (actually, clearly inactive sites) assuming parameter active=TRUE, default","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_active_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download huge national COMBINED file and find which IDs are ACTIVE sites in FRS — frs_active_ids","text":"","code":"# \\donttest{    cat( 'This takes a while for the download.\\n')   # frs <- frs_get()   # closedid <-  frs_active_ids(active=FALSE) # <- frs_inactive_ids()     # frs <- frs_drop_inactive(frs, closedid = closedid)   # usethis::use_data(frs, overwrite = TRUE)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_mact.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","title":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","text":"data.table one row per site – MACT subpart pair, multiple rows one site site covered multiple subparts. joined frs_by_programid get latlons matching facilities. @details background information MACT NESHAP subparts: MACT NESHAP subpart(s) categorize relevant EPA-regulated sites file stored package, obtained via dataload_dynamic(). See also frs_update_datasets() 115k rows 86k unique program IDs table, ECHO data download ICIS Air AFS. programid column found pgm_sys_id column frs_by_programid, mid 2025 55k found .   Also note found typos nonstandard abbreviations subpart titles downloaded data ECHO/FRS, \"WOOD PERSERVING AREA SOURCES\" instead \"WOOD PRESERVING AREA SOURCES\" frs_by_mact[grepl(\"WOOD PERSERVING AREA SOURCES\", frs_by_mact$title), ] \"PHOSPERIC ACID PRODUCTION\" instead \"PHOSPHORIC ACID PRODUCTION\" frs_by_mact[grepl(\"PHOSPERIC\", frs_by_mact$title), ] frs_by_mact[grepl(\"REDUCTN\", frs_by_mact$title), ] frs_by_mact[grepl(\"ORGNCS\", frs_by_mact$title), ]","code":"table(frs_by_mact$programid %in% frs_by_programid$pgm_sys_id)  FALSE  TRUE  59944  55429"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_mact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frs_by_mact (DATA) MACT NESHAP subpart(s) that each EPA-regulated site is subject to — frs_by_mact","text":"","code":"mact_table   mact_table[order(mact_table$title),]   mycodes <- c(\"BBBBBB\", \"OOOO\")   frs_by_mact[subpart %in% mycodes, ]   mact_table[grepl(\"smelt\", mact_table$title, ignore.case = T), ]   frs_by_mact[grepl(\"smelt\", title, ignore.case = T), ]   # a single site can be covered by 19 categories   frs_by_mact[, howmany := .N, by=\"programid\"][order(howmany), ]    table(frs_by_mact[, howmany := .N, by=\"programid\"][order(howmany), howmany])"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","title":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","text":"format one row per site-NAICS pair, multiple rows one site multiple NAICS. @details file stored package, obtained via dataload_dynamic(). EPA also provides FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC. SITES LACK NAICS INFO FRS! NAICS missing 80 percent facilities. frs 2.5 million unique REGISTRY_ID values, frs_by_naics 700k rows 581,000 unique REGISTRY_ID values 1,858 unique NAICS codes. length(unique(frs_by_naics$REGISTRY_ID)) length(unique(frs_by_naics[,REGISTRY_ID])) length(frs_by_naics[, unique(REGISTRY_ID)]) frs_by_naics[,uniqueN(REGISTRY_ID)]   1: 34.04722 -81.15136 110000854246 325211 2: 34.04722 -81.15136 110000854246 325220 3: 34.04722 -81.15136 110000854246 325222","code":"e.g., 581,416 in 02/2025      lat       lon  REGISTRY_ID  NAICS"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"frs_by_naics (DATA) data.table of NAICS code(s) for each EPA-regulated site in Facility Registry Service — frs_by_naics","text":"","code":"# NAICS is missing for almost 80 percent of facilities  `frs[ NAICS == \"\", .N] / frs[,.N] `  # only about 647k facilities had some NAICS info as of 02/2025  `frs[ NAICS != \"\", .N]`  `frs_by_naics[, uniqueN(REGISTRY_ID)]` # about 581k as of 02/2025    dim(frs_by_naics)   # about 680k rows here, or pairs of 1 NAICS - 1 registry ID pair,  #  since some IDs have 2 or more NAICS so appear as 2 or more rows here.    # About 1858 different NAICS codes appear here:  `frs_by_naics[,  uniqueN(NAICS)]`  `frs_by_naics[, .(sum(.N > 1)), by=NAICS][,sum(V1)]`    #  1,699 NAICS codes are used to describe more than one Registry ID   `frs_by_naics[, .(sum(.N == 1)), by=NAICS][,sum(V1)]`    #  almost 200 NAICS codes appear only once, i.e., apply to only a single facility       # Which 2-digit NAICS are found here most often?  `frs_by_naics[ , .N, keyby=substr(NAICS,1,2)]`  `frs_by_naics[ , .N,   by=substr(NAICS,1,2)][order(N),]` # Most common are 33 and 81  # Top 10 most common 3-digit NAICS here:  `x = tail(frs_by_naics[ , .N,   by=.(n3 = substr(NAICS,1,3))][order(N), ],10)`  `cbind(x, industry = rownames(naics_categories(3))[match(x$n3, naics_categories(3))])`"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in the Facility Registry Service — frs_by_programid","title":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in the Facility Registry Service — frs_by_programid","text":"frs_by_programid (DATA) data.table Program System ID code(s) EPA-regulated site Facility Registry Service","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_programid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frs_by_programid (DATA) data.table of Program System ID code(s) for each EPA-regulated site in the Facility Registry Service — frs_by_programid","text":"file stored package, obtained via dataload_dynamic(). Created frs_make_programid_lookup() format one row per site-programid pair, multiple rows one site multiple programs.","code":"> dim(frs_by_programid) [1] 3479560       6   as of 02/2025  nn=sample(1:nrow(frs_by_programid), 1); frs_by_programid[REGISTRY_ID == frs_by_programid$REGISTRY_ID[nn],]  Key: <pgm_sys_id, program, REGISTRY_ID>          lat       lon  REGISTRY_ID  PGM_SYS_ACRNMS program pgm_sys_id        <num>     <num>       <char>          <char>  <char>     <char>  1: 42.01282 -78.54799 110010618705 ICIS:1400013175    ICIS 1400013175  2: 42.01282 -78.54799 110010618705 ICIS:1400013176    ICIS 1400013176  nn=sample(1:nrow(frs_by_programid), 1); frs_by_programid[REGISTRY_ID == frs_by_programid$REGISTRY_ID[nn],]  Key: <pgm_sys_id, program, REGISTRY_ID>        lat       lon  REGISTRY_ID           PGM_SYS_ACRNMS program          pgm_sys_id      <num>     <num>       <char>                   <char>  <char>              <char> 1: 34.95563 -81.91435 110011516840  NCDB:C04#TSCAIV-98-LD11    NCDB  C04#TSCAIV-98-LD11 2: 34.95563 -81.91435 110011516840 NCDB:C04#TSCAIV-98-LD11A    NCDB C04#TSCAIV-98-LD11A 3: 34.95563 -81.91435 110011516840 NCDB:I04#19980603N4005 2    NCDB I04#19980603N4005 2"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"frs_by_sic (DATA) data.table of SIC code(s) for each EPA-regulated site in Facility Registry Service — frs_by_sic","title":"frs_by_sic (DATA) data.table of SIC code(s) for each EPA-regulated site in Facility Registry Service — frs_by_sic","text":"format one row per site-SIC pair, multiple rows one site multiple SIC.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_by_sic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"frs_by_sic (DATA) data.table of SIC code(s) for each EPA-regulated site in Facility Registry Service — frs_by_sic","text":"file stored package, obtained via dataload_dynamic().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","title":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","text":"Clean Facility Registry Service (FRS) dataset updating copy use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","text":"","code":"frs_clean(   frs,   usefulcolumns = c(\"LATITUDE83\", \"LONGITUDE83\", \"REGISTRY_ID\", \"PRIMARY_NAME\",     \"NAICS_CODES\", \"SIC_CODES\", \"PGM_SYS_ACRNMS\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","text":"frs data.table output frs_read() usefulcolumns optional, drops columns except vector character colnames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","text":"data.table columns defined usefulcolumns parameter like REGISTRY_ID, renamed example lat, lon, NAICS, SIC","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean Facility Registry Service (FRS) dataset when updating copy for use in EJAM — frs_clean","text":"Used frs_get() renames columns (lat, lon, NAICS new names) drops rows lacking lat/lon location info LATITUDE83 LONGITUDE83 columns","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean EPA FRS SIC info — frs_clean_sic","title":"Clean EPA FRS SIC info — frs_clean_sic","text":"Clean EPA FRS SIC info","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean EPA FRS SIC info — frs_clean_sic","text":"","code":"frs_clean_sic(   frs,   usefulcolumns = c(\"lat\", \"lon\", \"SIC\", \"LATITUDE83\", \"LONGITUDE83\", \"REGISTRY_ID\",     \"PRIMARY_NAME\", \"SIC_CODES\", \"PGM_SYS_ACRNMS\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean EPA FRS SIC info — frs_clean_sic","text":"frs frs data object frs_read() usefulcolumns optional","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean EPA FRS SIC info — frs_clean_sic","text":"frs data.table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_clean_sic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean EPA FRS SIC info — frs_clean_sic","text":"works just like frs_clean() SIC codes instead NAICS","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","title":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","text":"Download Facility Registry Service (FRS) file national_single.zip","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","text":"","code":"frs_download(   folder = NULL,   zfile = \"national_single.zip\",   zipbaseurl = \"https://ordsext.epa.gov/FLA/www3/state_files/\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","text":"folder path Default NULL means downloaded temp folder. zfile filename zipbaseurl url","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","text":"full path file name downloaded zip file","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Facility Registry Service (FRS) file national_single.zip — frs_download","text":"See https://www.epa.gov/frs/epa-frs-facilities-state-single-file-csv-download https://echo.epa.gov/tools/data-downloads/frs-download-summary","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"Remove inactive sites downloaded FRS data.table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"","code":"frs_drop_inactive(frs, closedid)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"frs Required, data.table frs_get() closedid Required, vector codes treat inactive, obtained frs_inactive_ids() downloads national dataset uses assumed codes returns ids inactive sites.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"Returns full frs data.table without inactive ids","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"late 2023 version, Complete list unique ids 4,775,797 7,558,760 rows data. Count REGISTRY_ID rows:   7,558,760 Count unique REGISTRY_ID values: 4,775,797 Clearly inactive unique IDs:     1,511,111 Assumed active unique IDs:       3,264,686 definitions active/inactive quite used ECHO, late 2023. See https://echo.epa.gov/help/facility-search/search-criteria-help#facchar Codes assumed mean site closed: CLOSED PERMANENTLY CLOSED PERMANENTLY SHUTDOWN INACTIVE TERMINATED N RETIRED SERVICE – RETURNED CANCELED, POSTPONED, LONGER PLANNED","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_drop_inactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove inactive sites from downloaded FRS data.table — frs_drop_inactive","text":"","code":"# frs <- frs_get()   # closedid <- frs_inactive_ids()   # frs <- frs_drop_inactive(frs, closedid = closedid)   # usethis::use_data(frs, overwrite = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"Use NAICS code industry title text search see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"","code":"frs_from_naics(naics_code_or_name, childrenForNAICS = TRUE, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"naics_code_or_name passed naics_from_any() query childrenForNAICS passed naics_from_any() children param function ... passed naics_from_any()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"EPA also provides FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC. EPA's ECHO query tools also provide search NAICS SIC, MACT subpart.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use NAICS code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_naics","text":"","code":"frs_from_naics(\"uranium\")   mapfast(frs_from_naics(naics_from_any(\"nuclear\")$code))   naics_from_any(\"silver\")   naics_from_name(\"silver\")   naics_from_any(212222 )   frs_from_naics(21222)   regid_from_naics(21222)   latlon_from_naics(21222)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"Get data.table based given FRS Program System CATEGORY. Find FRS sites program like RCRAINFO, TRIS, others.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"","code":"frs_from_program(program)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"program vector one EPA Program names used FRS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_program.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use EPA Program acronym like TRIS to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_program","text":"Also see EPA documentation describing program code aka data source.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"Use EPA Program ID see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_programid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"","code":"frs_from_programid(programname, programid)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_programid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"programname name EPA program programid : \"RCRAINFO\" programname \"XJW000000174\" programid full record  RCRAINFO:XJW000000174 programid like \"XJW000000174\" \"RCRAINFO\" programname \"XJW000000174\" programid full record  RCRAINFO:XJW000000174","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_programid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_programid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use EPA Program ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_programid","text":"","code":"test <- data.frame(programname = c('STATE','FIS','FIS'),                     programid = c('#5005','0-0000-01097','0-0000-01103'))  x = frs_from_programid(test$programname, test$programid)  x  mapfast(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"Use registry ID see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_regid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"","code":"frs_from_regid(regid)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_regid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"regid vector one EPA Registry ID codes used FRS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_regid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_regid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use registry ID to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_regid","text":"","code":"frs_from_regid(testinput_registry_id)   frs_from_regid(110000307695)   frs_from_regid(\"110000307695\")"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"Use SIC code industry title text search see FRS Facility Registry Service data EPA-regulated sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"","code":"frs_from_sic(sic_code_or_name, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"sic_code_or_name passed sic_from_any() ... passed sic_from_any()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"SIC\" \"PGM_SYS_ACRNMS\" EPA also provides FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use SIC code or industry title text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sic","text":"","code":"frs_from_sic(\"glass\")   mapfast(frs_from_sic(sic_from_any(\"silver\")$code))   sic_from_any(\"silver\")   sic_from_name(\"silver\")   sic_from_any('0780')   frs_from_sic('0780')   regid_from_sic('0780')   latlon_from_sic('0780')"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sitename.html","id":null,"dir":"Reference","previous_headings":"","what":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"SLOW search within PRIMARY_NAME facilities matching text","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sitename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"","code":"frs_from_sitename(sitenames, ignore.case = TRUE, fixed = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sitename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"sitenames one strings vector, can regular expressions query exact match using fixed=TRUE ignore.case logical, search case sensitive default (unlike grepl() default) fixed see grepl(), set TRUE looks exact matches","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sitename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"relevant rows data.table called frs, column names \"lat\" \"lon\" \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_from_sitename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use site name text search to see FRS Facility Registry Service data on those EPA-regulated sites — frs_from_sitename","text":"","code":"# \\donttest{  # very slow  x=frs_from_sitename  nrow(x)  head(x) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","title":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","text":"Download, unzip, read, clean Facility Registry Service dataset","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","text":"","code":"frs_get(   only_essential_cols = TRUE,   folder = NULL,   downloaded_and_unzipped_already = FALSE,   zfile = \"national_single.zip\",   zipbaseurl = \"https://ordsext.epa.gov/FLA/www3/state_files/\",   csvname = \"NATIONAL_SINGLE.CSV\",   date = Sys.Date() )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","text":"only_essential_cols TRUE default. used frs_read() folder NULL default means downloads unzips temporary folder downloaded_and_unzipped_already set TRUE, looks folder csv file instead trying download/unzip. Looks working directory folder specified. zfile filename, just use default unless EPA changes zipbaseurl url, just use default unless EPA changes csvname name csv file. just use default unless EPA changes date default Sys.Date() today, used attribute assigned results, representing vintage, date frs downloaded, obtained.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","text":"Used frs_update_datasets() Uses frs_download(), frs_unzip(), frs_read(), frs_clean() See examples package maintainer might use . See source code function notes. developer updating frs datasets package, see frs_update_datasets() frs_get() invisibly returns table data, data.table. download, unzip, read, clean, set metadata data. function gets whole thing one file NATIONAL_SINGLE.CSV https://ordsext.epa.gov/FLA/www3/state_files/national_single.zip files related information: https://www.epa.gov/frs/frs-data-resources https://www.epa.gov/frs/geospatial-data-download-service https://www.epa.gov/frs/epa-frs-facilities-state-single-file-csv-download Also download individual files ECHO parts info: https://echo.epa.gov/tools/data-downloads/frs-download-summary description related files available EPA's ECHO. function creates following:","code":"> head(frs_by_programid)            lat        lon  REGISTRY_ID   program   pgm_sys_id    1: 44.13415 -104.12563 110012799846     STATE        #5005    2: 41.16163  -80.07847 110057783590 PA-EFACTS         ++++    3: 41.21463 -111.96224 110020117862       CIM            0    4: 29.62889  -83.10833 110040716473 LUST-ARRA            0    5: 40.71490  -74.00316 110019246163       FIS 0-0000-01097    6: 40.76395  -73.97037 110019163359       FIS 0-0000-01103     > frs_by_naics[1:2, ]            lat        lon  REGISTRY_ID NAICS    1: 30.33805  -87.15616 110002524055     0    2: 48.77306 -104.56154 110007654038     0     > names(frs)    \"lat\"    \"lon\"   \"REGISTRY_ID\" \"PRIMARY_NAME\" \"NAICS\" \"PGM_SYS_ACRNMS\"      > head(frs[,1:4]) # looks something like this:            lat       lon  REGISTRY_ID                    PRIMARY_NAME    1: 18.37269 -66.14207 110000307695      xyz CHEMICALS INCORPORATED    x: 17.98615 -66.61845 110000307784                         ABC INC    x: 17.94930 -66.23170 110000307800                   COMPANY QRSTU     **WHICH SITES ARE ACTIVE VS INACTIVE SITES**   See frs_active_ids() or frs_inactive_ids()   Approx 4.6 million rows total 10/2022.   table(is.na(frs$lat))  table(is.na(frs$NAICS))   It is not entirely clear how to simply identify  which ones are active vs inactive sites.  See inst folder for notes on that.  This as of 2/10/23 is not exactly how ECHO/OECA defines \"active\"    **WHICH SITES HAVE LAT LON INFO**   As of 2022-01-31:  Among all including inactive sites,    1/3 have no latitude or longitude.   Even those with lat lon have some problems:     Some are are not in the USA.     Some have errors in country code.     Some use alternate ways of specifying USA.    **WHICH SITES HAVE NAICS OR SIC INDUSTRY CODES**   Only 1/4 have both location and some industry code (27   2/3 lack industry code (have no NAICS and no SIC).     NAICS vs SIC codes:  11 percent have both NAICS and SIC,  9.5 percent have just NAICS =     (21 percent have NAICS).  12.5 percent have just SIC.  2/3 have neither NAICS nor SIC.     **WHICH COLUMNS TO IMPORT AND KEEP**   approx 39 columns if all are imported, but most useful 10 is default.   [1] \"REGISTRY_ID\"             \"PRIMARY_NAME\"        \"PGM_SYS_ACRNMS\"  [4] \"INTEREST_TYPES\"    \"NAICS_CODES\"       \"NAICS_CODE_DESCRIPTIONS\"  [7] \"SIC_CODES\"       \"SIC_CODE_DESCRIPTIONS\"  \"LATITUDE83\"  [10] \"LONGITUDE83\"     Some fields are csv lists actually, to be split into separate rows    to enable queries on NAICS code or program system id:    PGM_SYS_ACRNMS = 'c', # csv format like AIR:AK999, AIRS/AFS:123,      NPDES:AK0020630, RCRAINFO:AK6690360312, RCRAINFO:AKR000206516\"   INTEREST_TYPES = 'c', # eg \"AIR SYNTHETIC MINOR, ICIS-NPDES NON-MAJOR\"       NAICS_CODES = 'c',  # csv of NAICS"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, unzip, read, clean the Facility Registry Service dataset — frs_get","text":"","code":"# \\donttest{   # These steps in the examples are all done by frs_update_datasets()    #  (a function not exported by the package)   # Note these take a long time to run, for downloads and processing.   frs <- frs_get()    # keep only if an active site, or unclear whether active. Remove clearly inactive ones.   closedidlist <- frs_inactive_ids()   frs <- frs_drop_inactive(frs, closedid = closedidlist)    frs_by_programid <- frs_make_programid_lookup(x = frs) # another super slow step    frs_by_naics     <- frs_make_naics_lookup(    x = frs) #  NAs introduced by coercion   usethis::use_data(frs,              overwrite = TRUE)   usethis::use_data(frs_by_programid, overwrite = TRUE)   usethis::use_data(frs_by_naics,     overwrite = TRUE) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_inactive_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Download national file and find which IDs are the INACTIVE sites in the FRS — frs_inactive_ids","title":"Download national file and find which IDs are the INACTIVE sites in the FRS — frs_inactive_ids","text":"Download national file find IDs INACTIVE sites FRS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_inactive_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download national file and find which IDs are the INACTIVE sites in the FRS — frs_inactive_ids","text":"","code":"frs_inactive_ids(active = FALSE, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_inactive_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download national file and find which IDs are the INACTIVE sites in the FRS — frs_inactive_ids","text":"active FALSE, default, returns registry IDs sites seem inactive, based closecodes. ... passed frs_active_ids()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_inactive_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download national file and find which IDs are the INACTIVE sites in the FRS — frs_inactive_ids","text":"vector FRS IDs clearly inactive sites – sites – depending value active","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"Check proper colname (seems valid alias)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"","code":"frs_is_valid(frs_upload)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"frs_upload upload frs registry IDs table converted data frame (data.table gets handled ) ids column whose name among allowed aliases get tried : colname FRS regids must one REGISTRY_ID, RegistryID, regid, siteid, checked order preference.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"boolean value (valid valid)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_is_valid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate FRS Registry ID table uploaded (just checks colname, mostly) — frs_is_valid","text":"note checks aliases (REGISTRY_ID, RegistryID, regid, siteid) order valid name found even fails actually contain valid ids, func go back try rest possible aliases, two cols regid siteid siteid valid registry ID values, func fail figure say invalid.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_mact_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Create updated version of frs_by_mact and mact_table — frs_make_mact_lookup","title":"Create updated version of frs_by_mact and mact_table — frs_make_mact_lookup","text":"Create updated version frs_by_mact mact_table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_mact_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create updated version of frs_by_mact and mact_table — frs_make_mact_lookup","text":"","code":"frs_make_mact_lookup(frs_by_programid, folder = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_mact_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create updated version of frs_by_mact and mact_table — frs_make_mact_lookup","text":"frs_by_programid output frs_make_programid_lookup() folder optional, download ICIS-AIR_downloads.zip , tempdir() default","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_mact_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create updated version of frs_by_mact and mact_table — frs_make_mact_lookup","text":"list, frs_by_mact data.table mact_table data.frame","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_naics_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat frs datatable to look up by NAICS — frs_make_naics_lookup","title":"Reformat frs datatable to look up by NAICS — frs_make_naics_lookup","text":"Reformat frs datatable look NAICS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_naics_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat frs datatable to look up by NAICS — frs_make_naics_lookup","text":"","code":"frs_make_naics_lookup(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_naics_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat frs datatable to look up by NAICS — frs_make_naics_lookup","text":"x data.table frs frs_get()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_naics_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat frs datatable to look up by NAICS — frs_make_naics_lookup","text":"data.table columns NAICS, REGISTRY_ID, etc.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_programid_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","title":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","text":"Reformat frs datatable look facilities PGM_SYS_ACRNMS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_programid_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","text":"","code":"frs_make_programid_lookup(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_programid_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","text":"x data.table frs frs_get()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_programid_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","text":"data.table columns lat, lon, REGISTRY_ID, program, pgm_sys_id","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_programid_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reformat frs datatable to look up facilities by PGM_SYS_ACRNMS — frs_make_programid_lookup","text":"information including definitions programs (full names) can found : https://www.epa.gov/frs/frs-data-sources 2021-05/frs_program_abbreviations_and_names.xlsx","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_sic_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat frs datatable to look up facilities by SIC code — frs_make_sic_lookup","title":"Reformat frs datatable to look up facilities by SIC code — frs_make_sic_lookup","text":"Reformat frs datatable look facilities SIC code","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_sic_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat frs datatable to look up facilities by SIC code — frs_make_sic_lookup","text":"","code":"frs_make_sic_lookup(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_sic_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat frs datatable to look up facilities by SIC code — frs_make_sic_lookup","text":"x data.table frs frs_clean_sic()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_make_sic_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat frs datatable to look up facilities by SIC code — frs_make_sic_lookup","text":"data.table lat, lon, REGISTRY_ID, SIC columns","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","title":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","text":"just helper function used create dataset use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","text":"","code":"frs_read(fullpath = \"NATIONAL_SINGLE.csv\", only_essential_cols = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","text":"fullpath path output frs_unzip only_essential_cols whether keep columns needed EJAM package (see source code)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","text":"data.table columns noted details.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Facility Registry Service (FRS) dataset of EPA-regulated sites — frs_read","text":"Uses data.table::fread() 4 million rows data. See frs_get()  details fields might useful.","code":"Default is just the most useful columns:   [1] \"REGISTRY_ID\"             \"PRIMARY_NAME\"            \"PGM_SYS_ACRNMS\"  [4] \"INTEREST_TYPES\"          \"NAICS_CODES\"             \"NAICS_CODE_DESCRIPTIONS\"  [7] \"SIC_CODES\"               \"SIC_CODE_DESCRIPTIONS\"   \"LATITUDE83\"  [10] \"LONGITUDE83\"   Full set of fields would be these:  [1] \"FRS_FACILITY_DETAIL_REPORT_URL\" \"REGISTRY_ID\"                    \"PRIMARY_NAME\" [4] \"LOCATION_ADDRESS\"               \"SUPPLEMENTAL_LOCATION\"          \"CITY_NAME\" [7] \"COUNTY_NAME\"                    \"FIPS_CODE\"                      \"STATE_CODE\" [10] \"STATE_NAME\"                     \"COUNTRY_NAME\"                   \"POSTAL_CODE\" [13] \"FEDERAL_FACILITY_CODE\"          \"FEDERAL_AGENCY_NAME\"            \"TRIBAL_LAND_CODE\" [16] \"TRIBAL_LAND_NAME\"               \"CONGRESSIONAL_DIST_NUM\"         \"CENSUS_BLOCK_CODE\" [19] \"HUC_CODE\"                       \"EPA_REGION_CODE\"                \"SITE_TYPE_NAME\" [22] \"LOCATION_DESCRIPTION\"           \"CREATE_DATE\"                    \"UPDATE_DATE\" [25] \"US_MEXICO_BORDER_IND\"           \"PGM_SYS_ACRNMS\"                 \"INTEREST_TYPES\" [28] \"NAICS_CODES\"                    \"NAICS_CODE_DESCRIPTIONS\"        \"SIC_CODES\" [31] \"SIC_CODE_DESCRIPTIONS\"          \"LATITUDE83\"                     \"LONGITUDE83\" [34] \"CONVEYOR\"                       \"COLLECT_DESC\"                   \"ACCURACY_VALUE\" [37] \"REF_POINT_DESC\"                 \"HDATUM_DESC\"                    \"SOURCE_DESC\""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_unzip.html","id":null,"dir":"Reference","previous_headings":"","what":"Unzip Facility Registry Service dataset — frs_unzip","title":"Unzip Facility Registry Service dataset — frs_unzip","text":"Unzip Facility Registry Service dataset","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_unzip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unzip Facility Registry Service dataset — frs_unzip","text":"","code":"frs_unzip(zfile = \"national_single.zip\", folder = \".\", ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_unzip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unzip Facility Registry Service dataset — frs_unzip","text":"zfile zipfile obtained via frs_download folder optional, folder look zfile ... passed unzip","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_unzip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unzip Facility Registry Service dataset — frs_unzip","text":"helper function used frs_get() create dataset EJAM","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/frs_update_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","title":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","text":"Main function updates several FRS datasets use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_update_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","text":"","code":"frs_update_datasets(   folder = NULL,   folder_save_as_arrow = \".\",   downloaded_and_unzipped_already = FALSE,   csvname = \"NATIONAL_SINGLE.CSV\",   save_as_arrow_frs = TRUE,   save_as_arrow_frs_by_programid = TRUE,   save_as_arrow_frs_by_naics = TRUE,   save_as_arrow_frs_by_sic = TRUE,   save_as_arrow_frs_by_mact = TRUE,   save_as_data_frs = FALSE,   save_as_data_frs_by_programid = FALSE,   save_as_data_frs_by_naics = FALSE,   save_as_data_frs_by_sic = FALSE,   save_as_data_frs_by_mact = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/frs_update_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","text":"folder optional folder download ; uses temp folder default folder_save_as_arrow optional folder save .arrow files downloaded_and_unzipped_already optional, set TRUE already downloaded latest folder specified can assumed current working directory csvname optional, passed frs_get() save_as_arrow_frs Whether save .arrow getwd() save_as_arrow_frs_by_programid Whether save .arrow getwd() save_as_arrow_frs_by_naics Whether save .arrow getwd() save_as_arrow_frs_by_sic Whether save .arrow getwd() save_as_arrow_frs_by_mact Whether save .arrow getwd() save_as_data_frs Whether save .rda ./data/ save_as_data_frs_by_programid Whether save .rda ./data/ save_as_data_frs_by_naics Whether save .rda ./data/ save_as_data_frs_by_sic Whether save .rda ./data/ save_as_data_frs_by_mact Whether save .rda ./data/","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_update_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","text":"Creates saved copies datasets R package, overwriting old ones, using frs_get() frs_inactive_ids() functions, invisibly returns frs.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/frs_update_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Main function that updates several FRS datasets for use in EJAM — frs_update_datasets","text":"function used someone maintaining EJAM package, obtain updated Facility Registry Service (FRS) data locations, IDs, etc. hundreds thousands EPA-regulated sites. function package maintainer/updater (analyst wants get latest information). normally called script like EJAM/data-raw/datacreate_0_UPDATE_ALL_DATASETS.R datasets obtained EPA servers, reformatted package, stored separate repository - see updating data package. save_as_data_ parameters set FALSE files saved source package repository like typical package datasets saved data folder source package. files later get downloaded local use process installing EJAM package.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"utility see objects loaded/attached package exported functions, internal (unexported) objects, datasets","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"","code":"functions_in_pkg(   pkg,   alphasort_table = FALSE,   internal_included = TRUE,   exportedfuncs_included = TRUE,   data_included = TRUE,   vectoronly = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"pkg name package character like \"EJAM\" alphasort_table default FALSE, show internal first group, exported funcs, datasets internal_included default TRUE includes internal (unexported) objects list exportedfuncs_included default TRUE includes exported functions (non-datasets, actually) list data_included default TRUE includes datasets list, seen via data(package=pkg) vectoronly set TRUE just get character vector object names instead data.frame table output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"data.table colnames object, exported, data  exported data 1 0 T/F, unless vectoronly = TRUE case returns character vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"See dupeRfiles() files supporting shiny app package, e.g. See dupenames() objects R packages. See functions_in_pkg() See datapack()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/functions_in_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to see which objects in a loaded/attached package are exported functions, internal (unexported) objects, or datasets — functions_in_pkg","text":"","code":"# functions_in_pkg(\"datasets\")"},{"path":"https://usepa.github.io/EJAM-open/reference/functions_that_use.html","id":null,"dir":"Reference","previous_headings":"","what":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"utility developing package - searches text function exported pkg (.R source file pkg/R)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_that_use.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"","code":"functions_that_use(text = \"stop\\\\(\", pkg = \"EJAM\", ignore_comments = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/functions_that_use.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"text something like \"EJAM::\" \"stop\\(\" \"library\\(\" \"***\" pkg name package path source package root folder - checks exported functions installed package, pkg = installed package character string like \"EJAM\" checks .R source FILE actual function, pkg = root folder source package subfolder called R .R source files ignore_comments logical, ignore_comments ignored treated TRUE pkg = installed package ignore_comments used pkg = folder contains .R files Note fail ignore comments .R files end line actual code like  print(1) # prints 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_that_use.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"vector names functions paths .R files","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/functions_that_use.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility for developing package - searches for text in each function exported by pkg (or each .R source file in pkg/R) — functions_that_use","text":"Searches body parameter defaults exported functions.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for Summary index table in community report — generate_ej_header","title":"Build header for Summary index table in community report — generate_ej_header","text":"Build header Summary index table community report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for Summary index table in community report — generate_ej_header","text":"","code":"generate_ej_header(title = \"Summary Indexes\")"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build header for Summary index table in community report — generate_ej_header","text":"title title","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_supp_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for supplemental summary indexes in community report — generate_ej_supp_header","title":"Build header for supplemental summary indexes in community report — generate_ej_supp_header","text":"Build header supplemental summary indexes community report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_supp_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for supplemental summary indexes in community report — generate_ej_supp_header","text":"","code":"generate_ej_supp_header(title = \"SUPPLEMENTAL INDEXES\")"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_ej_supp_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build header for supplemental summary indexes in community report — generate_ej_supp_header","text":"title title","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/generate_env_demog_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for demog. + envt. tables in community report — generate_env_demog_header","title":"Build header for demog. + envt. tables in community report — generate_env_demog_header","text":"Build header demog. + envt. tables community report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_env_demog_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for demog. + envt. tables in community report — generate_env_demog_header","text":"","code":"generate_env_demog_header(   title = \"Environmental and Residential Population Indicators\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_env_demog_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build header for demog. + envt. tables in community report — generate_env_demog_header","text":"title title","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/generate_extra_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header for extra table in community report — generate_extra_header","title":"Build header for extra table in community report — generate_extra_header","text":"Build header extra table community report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_extra_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header for extra table in community report — generate_extra_header","text":"","code":"generate_extra_header(title = \"Additional Information\")"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_extra_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build header for extra table in community report — generate_extra_header","text":"title title","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/generate_html_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build HTML header for community report — generate_html_header","title":"Build HTML header for community report — generate_html_header","text":"Build HTML header community report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_html_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build HTML header for community report — generate_html_header","text":"","code":"generate_html_header(   analysis_title,   totalpop,   locationstr,   in_shiny = FALSE,   report_title = NULL,   logo_path = NULL,   logo_html = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_html_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build HTML header for community report — generate_html_header","text":"analysis_title, title use header report totalpop, total population included location(s) analyzed locationstr, description location(s) analyzed in_shiny, whether function called outside shiny - affects location header report_title generic name type report, shown top, like \"EJAM Multisite Report\" logo_path optional relative path logo upper right overall header. Ignored logo_html specified NULL, otherwise uses default param set run_app() logo_html optional HTML img logo upper right overall header. specified, overrides logo_path. omitted, gets created based logo_path.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/generate_report_footnotes.html","id":null,"dir":"Reference","previous_headings":"","what":"helper - make footnote for summary report — generate_report_footnotes","title":"helper - make footnote for summary report — generate_report_footnotes","text":"helper - make footnote summary report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/generate_report_footnotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper - make footnote for summary report — generate_report_footnotes","text":"","code":"generate_report_footnotes(   diesel_caveat =     paste0(\"Note: Diesel particulate matter index is from the EPA's Air Toxics Data Update, which is the Agency's ongoing, comprehensive evaluation of air toxics in the United States. This effort aims to prioritize air toxics, emission sources, and locations of interest for further study. It is important to remember that the air toxics data presented here provide broad estimates of health risks over geographic areas of the country, not definitive risks to specific individuals or locations. More information on the Air Toxics Data Update can be found at: \",           url_linkify(\"https://www.epa.gov/haps/air-toxics-data-update\",     \"https://www.epa.gov/haps/air-toxics-data-update\")) )"},{"path":"https://usepa.github.io/EJAM-open/reference/generate_report_footnotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper - make footnote for summary report — generate_report_footnotes","text":"diesel_caveat","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"Very fast way to distances to all nearby Census blocks — getblocksnearby","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"Get distance site (e.g., facility) Census block centroid within radius Given set points specified radius, function quickly finds US Census blocks near point. point, uses specified radius distance finds distance every block within circle defined radius. block defined Census-provided internal point, latitude longitude. point can location regulated facility type site, blocks high-resolution source information residents live. Finding blocks internal points circle provides way quickly estimate fraction block group inside circular buffer accurately quickly areal apportionment block groups provide.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"","code":"getblocksnearby(   sitepoints,   radius = 3,   maxradius = 31.07,   radius_donut_lower_edge = 0,   avoidorphans = FALSE,   quadtree = NULL,   quaddatatable = NULL,   quiet = FALSE,   parallel = FALSE,   use_unadjusted_distance = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point maxradius miles distance (max distance check even 1 block point within radius) radius_donut_lower_edge radius lower edge ring analyzing ring full circle avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function quaddatatable currently used quiet Optional. set TRUE avoid message using getblock_diagnostics(), relevant user saved output function. parallel implemented use_unadjusted_distance logical, whether find points within unadjusted distance ... passed getblocksnearbyviaQuadTree() functions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"data.table like testoutput_getblocksnearby_10pts_1miles, columns named \"ejam_uniq_id\", \"blockid\", \"distance\", etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Very fast way to distances to all nearby Census blocks — getblocksnearby","text":"See ejamit() examples. getblocksnearby() wrapper redirecting right version, like getblocksnearbyviaQuadTree() Census block \"internal points\" (defined Census Bureau) actually looks , like centroids. blocks pre-indexed whole USA, via data object quadtree aka localtree","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearbyviaQuadTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"getblocksnearby() uses work. Given set points specified radius miles, function quickly finds US Census blocks near point. work actually supporting getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearbyviaQuadTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"","code":"getblocksnearbyviaQuadTree(   sitepoints,   radius = 3,   radius_donut_lower_edge = 0,   maxradius = 31.07,   avoidorphans = FALSE,   report_progress_every_n = 500,   quiet = FALSE,   use_unadjusted_distance = FALSE,   retain_unadjusted_distance = TRUE,   quadtree,   updateProgress = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearbyviaQuadTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"sitepoints data.table columns lat, lon giving point locations sites facilities around circular buffers radius miles, defining circular buffer around site point radius_donut_lower_edge radius lower edge ring analyzing ring full circle maxradius miles distance (max distance check even 1 block point within radius) avoidorphans logical TRUE, even 1 BLOCK internal point within radius SITE, keeps looking past radius, maxradius, find nearest 1 BLOCK. EJScreen case report NA, right? , EJAM really need report stats residents presumed within radius, block centroid within radius? Best estimate might report indicators nearest block centroid probably almost always one site sitting inside , ideally adjust total count fraction blockwt based area circular buffer fraction area block apparently inside . Setting TRUE can produce unexpected results, match EJScreen numbers. Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. report_progress_every_n Reports progress console every n points, mostly testing, progress bar feature might useful unless super fast. quiet Optional. set TRUE avoid message using getblock_diagnostics(), relevant user saved output function. use_unadjusted_distance logical, whether find points within unadjusted distance retain_unadjusted_distance set FALSE drop save memory/storage. TRUE, distance_unadjusted column save actual distance site block internal point – distance column always represents distance average resident block, estimated adjusting site block distance cases small relative size block, put lower limit , can result large estimate distance block large. See EJScreen documentation. quadtree (pointer large quadtree object) created using indexblocks() uses SearchTree package. Takes 2-5 seconds create time needed. can automatically created package attached via .onAttach() function updateProgress, optional function update Shiny progress bar","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearbyviaQuadTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"point, uses specified search radius finds distance every block within circle defined radius. block defined Census-provided internal point, latitude longitude. Results sites2blocks table used doaggregate(), distance miles one output column data.table. Adjusts distance avg resident block small relative block size, way EJScreen adjusts distances creating proximity scores. point can location regulated facility type site, blocks high-resolution source information residents live. Finding blocks internal points circle provides way quickly estimate fraction block group inside circular buffer accurately quickly areal apportionment block groups provide.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearbyviaQuadTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast way to find nearby points (distance to each Census block centroid near each site) — getblocksnearbyviaQuadTree","text":"","code":"# indexblocks() # if localtree not available yet, quadtree = localtree   x = getblocksnearby(testpoints_1000, radius = 3)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"Allows EJAM analyze compare Counties, example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"","code":"getblocksnearby_from_fips(fips, inshiny = FALSE, need_blockwt = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"fips vector FIPS codes identifying blockgroups, tracts, counties, states. useful – instead getting stats comparing circular buffers polygons – one getting stats one tracts, analyzing comparing blockgroups county, comparing whole counties , within State. inshiny used shiny app server code handle errors via validate() instead stop() need_blockwt set FALSE speed need blockwt","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"getblocksnearby one row per FIPS, distance column irrelevant","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips","text":"","code":"x <- getblocksnearby_from_fips(fips_counties_from_state_abbrev(\"DE\"))   counties_ej <- doaggregate(x)   #cannot use mapfast(counties_ej$results_bysite) since no lat lon.     # mapfastej_counties() should work...   y =  ejamit(fips=fips_counties_from_statename(\"Delaware\"))      # x=getblocksnearby_from_fips(\"482011000011\") # one blockgroup only   # y=doaggregate(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips2.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","text":"Allows EJAM analyze compare Counties, example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","text":"","code":"getblocksnearby_from_fips2(fips, inshiny = FALSE, need_blockwt = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","text":"fips vector FIPS codes identifying blockgroups, tracts, counties, states. useful – instead getting stats comparing circular buffers polygons – one getting stats one tracts, analyzing comparing blockgroups county, comparing whole counties , within State. inshiny used shiny app server code handle errors via validate() instead stop() need_blockwt ignored now","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","text":"getblocksnearby one row per FIPS, distance column irrelevant","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips2","text":"","code":"x <- getblocksnearby_from_fips(fips_counties_from_state_abbrev(\"DE\"))   counties_ej <- doaggregate(x)   #cannot use mapfast(counties_ej$results_bysite) since no lat lon.    # mapfastej_counties() should work...   y =  ejamit(fips=fips_counties_from_statename(\"Delaware\"))      # x=getblocksnearby_from_fips(\"482011000011\") # one blockgroup only   # y=doaggregate(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips3.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","text":"Allows EJAM analyze compare Counties, example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","text":"","code":"getblocksnearby_from_fips3(fips, inshiny = FALSE, need_blockwt = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","text":"fips vector FIPS codes identifying blockgroups, tracts, counties, states. useful – instead getting stats comparing circular buffers polygons – one getting stats one tracts, analyzing comparing blockgroups county, comparing whole counties , within State. inshiny used shiny app server code handle errors via validate() instead stop() need_blockwt ignored now","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","text":"getblocksnearby one row per FIPS, distance column irrelevant","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocksnearby_from_fips3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all blocks within each of the FIPS codes provided — getblocksnearby_from_fips3","text":"","code":"x <- getblocksnearby_from_fips(fips_counties_from_state_abbrev(\"DE\"))   counties_ej <- doaggregate(x)   #cannot use mapfast(counties_ej$results_bysite) since no lat lon.    # mapfastej_counties() should work...   y =  ejamit(fips=fips_counties_from_statename(\"Delaware\"))      # x=getblocksnearby_from_fips(\"482011000011\") # one blockgroup only   # y=doaggregate(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"utility - many blocks many stats blocks sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"","code":"getblocks_diagnostics(   x,   detailed = FALSE,   see_pctiles = FALSE,   see_distanceplot = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"x output getblocksnearby() like testoutput_getblocksnearby_10pts_1miles detailed TRUE, also shows console long table frequencies via getblocks_summarize_blocks_per_site() see_pctiles set TRUE see 20 percentiles distance table see_distanceplot TRUE, also draws scatter plot adjusted vs unadj distances","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"list stats","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility - How many blocks and many other stats about blocks and sites — getblocks_diagnostics","text":"","code":"getblocks_diagnostics(testoutput_getblocksnearby_10pts_1miles)   # library(data.table)   x <- data.table::copy(testpoints_10)   setDT(x)   pts <- rbind(data.table(lat = 40.3, lon = -96.23),     x[ , .(lat, lon)])  z <- getblocksnearbyviaQuadTree(pts, 1, quadtree = localtree, quiet = T)  z[ , .(blocks = .N) , keyby = 'ejam_uniq_id']  plotblocksnearby(pts, radius = 1, sites2blocks = z)  zz <- getblocks_diagnostics(z, detailed = T, see_pctiles = T) cbind(stats = zz)    getblocks_diagostics(testoutput_getblocksnearby_1000pts_1miles, see_distanceplot = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_predict_blocks_per_site.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"utility - estimate large table might output getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_predict_blocks_per_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"","code":"getblocks_predict_blocks_per_site(nsites, radius)"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_predict_blocks_per_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"nsites count sites radius radius miles","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_predict_blocks_per_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - estimate how large table might be that will be output of getblocksnearby() — getblocks_predict_blocks_per_site","text":"number","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_blocks_per_site.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"Number blocks near avg site, many sites 1 fewer 30 blocks nearby, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_blocks_per_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"","code":"getblocks_summarize_blocks_per_site(x, varname = \"ejam_uniq_id\")"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_blocks_per_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"x output getblocksnearby() like testoutput_getblocksnearby_1000pts_1miles varname colname variable data.table x one summarize ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_blocks_per_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many blocks are near the sites (pop density affects accuracy) — getblocks_summarize_blocks_per_site","text":"invisibly, list stats, plot","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_sites_per_block.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"utility - many sites near blocks (site density near residents)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_sites_per_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"","code":"getblocks_summarize_sites_per_block(x, varname = \"blockid\")"},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_sites_per_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"x output getblocksnearby() like testoutput_getblocksnearby_10pts_1miles varname colname variable data.table x one summarize ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getblocks_summarize_sites_per_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - How many sites are near the blocks (site density near residents) — getblocks_summarize_sites_per_block","text":"invisibly, list stats","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/getfrsnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","title":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","text":"Given table frompoints (lat lon coordinates), find IDs distances nearby points represent EPA-regulated facilities locations Facility Registry Services (FRS). Like getblocksnearby() regulated facilities US EPA FRS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getfrsnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","text":"","code":"getfrsnearby(   frompoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   quadtree = NULL,   quaddatatable = NULL,   quiet = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/getfrsnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","text":"frompoints used sitepoints param getblocksnearby() radius passed getblocksnearby() maxradius passed getblocksnearby() avoidorphans passed getblocksnearby() quadtree index created indexpoints quaddatatable optional table topoints (format provided internal helper function create_quaddata() needed). quiet passed getblocksnearby() ... passed getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getfrsnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","text":"sites2points data.table one row per pair frompoint nearby frs point, like output getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getfrsnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all EPA-regulated facilities nearby each specified point and distances — getfrsnearby","text":"Later steps can aggregate frompoint summarize count facilities near frompoint max/min distance frompoint, like proximity nearest, etc. proximity score block blockgroup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","title":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","text":"Given table frompoints (lat lon coordinates), find IDs distances nearby points represent e.g., schools, parks, EPA-regulated facilities locations Facility Registry Services (FRS). Like getblocksnearby() nearby points type.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","text":"","code":"getpointsnearby(   frompoints,   topoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   retain_unadjusted_distance = TRUE,   quadtree = NULL,   quaddatatable = NULL,   quiet = FALSE,   updateProgress = FALSE,   report_progress_every_n = 1000,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","text":"frompoints used sitepoints param getblocksnearby(). Can example Census blocks (based internal point block). topoints table lat lon coordinates points may nearby. schools, parks, facilities, set points. radius passed getpointsnearbyviaQuadTree() maxradius passed getpointsnearbyviaQuadTree() avoidorphans passed getpointsnearbyviaQuadTree() retain_unadjusted_distance passed getpointsnearbyviaQuadTree() quadtree optional index topoints provided, created indexpoints() quaddatatable optional table topoints (format provided internal helper function create_quaddata() needed). quiet passed getpointsnearbyviaQuadTree() updateProgress progress bar object, passed getpointsnearbyviaQuadTree() report_progress_every_n passed getpointsnearbyviaQuadTree() ... passed getpointsnearbyviaQuadTree()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","text":"sites2points data.table one row per pair frompoint nearby topoint, like output getpointsnearbyviaQuadTree()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find IDs of and distances to all nearby points (e.g., schools, or EPA-regulated facilities, etc.) — getpointsnearby","text":"Later steps can aggregate frompoint summarize count schools facilities, etc., near frompoint max/min distance frompoint, like proximity nearest, etc. proximity score frompoint (e.g., block) blockgroup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearbyviaQuadTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast way to find nearby points - For each frompoint, it finds distances to all nearby topoints (within radius) — getpointsnearbyviaQuadTree","title":"Fast way to find nearby points - For each frompoint, it finds distances to all nearby topoints (within radius) — getpointsnearbyviaQuadTree","text":"Given set frompoints (e.g., facilities blocks) specified radius miles, function quickly finds topoints (e.g., blocks facilities) near point. facilities census blocks, respectively, can used aggregate block groups near facility EJAM analysis. used define blocks facilities, finds facilities near block, proxistat works create proximity indicators.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearbyviaQuadTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast way to find nearby points - For each frompoint, it finds distances to all nearby topoints (within radius) — getpointsnearbyviaQuadTree","text":"","code":"getpointsnearbyviaQuadTree(   frompoints,   radius = 3,   maxradius = 31.07,   avoidorphans = FALSE,   min_distance = 100/1760,   retain_unadjusted_distance = TRUE,   report_progress_every_n = 500,   quiet = FALSE,   quadtree,   quaddatatable,   updateProgress = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearbyviaQuadTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast way to find nearby points - For each frompoint, it finds distances to all nearby topoints (within radius) — getpointsnearbyviaQuadTree","text":"frompoints data.table columns lat, lon giving point locations sites facilities blocks around circular buffers defined radius. pointid indexed topoints id. ejam_uniq_id frompoints id radius miles, defining circular buffer around frompoint maxradius miles distance (max distance check even 1 topoint within radius) avoidorphans logical TRUE, even 1 topoint within radius frompoint, keeps looking past radius, maxradius, find nearest 1 topoint Note creating proximity score, contrast, instead want find nearest 1 SITE none within radius BLOCK. min_distance miles minimum distance use cases points identical almost location. retain_unadjusted_distance set FALSE drop save memory/storage. TRUE, distance_unadjusted column save actual distance site topoint, might zero. adjusted distance uses lower limit, min_distance report_progress_every_n Reports progress console every n points quiet Optional. quadtree (pointer large quadtree object) created using indexpoints() uses SearchTree package. quaddatatable data.table like quaddata passed function data.table used create quadtree, blockpoints frs. updateProgress, optional function update Shiny progress bar","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/getpointsnearbyviaQuadTree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast way to find nearby points - For each frompoint, it finds distances to all nearby topoints (within radius) — getpointsnearbyviaQuadTree","text":"explanation assuming frompoints \"sites\" facilities topoints Census blocks, can reversed long quaddata index passed index topoints. point, function uses specified search radius finds distance every topoint within circle defined radius. topoint defined latitude longitude. Results sites2points table used doaggregate(), distance miles one output column data.table.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"Like getblocksnearby(), blocks polygon rather blocks near facility. analyzing residents certain zones places elevated risk, redlined areas, watersheds, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"","code":"shapefile2blockpoints(   polys,   addedbuffermiles = 0,   blocksnearby = NULL,   dissolved = FALSE,   safety_margin_ratio = 1.1,   crs = 4269,   updateProgress = NULL )  get_blockpoints_in_shape(   polys,   addedbuffermiles = 0,   blocksnearby = NULL,   dissolved = FALSE,   safety_margin_ratio = 1.1,   crs = 4269,   updateProgress = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"polys Spatial data sf::st_as_sf(), points shapefile_from_sitepoints(), table points lat,lon columns first converted using function, polygons addedbuffermiles width optional buffering add points (edges), miles blocksnearby optional table blocks blockid, etc (lat,lon can looked blockpoints dt) dissolved TRUE, use sf::st_union(polys) find unique blocks inside one polys safety_margin_ratio multiplied addedbuffermiles, far search blocks nearby using getblocksnearby(), using found intersection via sf:: crs used st_as_sf() st_transform() shape_buffered_from_shapefile_points(), crs = 4269 Geodetic CRS NAD83 updateProgress optional Shiny progress bar update","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"get_blockpoints_in_shape() Block points table blocks whose internal point inside buffer just circular buffer specified radius polys just points.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"uses getblocksnearby() get fast rough/good estimate US block points nearby (safety margin - see param ), using sf:: carefully identify candidate blocks actually inside polygon (e.g., circle) according sf:: methods. circular buffers, just using getblocksnearby() work need function. non-circular polygons, buffered , function provide way quickly filter millions US blocks examined sf:: join / intersect, since otherwise takes forever sf:: check US blocks.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/get_blockpoints_in_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all Census blocks in a polygon, using internal point of block — shapefile2blockpoints","text":"","code":"# y <- get_blockpoints_in_shape()    # x = shapefile_from_sitepoints(testpoints_n(2))   # y = get_blockpoints_in_shape(x, 1)  # very very slow"},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":null,"dir":"Reference","previous_headings":"","what":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"see EJAM package functions like latlon_from_naics() latlon_from_siteid() latlon_from_programid()  latlon_from_program() might make function obsolete.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"","code":"get_facility_info_via_ECHO(   p_ncs = NULL,   qcolumns = c(16, 17),   output = \"JSON\",   otherparameters = NULL,   url_not_query = TRUE,   testing = FALSE,   getcsv = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"p_ncs NAICS industrial code qcolumns vector specifying variables return (see varsinfo_ECHO_API). Column numbers work ECHO API expects, can instead - addition - also use words referring groups variables defined package: critical  best   useful   programid    ej specify variables , e.g., word critical get variables varsinfo_ECHO_API$critical == TRUE output JSON default, get output format otherparameters appended text end URL url_not_query logical, just return URL query testing logical getcsv logical, use get_download","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"Tries return table via data.table::.data.table(), columns: \"ObjectId\" \"FacName\" \"RegistryID\" \"FacLat\" \"FacLong\" \"lat\" \"lon\" \"registry_id\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"See info ECHO web services https://echo.epa.gov/tools/web-services. Use Metadata service endpoint list available output objects, Column Ids, definitions help build customized output, see examples https://echo.epa.gov/tools/web-services/facility-search--data#/Metadata https://echodata.epa.gov/echo/echo_rest_services.metadata?output=JSON ECHO, one can search facilities permits EPA Registry ID (.e., FRS ID) Program System ID (CWA, CAA, SDWA, RCRA). web interface https://echo.epa.gov/facilities/facility-search allows data entry 2,000 IDs pasted spreadsheet column, comma- return-separated.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/get_facility_info_via_ECHO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOT USED - WAS WORK IN PROGRESS - was to get info on EPA-regulated facilities via EPA ECHO API - query by NAICS etc. — get_facility_info_via_ECHO","text":"","code":"x1 = get_facility_info_via_ECHO(562213, url_not_query = F)   x2 = latlon_from_naics(562213)"},{"path":"https://usepa.github.io/EJAM-open/reference/get_global_defaults_or_user_options.html","id":null,"dir":"Reference","previous_headings":"","what":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","title":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","text":"utility reconciles/consolidates user-defined params passed via run_app() default settings global_defaults_ files","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_global_defaults_or_user_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","text":"","code":"get_global_defaults_or_user_options(   user_specified_options = NULL,   bookmarking_allowed = \"url\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/get_global_defaults_or_user_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","text":"user_specified_options passed arguments run_app() bookmarking_allowed ?shinyApp enableBookmarking param","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_global_defaults_or_user_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","text":"list global defaults user options run_app() uses golem_opts parameter golem::with_golem_options() later can retrieved server ui via golem::get_golem_options() via global_or_param() (almost thing).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/get_global_defaults_or_user_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility that reconciles/consolidates user-defined params passed via run_app() and default settings from global_defaults_ files — get_global_defaults_or_user_options","text":"function, called run_app(), collects shiny-app-related default settings defined places: parameters passed run_app() user settings defined file global_defaults_shiny_public.R settings defined file global_defaults_shiny.R settings defined file global_defaults_package.R consolidates list, available server/ui.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/global_or_param.html","id":null,"dir":"Reference","previous_headings":"","what":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","title":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","text":"utility server/ui check value global default setting user-defined setting get_golem_options() similar tools, useful server ui","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/global_or_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","text":"","code":"global_or_param(vname)"},{"path":"https://usepa.github.io/EJAM-open/reference/global_or_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","text":"vname global default user param - global find files source code function see / used.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/global_or_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","text":"value param, NULL found","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/global_or_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility for server/ui to check value of a global default setting or user-defined setting This and get_golem_options() are very similar tools, useful in server and ui — global_or_param","text":"See help get_global_defaults_or_user_options() global_or_param() used lot server also ui (sometimes golem::get_golem_options() used instead now , purpose). used generally ui set default values params set global_defaults_ files often can modified advanced tab. provide alternative values params passed run_app() understand options seeing defaulted files used parameters ui server. See ?run_app() much like golem::get_golem_options()  global_or_param() flexible/robust since , vname already defined found golem::get_golem_options() backup, check param called vname defined search path calling global envt already somehow, return value exists. golem options found search path, returns NULL","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/high_pctiles_tied_with_min.html","id":null,"dir":"Reference","previous_headings":"","what":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","title":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","text":"high_pctiles_tied_with_min (DATA) internal data used handle cases multiple places tied lowest indicator score","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/high_pctiles_tied_with_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","text":"","code":"high_pctiles_tied_with_min"},{"path":"https://usepa.github.io/EJAM-open/reference/high_pctiles_tied_with_min.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"high_pctiles_tied_with_min (DATA) internal data used to handle cases where multiple places are tied for the lowest indicator score — high_pctiles_tied_with_min","text":"object class list length 53.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexblocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Create localtree (quadtree index US block centroids) global environment","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexblocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"","code":"indexblocks()"},{"path":"https://usepa.github.io/EJAM-open/reference/indexblocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Returns TRUE done. Side effect creates index memory.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexblocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create localtree (a quadtree index of all US block centroids) in global environment — indexblocks","text":"Note duplicated code .onAttach() also global_defaults_*.R .onAttach() can edited create package loads, takes time time developer rebuilds/installs package others load EJAM. also happen global_defaults_*.R already.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexfrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","title":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","text":"Index US EPA Facility Registry Service facility locations getfrsnearby() can find quickly","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexfrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","text":"","code":"indexfrs(frspts = NULL, indexname = \"frs_index\", envir = globalenv())"},{"path":"https://usepa.github.io/EJAM-open/reference/indexfrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","text":"frspts optional, default frs table EJAM package, subset data.table columns name lat lon, one row per location (point), columns ignored. frspts specified indexname exists already, just returns index without rebuilding . frspts specified, just frs one industry one state, new index built, even one named indexname already existed. envir optional environment - default assign index object globalenv()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexfrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","text":"Index returned side effect puts globalenv() (specified envir) spatial index name defined indexname, created indexpoints().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexfrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create an efficient quadtree spatial index of EPA-regulated facility locations — indexfrs","text":"creates quadtree spatial index facilities, used getfrsnearby(), count regulated facilities near specified sites, create new proximity score every block block group US, via proxistat()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"Index list points (e.g., schools) getpointsnearby() can find quickly","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"","code":"indexpoints(pts, indexname = \"custom_index\", envir = globalenv())"},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"pts data.frame data.table columns name lat lon, one row per location (point), columns ignored. indexname optional name give index envir optional environment - default assign index object globalenv()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"Just returns TRUE done. Side effect put globalenv() (specified envir) spatial index name defined indexname, created indexpoints().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"creates spatial index used getpointsnearby() support proxistat(), create new proximity score every block block group US. relies create_quaddata() one step, SearchTrees::createTree()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/indexpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to create efficient quadtree spatial index of any set of lat,lon — indexpoints","text":"","code":"# \\donttest{   # EXAMPLES NOT TESTED YET ***   pts <- testpoints_10   tempenv <- new.env()   index10 <- indexpoints(pts, \"index10\", envir = tempenv)   x <- getpointsnearby(pts, quadtree = get(index10, envir = tempenv))   # y <- proxistat(pts)   # rm(custom_index)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/input_names_listing.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility checking values of input$ that appear in this code — input_names_listing","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"See appsilon pkg shiny.info now","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/input_names_listing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"","code":"input_names_listing(file = \"./R/app_server.R\")"},{"path":"https://usepa.github.io/EJAM-open/reference/input_names_listing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"file path source file search ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/input_names_listing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility checking values of input$ that appear in this code — input_names_listing","text":"character vector ids inputs like x,y,z found input$x input$y input$z","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.island.html","id":null,"dir":"Reference","previous_headings":"","what":"which fips, state names, or state abbreviations are island areas — is.island","title":"which fips, state names, or state abbreviations are island areas — is.island","text":"fips, state names, state abbreviations island areas","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.island.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"which fips, state names, or state abbreviations are island areas — is.island","text":"","code":"is.island(ST = NULL, statename = NULL, fips = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/is.island.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"which fips, state names, or state abbreviations are island areas — is.island","text":"ST optional vector 2 letter state abbreviations statename optional vector statenames like \"texas\" \"Delaware\" fips optional vector FIPS codes (first 2 characters get used)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.island.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"which fips, state names, or state abbreviations are island areas — is.island","text":"logical vector length input","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/is.island.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"which fips, state names, or state abbreviations are island areas — is.island","text":"","code":"is.island(c(\"PR\", \"DE\", \"AS\", NA))   is.island(statename = c(\"Guam\", \"New York\", \"american samoa\", NA))   is.island(fips = c(21001, 60, \"60\", \"600010000000\"))   tail(cbind(stateinfo2[ , c(\"statename\", \"is.island.areas\")], is.island(stateinfo2$ST)),10)"},{"path":"https://usepa.github.io/EJAM-open/reference/is.numeric.text.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT utility to check if vector is numbers stored as text like ","title":"DRAFT utility to check if vector is numbers stored as text like ","text":"DRAFT utility check vector numbers stored text like \"01\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numeric.text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT utility to check if vector is numbers stored as text like ","text":"","code":"# S3 method for class 'text' is.numeric(x, trim_ = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/is.numeric.text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT utility to check if vector is numbers stored as text like ","text":"x character vector (reports FALSE)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numeric.text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT utility to check if vector is numbers stored as text like ","text":"TRUE FALSE (vector long x... just length 1). Always ignores NA values.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numericish.html","id":null,"dir":"Reference","previous_headings":"","what":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","text":"see columns seem numeric rounded, e.g. - DRAFT FULLY TESTED","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numericish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","text":"","code":"is.numericish(   x,   only.if.already.numeric = FALSE,   strip.characters.before.coerce = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/is.numericish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","text":"x data.table, data.frame, vector ..already.numeric logical, TRUE, reports TRUE column (element)  .numeric() TRUE one strip.characters..coerce logical, TRUE, tries remove spaces percentage signs trying coerce numeric","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numericish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","text":"logical vector long NCOL(x) .e., length(x), x table, length(x) vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/is.numericish.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"see which columns seem numeric and could be rounded, e.g. - DRAFT NOT FULLY TESTED — is.numericish","text":"report \"08\" numeric-ish, check fips leading zero way, e.g. check .na(.numeric(x)) \"08\" roundable.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/islandareas.html","id":null,"dir":"Reference","previous_headings":"","what":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","title":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","text":"data.frame info approximate lat lon bounding boxes around American Samoa, Guam, Commonwealth Northern Mariana Islands (Northern Mariana Islands), United States Virgin Islands. See also stateinfo stateinfo2 See Census documentation See source package files datacreate_islandareas.R EJAM/data-raw/islandareas.xlsx Note US minor outlying islands list widely dispersed. include Midway Islands, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/islandareas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","text":"","code":"islandareas"},{"path":"https://usepa.github.io/EJAM-open/reference/islandareas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"islandareas (DATA) table, bounds info on lat lon of US Island Areas — islandareas","text":"object class data.frame 8 rows 5 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2csv.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - combine lat/lon values into csv format — latlon2csv","title":"helper function - combine lat/lon values into csv format — latlon2csv","text":"Combines vector latitudes vector longitudes one vector comma-separated pairs like latitude,longitude","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - combine lat/lon values into csv format — latlon2csv","text":"","code":"latlon2csv(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - combine lat/lon values into csv format — latlon2csv","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - combine lat/lon values into csv format — latlon2csv","text":"vector comma-separated pairs (see example)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function - combine lat/lon values into csv format — latlon2csv","text":"","code":"lat_example = c(30.01,30.26,30.51)    lon_example = c(-90.61,-90.95,-91.23)    latloncsv_example = c(\"30.01,-90.61\", \"30.26,-90.95\", \"30.51,-91.23\")    all.equal(latloncsv_example,               latlon2csv(lat = lat_example, lon = lon_example)    )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2nexus.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","title":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","text":"Converts 2 vectors values latitude longitude format can paste NEXUS tool lat/lon site selection box","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2nexus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","text":"","code":"latlon2nexus(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2nexus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2nexus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","text":"single character string csv pairs, semicolon pair next like \"30.01,-90.61; 30.26,-90.95; 30.51,-91.23\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon2nexus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function - combine lat/lon values to paste into NEXUS tool — latlon2nexus","text":"","code":"lat_example = c(30.01,30.26,30.51)   lon_example = c(-90.61,-90.95,-91.23)   latlon2nexus(lat=lat_example, lon=lon_example)"},{"path":"https://usepa.github.io/EJAM-open/reference/latloncsv2nexus.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","title":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","text":"Converts vector comma-separated values latitude longitude format can paste NEXUS tool lat/lon site selection box","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latloncsv2nexus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","text":"","code":"latloncsv2nexus(latloncsv)"},{"path":"https://usepa.github.io/EJAM-open/reference/latloncsv2nexus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","text":"latloncsv vector comma-separated values lat,lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latloncsv2nexus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","text":"single character string csv pairs, semicolon pair next, like \"30.01,-90.61;30.26,-90.95;30.51,-91.23\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latloncsv2nexus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function - combine lat/lon values to paste into NEXUS tool — latloncsv2nexus","text":"","code":"latloncsv_example = c(\"30.01,-90.61\", \"30.26,-90.95\", \"30.51,-91.23\")  latloncsv2nexus(latloncsv_example)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"Try figure user provided latitude / longitude vectors, data.frame, file, interactively pick file.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"","code":"latlon_any_format(   anything,   lon_if_used,   interactiveprompt = TRUE,   invalid_msg_table = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"anything missing interactive mode RStudio, prompts user file. Otherwise, can filename (csv xlsx, path), data.frame/ data.table/ matrix, vector longitudes (case y must latitudes). File data.frame/data.table/matrix must columns called lat lon, names can inferred latlon_infer() lon_if_used anything parameter vector longitudes, lon_if_used must latitudes. Ignored otherwise. interactiveprompt TRUE (default) interactive mode running shiny, prompt user file \"anything\" missing. invalid_msg_table Set TRUE add columns \"valid\" \"invalid_msg\" output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"data.frame least columns lon lat (others x)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"Also see closely related function sitepoints_from_any(). function relies read_csv_or_xl()  latlon_df_clean() turn uses latlon_infer() latlon_as.numeric() latlon_is.valid() draft function read_and_clean_points() general way get points, still work progress... similar latlon_from_anything() except also uses functions: latlon_from_regid(),  latlon_from_programid() eventually use  _from_naics() etc. Even generally, FIPS shapefile inputs read single wrapper function point.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_any_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_any_format","text":"","code":"latlon_from_anything(testpoints_10)  latlon_from_anything(testpoints_10$lat, testpoints_10$lon)  pts = c(\"33,-100\", \"32,-101\")  latlon_from_anything(pts)  pts = data.frame(Longitude = testpoints_10$lon, Latitude = testpoints_10$lat)  latlon_from_anything(pts)  pts = data.table(Lat = testpoints_10$lat, Long = testpoints_10$lon)  latlon_from_anything(pts)  # \\donttest{  if (interactive()) {    pts <- latlon_from_anything()  }# }  # \\donttest{  pts = system.file(\"testdata/latlon/testpoints_10.xlsx\", package = \"EJAM\")  latlon_from_anything(pts)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip non-numeric characters from a vector — latlon_as.numeric","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"Remove characters minus signs, decimal points, numeric digits","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"","code":"latlon_as.numeric(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"x vector something supposed numbers like latitude longitude may character vector characters like tab space percent sign dollar sign","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"numeric vector length x","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"Useful latitude longitude vector spaces, tabs, etc. CAUTION - Assumes stripping making numeric fix whatever problem end result valid set numbers. Inf etc. turned NA values. Empty zero length string turned NA without warning. NA left NA. anything empty NA interpreted number, returns NA offers warning.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_as.numeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip non-numeric characters from a vector — latlon_as.numeric","text":"","code":"latlon_as.numeric(c(\"-97.179167000000007\", \" -94.0533\", \"-95.152083000000005\"))   latlon_as.numeric(-3:3)   latlon_as.numeric(c(1:3, NA))   latlon_as.numeric(c(1, 'asdf'))   latlon_as.numeric(c(1, ''))   latlon_as.numeric(c(1, '', NA))   latlon_as.numeric(c('aword', '$b'))   latlon_as.numeric(c('-10.5%', '<5', '$100'))   latlon_as.numeric(c(Inf, 1))"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"Utility identify lat lon columns (addresses), renaming cleaning .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"","code":"latlon_df_clean(df, invalid_msg_table = FALSE, set_invalid_to_na = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"df data.frame columns lat lon names can interpreted , addresses can geocoding create lat lon columns invalid_msg_table Set TRUE add columns \"valid\" \"invalid_msg\" output set_invalid_to_na set FALSE, replaces invalid lat lon NA values","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"Returns data.frame relevant colnames changed lat lon, lat,lon added based addresses, invalid lat lon values cleaned possible else replaced NA, optional columns \"valid\" \"invalid_msg\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"Tries figure columns seem lat lon values, addresses can converted lat lon columns, renames data.frame. Cleans lat lon values (removes extra characters, makes numeric)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_df_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon columns (or create them from geocoding addresses), and clean up those columns in a data.frame — latlon_df_clean","text":"","code":"#  x <- latlon_df_clean(x)  latlon_df_clean(testpoints_bad, set_invalid_to_na = F, invalid_msg_table = T)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":null,"dir":"Reference","previous_headings":"","what":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"geocode, AOI package installed attached imports like tidygeocoder etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"","code":"latlon_from_address(   address,   xy = FALSE,   pt = FALSE,   aoimap = FALSE,   batchsize = 25,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"address vector addresses xy set TRUE want x,y returned, see help AOI pkg pt see help AOI pkg, return geometry set TRUE, allowing map. param provided ignored set TRUE aoimap=TRUE aoimap see help AOI pkg, create map set TRUE batchsize many request per geocode query, done batches necessary ... passed geocode() see  help(geocode, package = \"AOI\")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"returns NULL installed attached AOI package. AOI attached via library() require() package imports, returns tibble table x,y lat,lon values geometries. see AOI package.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"slow? 100 per minute?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geocode, but only if AOI package is installed and attached and what it imports like tidygeocoder etc. — latlon_from_address","text":"","code":"# only works if AOI package installed already and attached too   # #eg <- c(\"1200 Pennsylvania Ave, NW Washington DC\", \"Research Triangle Park\")   # #x <- geocode(eg)   # out <- ejamit(x, radius = 3)   # fname = system.file(\"testdata/address/testinput_address_table_9.xlsx\", package=\"EJAM\")   ## or testdata('address_table_9', quiet = T)  #x1 <- read_csv_or_xl(fname) #x2 <- latlon_from_anything(fname) #names(x1) #names(x2)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address_table.html","id":null,"dir":"Reference","previous_headings":"","what":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","title":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","text":"get lat,lon table contains USPS addresses","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","text":"","code":"latlon_from_address_table(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","text":"x data.frame can missing interactive","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","text":"output latlon_from_address()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_address_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get lat,lon from table that contains USPS addresses — latlon_from_address_table","text":"","code":"address_from_table(testinput_address_table)  ## see available test data objects and files:  # cbind(data.in.package  = sort(grep(\"address\", datapack()$Item, value = T))) # cbind(files.in.package = sort(basename(testdata('address', quiet = T))))  # \\donttest{  # This requires first attaching the AOI package.  pts <- latlon_from_address(testinput_address_9[1:2]) ## out <- ejamit(pts, radius = 1) ## ejam2report(out)  latlon_from_address_table(testinput_address_table) latlon_from_address_table(testinput_address_table_withfull) ## *** NOTE IT FAILS IF A COLUMN WITH STREET NAME ONLY IS CALLED \"address\" ##   instead of that storing the full address. # } fixcolnames_infer(currentnames = testinput_address_parts) fixcolnames_infer(currentnames = names(testinput_address_table))"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"Try figure user provided latitude / longitude vectors, data.frame, file, interactively pick file.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"","code":"latlon_from_anything(   anything,   lon_if_used,   interactiveprompt = TRUE,   invalid_msg_table = FALSE,   set_invalid_to_na = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"anything missing interactive mode RStudio, prompts user file. Otherwise, can filename (csv xlsx, path), data.frame/ data.table/ matrix, vector longitudes (case y must latitudes). File data.frame/data.table/matrix must columns called lat lon, names can inferred latlon_infer() lon_if_used anything parameter vector longitudes, lon_if_used must latitudes. Ignored otherwise. interactiveprompt TRUE (default) interactive mode running shiny, prompt user file \"anything\" missing. invalid_msg_table Set TRUE add columns \"valid\" \"invalid_msg\" output set_invalid_to_na used latlon_df_clean()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"data.frame least columns lon lat (others anything), logical column called \"valid\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"Also see closely related function sitepoints_from_any(). function relies read_csv_or_xl()  latlon_df_clean() turn uses latlon_infer() latlon_as.numeric() latlon_is.valid() draft function read_and_clean_points() general way get points, still work progress... similar latlon_from_anything() except also uses functions: latlon_from_regid(),  latlon_from_programid() eventually use  _from_naics() etc. Even generally, FIPS shapefile inputs read single wrapper function point.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_anything.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors — latlon_from_anything","text":"","code":"latlon_from_anything(testpoints_10)  latlon_from_anything(testpoints_10$lat, testpoints_10$lon)  pts = c(\"33,-100\", \"32,-101\")  latlon_from_anything(pts)  pts = data.frame(Longitude = testpoints_10$lon, Latitude = testpoints_10$lat)  latlon_from_anything(pts)  pts = data.table(Lat = testpoints_10$lat, Long = testpoints_10$lon)  latlon_from_anything(pts)  # \\donttest{  if (interactive()) {    pts <- latlon_from_anything()  }# }  # \\donttest{  pts = system.file(\"testdata/latlon/testpoints_10.xlsx\", package = \"EJAM\")  latlon_from_anything(pts)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":null,"dir":"Reference","previous_headings":"","what":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"Get point locations US EPA-regulated facilities sources subject Maximum Achievable Control Technology (MACT) standards Clean Air Act.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"","code":"latlon_from_mactsubpart(subpart = \"JJJ\", include_if_no_latlon = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"subpart vector one strings indicating Subpart CFR Title 40 Part 63 covers source category interest, \"FFFF\" - see example, https://www.ecfr.gov/current/title-40/part-63/subpart-FFFF include_if_no_latlon logical - many database lack lat lon values MACT code","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"data.table columns named programid, subpart, title, lat, lon, REGISTRY_ID, program US EPA FRS sites MACT code. NA none found.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"background information MACT NESHAP subparts: MACT NESHAP subpart(s) categorize relevant EPA-regulated sites EPA's ECHO query tools also provide search NAICS SIC, MACT subpart.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_mactsubpart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get point locations for US EPA-regulated facilities that have sources subject to Maximum Achievable Control Technology (MACT) standards under the Clean Air Act. — latlon_from_mactsubpart","text":"","code":"mact_table   latlon_from_mactsubpart(\"OOOO\", include_if_no_latlon = FALSE) # default   latlon_from_mactsubpart(\"OOOO\", include_if_no_latlon = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"Get lat lon, Registry ID, given NAICS industry code(s) Find EPA Facility Registry Service (FRS) sites /NAICS code(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"","code":"latlon_from_naics(naics, children = TRUE, id_only = FALSE, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"naics vector naics codes query titles NAICS, data.table column named code, output naics_from_any() children optional logical. set FALSE get exact matches rather facilities whose NAICS starts provided naics (naics based provided title). Many facilities longer specific NAICS code listed FRS, 6-digit code, category (e.g., 4-digit) queried without children = TRUE one find sites within overall category. id_only optional logical. Must set TRUE get regid instead table ... passed naics_from_any()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, NAICS, naics_found, naics_query (unless id_only parameter set TRUE). naics_query input parameter used (provided function naics). naics_found NAICS identical (redundant), code found listed frs_by_naics table, might subcategory (child) naics_query term. example, naics_query might 33611 (5 digits) one facility NAICS naics_found might 336111 (6-digit code) another facility might 336112.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"Important notes: Finding right NAICS finding right sites NAICS complicated, requires understanding NAICS codes system, FRS data, EJAM functions. See discussion \"Advanced\" vignettes/articles. Many FRS sites lack NAICS code! Note difference children = TRUE children = FALSE NAICS returned table may child NAICS NAICS used query! may cause confusion querying multiple parent NAICS want analyze results NAICS! functions like regid_from_naics(), latlon_from_naics(), frs_from_naics() try find EPA FRS sites based naics codes titles. EPA also provides FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC. See NAICS industry codes https://www.naics.com/search","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_naics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by NAICS code (industrial category) — latlon_from_naics","text":"","code":"# \\donttest{   regid_from_naics(321114)   latlon_from_naics(321114)   # latlon_from_naics(naics_from_any(\"cheese\")[,code] )   latlon_from_naics(\"cheese\")   head(latlon_from_naics(c(3366, 33661, 336611), id_only=TRUE))   head(regid_from_naics(c(3366, 33661, 336611)))   head(regid_from_naics(3366, children = TRUE))   # mapfast(frs_from_naics(336611)) # simple map      # get name from one code   naics_from_code(336)$name   # get the name from each code   mycode = c(33611, 336111, 336112)   naics_from_code(mycode)$name   # see counts of facilities by code (parent) and subcategories (children)   naics_counts[NAICS %in% mycode, ]   # see parent codes that contain each code   naicstable[code %in% mycode, ]      # how many were found via each naics code?   found = latlon_from_naics(c(211,331))   x = table( found$naics_found, found$naics_query)   x = x[order(x[, 1],decreasing = T),]   x   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"Get lat lon, Registry ID, NAICS, given FRS Program System CATEGORY Find FRS sites program like RCRAINFO, TRIS, others","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"","code":"latlon_from_program(query)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"query like \"RMP\", \"RCRAINFO\", \"TRIS\", \"RMP\", others.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"data.table lat  lon  REGISTRY_ID  program – pgm_sys_id since duplicates REGISTRY_ID 2 different pgm_sys_id values program, results sometimes longer using frs_from_program()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"info FRS program codes general, see https://www.epa.gov/frs/frs-program-crosswalks Also see information https://echo.epa.gov/tools/data-downloads/frs-download-summary file FRS_PROGRAM_LINKS.csv info program codes ECHO uses, see https://echo.epa.gov/resources/echo-data/--data including https://www.epa.gov/frs/frs-environmental-interest-types list program acronyms, https://www.epa.gov/frs/frs-rest-services#appendixa acronym abbreviated name represents name information management system environmental program. Federal ones least 100k facilities RCRAINFO (500k sites), NPDES, ICIS, AIR, FIS, EIS, AIRS/AFS.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_program.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System CATEGORY Find all FRS sites in a program like RCRAINFO, TRIS, or others — latlon_from_program","text":"","code":"# \\donttest{  x = latlon_from_program(\"CAMDBS\")   mapfast(x)  program <- c(\"EIS\", \"UST\")  x = latlon_from_program(program)  # to get the facility name as well:  x = frs[grepl(\"RCRAINFO\", PGM_SYS_ACRNMS), ] # fast  ## x = latlon_from_regid(latlon_from_program(program)[,REGISTRY_ID])  # slower!  mapfast(x[sample(1:nrow(x), 1000), ]) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"Get lat lon, Registry ID, NAICS, given FRS Program System ID","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"","code":"latlon_from_programid(programname, programid)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"programname name EPA program programid : \"RCRAINFO\" programname \"XJW000000174\" programid full record  RCRAINFO:XJW000000174 programid like \"XJW000000174\" \"RCRAINFO\" programname \"XJW000000174\" programid full record  RCRAINFO:XJW000000174","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"data.table lat  lon  REGISTRY_ID  program   pgm_sys_id","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"ID identification number, permit number, assigned information management system represents facility site, waste site, operable unit, feature tracked Environmental Information System. see epa_programs list programs acronyms count FRS facilities . Also see simple list names like : .vector(epa_programs) sort(unique(frs_by_programid$program)) roughly 3.5 million records frs_by_programid 2.7 million unique pgm_sys_id values number may used different program types, like RCRAINFO EGRID. two distinct facilities using number 1: latlon_from_programid('EGRID', 1) latlon_from_programid('ICIS', 1) Also note FRS API: https://www.epa.gov/frs/facility-registry-service-frs-api https://www.epa.gov/frs/frs-rest-services","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_programid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon, Registry ID, and NAICS, for given FRS Program System ID — latlon_from_programid","text":"","code":"ids = c(\"00603DSCFPRD459\", \"00603MCRNTRD11K\", \"00605VNMRBMONTA\" )  latlon_from_programid(\"TRIS\", ids)     latlon_from_programid('EGRID', 1)   latlon_from_programid('ICIS', 1)    # ambiguous to only use the number! 354362 is used by two programs here:  frs_by_programid[match(testinput_program_sys_id, frs_by_programid$pgm_sys_id), ]  frs_by_programid[frs_by_programid$pgm_sys_id %in% testinput_program_sys_id, ]"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"Get lat lon (NAICS) via Facility Registry ID","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_regid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"","code":"latlon_from_regid(regid)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_regid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"regid Facility Registry Service ID like 110010052520","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_regid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"data.table columns lat,lon,REGISTRY_ID,PRIMARY_NAME,NAICS,PGM_SYS_ACRNMS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_regid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat lon (and NAICS) via Facility Registry ID — latlon_from_regid","text":"","code":"latlon_from_regid(110070874073) x = latlon_from_regid(     c(110071293460, 110070874073, 110070538057, 110044340807,        110030509215, 110019033810, 110056111559, 110056982323)         )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"DRAFT - Estimate lat,lon site(s) sites2blocks output getblocksnearby() trilateration – Use lat,lon nearby block points distances estimate original sitepoints","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"","code":"latlon_from_s2b(s2b)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"s2b sites2blocks data.table output getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"data.table columns ejam_uniq_id, lat, lon, one row per site","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"function needed retain site latlons, sites entirely single states based nearby blocks. slow assumes already know lat,lon sitepoints. reason output getblocksnearby() estimate original sitepoint(s) input(s) getblocksnearby() ejamit() shiny app require since original latlon sitepoints retained provided doaggregate() needs figure state site use right state percentiles.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_s2b.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT - Estimate lat,lon of site(s) from sites2blocks output of getblocksnearby() trilateration – Use lat,lon of nearby block points and distances to estimate original sitepoints — latlon_from_s2b","text":"","code":"pts = testpoints_10  #x = latlon_from_s2b(getblocksnearby(pts, quiet = T))  x = latlon_from_s2b(testoutput_getblocksnearby_10pts_1miles)  cbind(estimate = x, pts,     latratio = x$lat/pts$lat, lonratio = x$lon/pts$lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"Get lat lon, Registry ID, given SIC industry code(s) Find EPA Facility Registry Service (FRS) sites exact SIC code (subcategories)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"","code":"latlon_from_sic(sic, id_only = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"sic vector SIC codes, data.table column named code, output sic_from_any() id_only logical optional, set TRUE get vector REGISTRY_ID values back instead data.frame lat,lon,SIC columns .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"data.table (just data.frame) columns called lat, lon, REGISTRY_ID, SIC (unless id_only parameter set TRUE)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"EPA also provides FRS Facility Industrial Classification Search tool can find facilities based NAICS SIC. NOTE: many FRS sites lack SIC code! Also, function find sites identified FRS data child SIC (subcategory exact query)! Relies  frs_by_sic (data.table) See info SIC industry codes https://www.naics.com/search","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_sic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find EPA-regulated facilities in FRS by SIC code (industrial category) — latlon_from_sic","text":"","code":"regid_from_sic('7300')   latlon_from_sic('7300')   latlon_from_sic(sic_from_any(\"cheese\")[,code] )   head(latlon_from_sic(c('6150', '6300', '5995'), id_only=TRUE))   # mapfast(frs_from_sic('6150')) # simple map"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_vectorofcsvpairs.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","title":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","text":"helper function - convert vector lat,lon pairs data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_vectorofcsvpairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","text":"","code":"latlon_from_vectorofcsvpairs(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_vectorofcsvpairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","text":"x vector comma-separated pairs lat,lon values stored character strings c(\"30,-83\",  \"  32.5,  -86.377325 \")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_vectorofcsvpairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","text":"data.frame colnames lat lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_from_vectorofcsvpairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function - convert vector of lat,lon pairs to data.frame — latlon_from_vectorofcsvpairs","text":"","code":"lat_x = testpoints_10$lat lon_x = testpoints_10$lon latlon_pairs = latlon2csv(lat = lat_x, lon = lon_x) latlon_from_vectorofcsvpairs(latlon_pairs)  all.equal(testpoints_10[, c(\"lat\", \"lon\")], latlon_from_vectorofcsvpairs(latlon_pairs))  x = latlon_from_vectorofcsvpairs(c(\"30,-83\",  \"  32.5,  -86.377325 \")) x latlon_is.valid(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"Guess columns lat lon based aliases like latitude, FacLat, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"","code":"latlon_infer(mycolnames)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"mycolnames e.g., colnames(x) x data.frame read.csv","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"returns mycolnames except replacing best candidates lat lon","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_infer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess which columns have lat and lon based on aliases like latitude, FacLat, etc. — latlon_infer","text":"","code":"latlon_infer(c('trilat', 'belong', 'belong')) # warns if no alias found,      #  but doesnt warn of dupes in other terms, just preferred term.   latlon_infer(c('a', 'LONG', 'Longitude', 'lat')) # only the best alias is converted/used   latlon_infer(c('a', 'LONGITUDE', 'Long', 'Lat')) # only the best alias is converted/used   latlon_infer(c('a', 'longing', 'Lat', 'lat', 'LAT')) # case variants of preferred are        # left alone only if lowercase one is found   latlon_infer(c('LONG', 'long', 'lat')) # case variants of a single alias are        # converted to preferred word (if pref not found), creating dupes!  warn!   latlon_infer(c('LONG', 'LONG')) # dupes of an alias are renamed and still are dupes! warn!   latlon_infer(c('lat', 'lat', 'Lon')) # dupes left as dupes but warn!"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon not NA using !is.na() — latlon_is.available","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"Check lat lon NA using !.na()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"","code":"latlon_is.available(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon not NA using !is.na() — latlon_is.available","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.islandareas.html","id":null,"dir":"Reference","previous_headings":"","what":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"See islandareas","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.islandareas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"","code":"latlon_is.islandareas(lat, lon, exact_but_slow_islandareas = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.islandareas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"lat vector latitudes lon vector longitudes exact_but_slow_islandareas optional logical, set TRUE check point vs boundaries states_shapefile identify ones Island Areas according shapefile. default method much faster, just checks point within bounding box approximate Island Areas, found object islandareas.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.islandareas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"vector TRUE / FALSE values indicating given lat lon pair approximately one rough bounding boxes includes 4 Island Areas.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.islandareas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check lat lon coordinates to see if each is approx. in general area of US Island Areas Guam, USVI, Amer Samoa or N Marianas — latlon_is.islandareas","text":"","code":"# \\donttest{ # this would require the testpoints_1000 data from the EJAM package:   isles <- which(latlon_is.islandareas(lat = testpoints_1000$lat, lon = testpoints_1000$lon))   mapfast(testpoints_1000[isles, ]) # c(213,785)   which(!(latlon_is.usa(lat = testpoints_1000$lat, lon = testpoints_1000$lon))) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.possible.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon between -180 and +180 — latlon_is.possible","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"Check lat lon -180 +180","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.possible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"","code":"latlon_is.possible(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.possible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.possible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon between -180 and +180 — latlon_is.possible","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.usa.html","id":null,"dir":"Reference","previous_headings":"","what":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"Check lat lon coordinates see approx. general area USA excluding Island Areas","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.usa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"","code":"latlon_is.usa(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.usa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"lat vector latitudes lon vector longitudes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.usa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check lat lon coordinates to see if each is approx. in general area of USA excluding Island Areas — latlon_is.usa","text":"logical vector, one element per lat lon pair (location) Indicates point approximately one rough bounding boxes includes USA without Island Areas Guam, American Samoa, USVI, N Marianas Islands.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"Check latitude longitude value see valid.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"","code":"latlon_is.valid(   lat,   lon,   quiet = TRUE,   invalid_msg_table = FALSE,   exact_but_slow_islandareas = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"lat vector latitudes (data.frame colnames lat lon, case lon param must missing) lon vector longitudes quiet optional logical, TRUE, show list bad values console invalid_msg_table set TRUE want data.frame colnames \"valid\" \"invalid_msg\" exact_but_slow_islandareas see latlon_is.islandareas()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"logical vector, one element per lat lon pair (location)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"NA outside expected numeric ranges (based approx ranges lat lon seen among block internal points dataset) note Guam, American Samoa, Northern Mariana Islands, U.S. Virgin Islands ranges approximated! EJScreen residential population data locations anyway, can map sites . see latlon_is.islandareas() note details https://www.britannica.com/place/Trust-Territory---Pacific-Islands areas longer part US still sites FRS, ids \"110009291462\" \"110013804678\" \"110067353429\" \"110067377430\" \"110070929074\" e.g., https://echo.epa.gov/detailed-facility-report?fid=110067353429 https://echo.epa.gov/detailed-facility-report?fid=110013804678 lat must 17.5 71.5, lon must ( -180 -64) (172 180)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_is.valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if lat lon are OK – validate latitudes and longitudes — latlon_is.valid","text":"","code":"# \\donttest{  # this would only work using the EJAM package datasets frs and blockpoints:    if (!exists(\"frs\")) dataload_dynamic(\"frs\")  table(latlon_is.valid(lat =  frs$lat, lon =  frs$lon))  # blockpoints may need to be downloaded using dataload_dynamic()  table(latlon_is.valid(lat =  blockpoints$lat, lon =  blockpoints$lon))   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_bgid.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","title":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","text":"get expanded version data.table, copy(blockgroupstats), new lat,lon columns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_bgid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","text":"","code":"latlon_join_on_bgid(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_bgid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","text":"x data.table column called bgid (used bgid2fips blockgroupstats)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_bgid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","text":"x 2 new columns side effect updates x calling envt","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_bgid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to add lat lon columns to data.table by reference, joining on bgid — latlon_join_on_bgid","text":"","code":"# quick map of blockgroups in 1 state, shown as blockgroup centroids myst <- \"NY\" dat <- bgpts[fips2state_abbrev(substr(bgfips,1,2)) == myst, ] mapfast(dat, radius = 0.1)  # same but popups have all the indicators from EJScreen myst <- \"NY\" dat <- copy(blockgroupstats[ST == myst, ]) # add latlon cols by reference: latlon_join_on_bgid(dat) # specify useful labels for the map popups mapfast(dat, radius = 0.1,         labels = fixcolnames(names(dat), 'r', 'shortlabel'))  ## or add the useful labels to the table 1st names(dat) <- fixcolnames(names(dat), \"r\", \"shortlabel\") mapfast(dat, radius = 0.1)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_blockid.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","title":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","text":"get expanded version data.table, sites2blocks, new lat,lon columns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_blockid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","text":"","code":"latlon_join_on_blockid(s2b)"},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_blockid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","text":"s2b data.table like testoutput_getblocksnearby_10pts_1miles, output getblocksnearby(), column called blockid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_blockid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","text":"returns input data.table lat,lon columns added block coordinates","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/latlon_join_on_blockid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to add lat lon columns to data.table by reference, joining on blockid — latlon_join_on_blockid","text":"","code":"s2b = copy(testoutput_getblocksnearby_10pts_1miles)  latlon_join_on_blockid(s2b)"},{"path":"https://usepa.github.io/EJAM-open/reference/lat_alias.html","id":null,"dir":"Reference","previous_headings":"","what":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","title":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","text":"lists synonyms 'latitude' 'longitude' used guessing column user-provided tables coordinates","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/lat_alias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","text":"","code":"lat_alias"},{"path":"https://usepa.github.io/EJAM-open/reference/lat_alias.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lat_alias, lon_alias (DATA) Synonyms for lat and lon — lat_alias","text":"object class character length 7.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mact_table.html","id":null,"dir":"Reference","previous_headings":"","what":"mact_table (DATA) MACT NESHAP subparts (the code and the description) — mact_table","title":"mact_table (DATA) MACT NESHAP subparts (the code and the description) — mact_table","text":"data.table one row per MACT subpart BBBBBB ZZZZZZ title category. ECHO download ICIS Air @seealso frs_by_mact","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map2browser.html","id":null,"dir":"Reference","previous_headings":"","what":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","title":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","text":"quick way open map html widget local browser (saved tempfile can share)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map2browser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","text":"","code":"map2browser(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/map2browser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","text":"x output ejam2map() mapfastej() mapfast()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map2browser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","text":"launches local browser show x, also returns name tempfile html widget","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map2browser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"quick way to open a map html widget in local browser (saved as tempfile you can share) — map2browser","text":"","code":"pts = testpoints_100 mapfast(pts)  # out = ejamit(pts, radius = 1) out = testoutput_ejamit_100pts_1miles  # See in RStudio viewer pane ejam2map(out, launch_browser = FALSE) mapfastej(out$results_bysite[c(12,31),]) # \\donttest{  # See in local browser instead ejam2map(out)  # Open folder where interactive map #  .html file is saved, so you can share it: x = ejam2map(out) fname = map2browser(x) # browseURL(normalizePath(dirname(fname))) # to open the temp folder # file.copy(fname, \"./map.html\") # to copy map file to working directory  out <- testoutput_ejscreenapi_plus_5 mapfastej(out) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","title":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","text":"Map - points - Create leaflet html widget map points using table lat lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","text":"","code":"mapfast(   mydf,   radius = 3,   column_names = \"all\",   labels = column_names,   launch_browser = FALSE,   color = \"#03F\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","text":"mydf Typically something like output ejamit()$results_bysite, can also full output ejamit() case uses just $results_bysite table, general mydf can data.frame data.table set points polygons Census FIPS codes. point data defined columns named lat lon, columns latlon_infer() can infer , sitepoints_from_any() ejamit()$results_bysite polygon data spatial data.frame geometry column polygons, shapefile_from_any(), Census units defined FIPS codes column called \"ejam_uniq_id\" (fips), fips States, Counties, Tracts, Blockgroups, cities/towns/Census Designated Places (7 digits including leading zeroes), e.g., names2fips('DE') ejamit(fips='01')$results_bysite. radius miles, converted meters passed leaflet::addCircles() appropriate column_names \"ej\" nice popup made based just key EJScreen indicators. \"\" every column entire mydf table shown popup. vector colnames, shown popups. labels labels used column_names, map popups, like  label: column_name  (ignored column_names ej ) launch_browser optional logical, set TRUE want function launch default browser window show map print temp filepath filename console. Normally map shown default RStudio viewer pane. color color circles polygons","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","text":"plots leaflet map popups columns mydf, returns html widget","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - points - Create leaflet html widget map of points using table with lat lon — mapfast","text":"","code":"pts = testpoints_100 mapfast(pts)  # out = ejamit(pts, radius = 1) out = testoutput_ejamit_100pts_1miles  # See in RStudio viewer pane ejam2map(out, launch_browser = FALSE) mapfastej(out$results_bysite[c(12,31),]) # \\donttest{  # See in local browser instead ejam2map(out)  # Open folder where interactive map #  .html file is saved, so you can share it: x = ejam2map(out) fname = map2browser(x) # browseURL(normalizePath(dirname(fname))) # to open the temp folder # file.copy(fname, \"./map.html\") # to copy map file to working directory  out <- testoutput_ejscreenapi_plus_5 mapfastej(out) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","title":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","text":"Like mapfast() column_names = \"ej\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","text":"","code":"mapfastej(   mydf,   radius = 3,   column_names = \"ej\",   labels = column_names,   launch_browser = FALSE,   color = \"#03F\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","text":"mydf Typically something like output ejamit()$results_bysite, can also full output ejamit() case uses just $results_bysite table, general mydf can data.frame data.table set points polygons Census FIPS codes. point data defined columns named lat lon, columns latlon_infer() can infer , sitepoints_from_any() ejamit()$results_bysite polygon data spatial data.frame geometry column polygons, shapefile_from_any(), Census units defined FIPS codes column called \"ejam_uniq_id\" (fips), fips States, Counties, Tracts, Blockgroups, cities/towns/Census Designated Places (7 digits including leading zeroes), e.g., names2fips('DE') ejamit(fips='01')$results_bysite. radius miles, converted meters passed leaflet::addCircles() appropriate column_names \"ej\" nice popup made based just key EJScreen indicators. \"\" every column entire mydf table shown popup. vector colnames, shown popups. labels labels used column_names, map popups, like  label: column_name  (ignored column_names ej ) launch_browser optional logical, set TRUE want function launch default browser window show map print temp filepath filename console. Normally map shown default RStudio viewer pane. color color circles polygons","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","text":"like mapfast() returns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - points - Create leaflet html widget map of points using EJAM results with EJ stats — mapfastej","text":"","code":"pts = testpoints_100 mapfast(pts)  # out = ejamit(pts, radius = 1) out = testoutput_ejamit_100pts_1miles  # See in RStudio viewer pane ejam2map(out, launch_browser = FALSE) mapfastej(out$results_bysite[c(12,31),]) # \\donttest{  # See in local browser instead ejam2map(out)  # Open folder where interactive map #  .html file is saved, so you can share it: x = ejam2map(out) fname = map2browser(x) # browseURL(normalizePath(dirname(fname))) # to open the temp folder # file.copy(fname, \"./map.html\") # to copy map file to working directory  out <- testoutput_ejscreenapi_plus_5 mapfastej(out) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"Map - County polygons / boundaries - Create leaflet static map results analysis","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"","code":"mapfastej_counties(   mydf,   colorvarname = \"pctile.Demog.Index.Supp\",   colorfills = c(\"yellow\", \"orange\", \"red\"),   colorlabels = c(80, 90, 95),   colorbins = c(80, 90, 95),   colorpalette = c(\"yellow\", \"yellow\", \"orange\", \"red\"),   static_not_leaflet = FALSE,   main = \"Selected Counties\",   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"mydf something like  ejamit(fips = fips_counties_from_statename(\"Kentucky\"), radius = 0)$results_bysite colorvarname colname indicator mydf drives color-coding (alternatively, colorvarname = \"green\" means single specific color , like \"green\") colorfills = c('yellow', 'orange', 'red') colorlabels = c(80, 90, 95) colorbins =  c(80, 90, 95) colorpalette = c(\"yellow\", \"yellow\", \"orange\", \"red\") static_not_leaflet set TRUE use map_shapes_plot() instead map_shapes_leaflet() main title map ... passed map_shapes_plot() relevant","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"leaflet html widget (static_not_leaflet=T, returns just shapes_counties_from_countyfips(mydf$ejam_uniq_id))","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"ASSUMES mydf$ejam_unique_id county FIPS codes","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/mapfastej_counties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - County polygons / boundaries - Create leaflet or static map of results of analysis — mapfastej_counties","text":"","code":"# \\donttest{  fips_ky <- fips_counties_from_statename(\"Kentucky\")  x <- ejamit(fips = fips_ky, radius = 0)  mapfastej_counties(x$results_bysite)  # }  # map_shapes_leaflet(shapes = shapes_counties_from_countyfips(fips_ky))"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast_gg.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","title":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"Map - points - ggplot2 map points USA - basic map","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast_gg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"","code":"mapfast_gg(   mydf = data.frame(lat = 40, lon = -100)[0, ],   dotsize = 1,   ptcolor = \"black\",   xlab = \"Longitude\",   ylab = \"Latitude\",   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast_gg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"mydf data.frame columns named lat lon dotsize optional, size dot representing point ptcolor optional, color dot xlab optional, text x label ylab optional, text y label ... optional, passed ggplot2::labs()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast_gg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"ggplot() object","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/mapfast_gg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - points - ggplot2 map of points in the USA - very basic map — mapfast_gg","text":"","code":"# \\donttest{   mapfast_gg(EJAM::testpoints_10)    pts <- read.table(textConnection(   \"lat lon   39.5624775 -119.7410994   42.38748056 -94.61803333\"   ),   header = TRUE,   as.is = TRUE   )   mapfast_gg(pts)   # str(pts) # lon, not long   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/map_blockgroups_over_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","title":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","text":"Overlay blockgroups near 1 site, plotblocksnearby(returnmap = TRUE)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_blockgroups_over_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","text":"","code":"map_blockgroups_over_blocks(y)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_blockgroups_over_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","text":"y output plotblocksnearby() returnmap = TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_blockgroups_over_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","text":"leaflet map widget","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/map_blockgroups_over_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - Blockgroup polygons / boundaries near 1 site - Create leaflet map — map_blockgroups_over_blocks","text":"","code":"y <- plotblocksnearby(testpoints_10[5,],         radius = 3,         returnmap = TRUE)  map_blockgroups_over_blocks(y)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_counties_in_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","title":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","text":"Basic map county outlines within specified state(s) used shiny app","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_counties_in_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","text":"","code":"map_counties_in_state(   ST = \"DE\",   colorcolumn = c(\"pop\", \"NAME\", \"POP_SQMI\", \"STATE_NAME\")[1],   type = c(\"leaflet\", \"mapview\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_counties_in_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","text":"ST vector one state abbreviations, like ST = \"\"   ST = c(\"de\", \"RI\"), ST = fips2state_abbrev(fips_state_from_statename(c(\"Rhode Island\", \"district columbia\"))) e.g., counties EPA Region 1: ST = stateinfo$ST[stateinfo$REGION == 1] colorcolumn name column use setting colors counties map, must one returned shapes_counties_from_countyfips() like \"STATE_NAME\" type must \"leaflet\" can \"mapview\" installed loaded","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_counties_in_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","text":"map","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_counties_in_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic map of county outlines within specified state(s) Not used by shiny app — map_counties_in_state","text":"","code":"# \\donttest{ map_counties_in_state(ST = c('id', 'mt')) map_counties_in_state(ST = c('id', 'mt'),   colorcolumn = \"STATE_NAME\")  map_counties_in_state(ST = c('id', 'mt'), type = \"mapview\") map_counties_in_state(ST = c('id', 'mt'), type = \"mapview\",   colorcolumn = \"STATE_NAME\")   map_counties_in_state(   ST = c( 'md', 'pa'),    type = \"mapview\", colorcolumn = \"POP_SQMI\") # }"},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":null,"dir":"Reference","previous_headings":"","what":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"helper - map merge ejamit(shapefile = x) output shapefile x","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"","code":"map_ejam_plus_shp(   shp,   out,   radius_buffer = NULL,   circle_color = \"#000080\",   launch_browser = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"shp spatial data.frame output ejamit() radius_buffer optional can obtained circle_color optional launch_browser set TRUE launch browser show map.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"map html widget","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"used server, ejam2map(), mapfast()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_ejam_plus_shp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper - map the merge of ejamit(shapefile = x) output and the shapefile x — map_ejam_plus_shp","text":"","code":"if (FALSE) { # \\dontrun{ shp1 <- shapefile_from_any(file.path(   testdatafolder(), \"shapes/portland_shp.zip\")) ejam2map(ejamit(shapefile = shp1, radius = 0), shp = shp1) shp2 <- testshapes_2 ejam2map(ejamit(shapefile = shp2, radius = 0), shp = shp2) ejam2map(ejamit(shapefile = shp2, radius = 2), shp = shp2)  } # }"},{"path":"https://usepa.github.io/EJAM-open/reference/map_facilities_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - points - Update leaflet map of points, in shiny app — map_facilities_proxy","title":"Map - points - Update leaflet map of points, in shiny app — map_facilities_proxy","text":"update leaflet map within EJAM shiny app uploaded points facilities","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_facilities_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - points - Update leaflet map of points, in shiny app — map_facilities_proxy","text":"","code":"map_facilities_proxy(   mymap,   rad = 3,   highlight = FALSE,   clustered = FALSE,   popup_vec = NULL,   use_marker_clusters = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_facilities_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - points - Update leaflet map of points, in shiny app — map_facilities_proxy","text":"mymap, leafletProxy map object added rad, size drawing circle (buffer search radius) highlight, logical whether highlight overlapping points (defaults FALSE) clustered, vector T/F values point, indicating overlap another popup_vec, vector popup values display points clicked. Length match number rows dataset. use_marker_clusters, boolean whether group points markerClusters. Uses logic shiny app implement n > 1000.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_facilities_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - points - Update leaflet map of points, in shiny app — map_facilities_proxy","text":"leaflet map circles, circleMarkers, basic popup","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_google.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - Open Google Maps in browser — map_google","title":"Map - Open Google Maps in browser — map_google","text":"Map - Open Google Maps browser","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_google.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - Open Google Maps in browser — map_google","text":"","code":"map_google(lat, lon, zoom = 12, point = TRUE, launch_browser = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_google.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - Open Google Maps in browser — map_google","text":"lat Anything can handled sitepoints_from_any(). Leave unspecified interactively browse .xlsx file lat,lon columns, lat can data.frame lat,lon column names case longitude provided, lat = testpoints_10[1,], lat lon can separately provided vectors. lon longitude, omit parameter provide points first parameter. zoom zoomed value 3 5, zoomed default 12 point logical optional, passed url_map_google() launch_browser logical, whether launch browser","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_google.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - Open Google Maps in browser — map_google","text":"opens browser window Google Maps centered specified lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_google.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - Open Google Maps in browser — map_google","text":"","code":"# map_google(testpoints_10[1,])"},{"path":"https://usepa.github.io/EJAM-open/reference/map_headernames.html","id":null,"dir":"Reference","previous_headings":"","what":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","title":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","text":"map_headernames provides metadata indicators EJAM/EJScreen","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_headernames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","text":"","code":"map_headernames"},{"path":"https://usepa.github.io/EJAM-open/reference/map_headernames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","text":"object class data.frame 634 rows 76 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_headernames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","text":"IMPORTANT TABLE provides information variable (indicator), following: names used geodatabase files (original data source) names used outputs EJScreen API names used R code names used short labels graphics names used table headers (long versions provide full descriptions variables) category variable, purposes grouping similar ones like names_d names_d_pctile info rounding decimal places, significant digits, percentage format, etc. method aggregating value across blockgroups (sum, weighted mean, weight, etc.) etc. created spreadsheet name, data-raw folder. Several helper functions used query fixcolnames() many functions rely . can see examples contains like , example: data.frame(t(map_headernames[1:2, ]))","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/map_headernames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"map_headernames provides metadata about all indicators in EJAM/EJScreen — map_headernames","text":"","code":"#   See how many variables are on each list, for example:    # \\donttest{   data.table::setDT(copy(map_headernames))[, .(     variables = .N,      has_apiname = sum(apiname != \"\"),      has_csvname = sum(csvname != \"\"),      has_acsname = sum(acsname != \"\")     ),   keyby = c(\"raw_pctile_avg\", \"DEJ\", \"ratio.to\", \"pctile.\", \"avg.\",  \"varlist\" )]     # Which sources provide which key variables or indicators?     some <- unique(map_headernames$rname[map_headernames$varlist != \"\"     & map_headernames$varlist != \"x_anyother\"])    info <- cbind(    varinfo(some, info = c('api', 'csv', 'acs', 'varlist')),     usastats = some %in% names(usastats),     statestats = some %in% names(statestats))  info <- info[nchar(paste0(info$api, info$csv, info$acs)) > 0, ]  info    # any others    some <- unique(map_headernames$rname[map_headernames$varlist != \"\"     & map_headernames$varlist == \"x_anyother\"])    info <- cbind(    varinfo(some, info = c('api', 'csv', 'acs', 'varlist')),     usastats = some %in% names(usastats),     statestats = some %in% names(statestats))  info <- info[nchar(paste0(info$api, info$csv, info$acs)) > 0, ]  info   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","title":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","text":"Map - polygons - Create leaflet map shapefile, shiny app","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","text":"","code":"map_shapes_leaflet(shapes, color = \"green\", popup = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")), least data.frame can interpreted indicating points via shapefile_from_sitepoints() color passed leaflet::addPolygons() popup passed leaflet::addPolygons()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","text":"html widget leaflet::leaflet()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - polygons - Create leaflet map from shapefile, in shiny app — map_shapes_leaflet","text":"","code":"out = testoutput_ejamit_10pts_1miles out$results_bysite = out$results_bysite[1:2,] map_shapes_leaflet(   ejam2shapefile(out, save=F),   popup = popup_from_ejscreen(out$results_bysite) )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet_proxy.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - polygons - Update leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","title":"Map - polygons - Update leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"Map - polygons - Update leaflet map adding shapefile data, shiny app","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet_proxy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - polygons - Update leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"","code":"map_shapes_leaflet_proxy(mymap, shapes, color = \"green\", popup = shapes$NAME)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet_proxy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - polygons - Update leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"mymap map like leafletProxy() shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) color passed leaflet::addPolygons() popup passed leaflet::addPolygons()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_leaflet_proxy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - polygons - Update leaflet map by adding shapefile data, in shiny app — map_shapes_leaflet_proxy","text":"html widget like leaflet::leafletProxy()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_mapview.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - polygons - Use mapview package if available — map_shapes_mapview","title":"Map - polygons - Use mapview package if available — map_shapes_mapview","text":"Map - polygons - Use mapview package available","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_mapview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - polygons - Use mapview package if available — map_shapes_mapview","text":"","code":"map_shapes_mapview(   shapes,   col.regions = \"green\",   map.types = \"OpenStreetMap\",   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_mapview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - polygons - Use mapview package if available — map_shapes_mapview","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) col.regions passed mapview::mapview() map.types passed  mapview::mapview() ... passed mapview","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_mapview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - polygons - Use mapview package if available — map_shapes_mapview","text":"like output mapview function mapview::mapview(), mapview package installed, used input spatial object via sf::read_sf()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_mapview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map - polygons - Use mapview package if available — map_shapes_mapview","text":"","code":"# \\donttest{   map_shapes_mapview(     shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\"))   ) # }  out = ejamit(testpoints_10[1,], radius = 20) map_shapes_mapview(   ejam2shapefile(out, save=F),   popup = popup_from_ejscreen(out$results_bysite) )"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - polygons - Use base R plot() to map polygons — map_shapes_plot","title":"Map - polygons - Use base R plot() to map polygons — map_shapes_plot","text":"Map - polygons - Use base R plot() map polygons","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - polygons - Use base R plot() to map polygons — map_shapes_plot","text":"","code":"map_shapes_plot(shapes, main = \"Selected Census Units\", ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - polygons - Use base R plot() to map polygons — map_shapes_plot","text":"shapes like shapes_counties_from_countyfips(fips_counties_from_state_abbrev(\"DE\")) main title map ... passed plot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/map_shapes_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - polygons - Use base R plot() to map polygons — map_shapes_plot","text":"Just draws map using plot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata4pins.html","id":null,"dir":"Reference","previous_headings":"","what":"metadata about data object, for pins — metadata4pins","title":"metadata about data object, for pins — metadata4pins","text":"metadata data object, pins","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata4pins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metadata about data object, for pins — metadata4pins","text":"","code":"metadata4pins"},{"path":"https://usepa.github.io/EJAM-open/reference/metadata4pins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"metadata about data object, for pins — metadata4pins","text":"object class data.frame 14 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata4pins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"metadata about data object, for pins — metadata4pins","text":"metadata description dataset, data EJAM package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function for package to set metadata attributes of a dataset — metadata_add","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"Together metadata_mapping script, can used annually update metadata datasets package. just makes easier set metadata attributes similarly number data elements, example, add new update existing attributes.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"","code":"metadata_add(x, update_date_saved_in_package = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"x dataset (object) whose metadata (stored attributes) want update create EJAM, EJScreen, dataset versions release dates tracked DESCRIPTION @param update_date_saved_in_package set FALSE avoid changing attribute","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"returns x new altered attributes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"update ejam_package_version attribute every data item: metadata_update_attr() utility used scripts EJAM/data-raw/ add metadata objects like x use_data(x, overwrite=T)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function for package to set metadata attributes of a dataset — metadata_add","text":"","code":"# metadata_check() # internal function   x <- data.frame(a=1:10,b=1001:1010)   # x <- metadata_add(x) # internal function   attributes(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_check.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function in updating the package metadata — metadata_check","title":"helper function in updating the package metadata — metadata_check","text":"Quick dirty helper development, check attributes data files relevant packages. loads unloaded packages needed, might want , coded able check attributes without .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function in updating the package metadata — metadata_check","text":"","code":"metadata_check(   packages = EJAM::ejampackages,   datasets = \"all\",   which = c(\"ejam_package_version\", \"date_saved_in_package\", \"date_downloaded\",     \"ejscreen_version\", \"ejscreen_releasedate\", \"acs_releasedate\", \"acs_version\",     \"census_version\"),   grepdatasets = FALSE,   loadifnotloaded = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function in updating the package metadata — metadata_check","text":"packages Optional. e.g. 'EJAMejscreendata', can vector character strings, specified, default report EJAM::ejampackages. set NULL, reports objects already attached. datasets optional, \"\" means data objects exported. Can vector character names ones check like c(\"bgpts\", \"blockpoints\") Optional vector (list) strings, attributes. Default typical ones used EJAM-related packages currently. grepdatasets optional, set TRUE, datasets query use via grep identify datasets check. always uses ignore.case=TRUE . loadifnotloaded Optional control func temporarily attach packages already loaded.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/metadata_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"helper function in updating the package metadata — metadata_check","text":"","code":"# tail(metadata_check( ))   metadata_check(packages = NULL)    x <- metadata_check(\"EJAM\")   x[x$has_metadata == TRUE, ]   table(x$has_metadata)"},{"path":"https://usepa.github.io/EJAM-open/reference/meters_per_mile.html","id":null,"dir":"Reference","previous_headings":"","what":"how many meters are in one mile (for conversions between units) — meters_per_mile","title":"how many meters are in one mile (for conversions between units) — meters_per_mile","text":"1609.344 meters per mile","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/meters_per_mile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"how many meters are in one mile (for conversions between units) — meters_per_mile","text":"","code":"meters_per_mile"},{"path":"https://usepa.github.io/EJAM-open/reference/meters_per_mile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"how many meters are in one mile (for conversions between units) — meters_per_mile","text":"object class numeric length 1.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelDoaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression model to predict runtime for doaggregate — modelDoaggregate","title":"Regression model to predict runtime for doaggregate — modelDoaggregate","text":"Modeled runtime doaggregate ejamit based 100 runs random parameters. Use models make predictions app_server","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelDoaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression model to predict runtime for doaggregate — modelDoaggregate","text":"","code":"modelDoaggregate"},{"path":"https://usepa.github.io/EJAM-open/reference/modelDoaggregate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regression model to predict runtime for doaggregate — modelDoaggregate","text":"object class lm length 12.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelDoaggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression model to predict runtime for doaggregate — modelDoaggregate","text":"Ejamit's runtime modeled radius number rows input dataset, doaggregate runtime modeled rows getblocksnearby output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelEjamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression model to predict runtime for ejamit — modelEjamit","title":"Regression model to predict runtime for ejamit — modelEjamit","text":"Modeled runtime doaggregate ejamitbased 100 runs random parameters. Use models make predictions app_server","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelEjamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression model to predict runtime for ejamit — modelEjamit","text":"","code":"modelEjamit"},{"path":"https://usepa.github.io/EJAM-open/reference/modelEjamit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regression model to predict runtime for ejamit — modelEjamit","text":"object class lm length 12.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/modelEjamit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression model to predict runtime for ejamit — modelEjamit","text":"Ejamit's runtime modeled radius number rows input dataset, doaggregate runtime modeled rows getblocksnearby output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/NAICS.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","title":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","text":"NAICS (DATA) named list NAICS code numbers industry name ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/NAICS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS (DATA) named list of all NAICS code numbers and industry name for each — NAICS","text":"see https://naics.com","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"NAICS - query NAICS codes also see children (subcategories) ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"","code":"naics2children(codes, allcodes = EJAM::NAICS, quiet = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"codes vector numerical character allcodes Optional (already loaded package) - dataset codes quiet whether avoid printing results console","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"vector codes names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"Starts shortest (highest level) codes. Since tied nchar, branches zero overlap, . , get children = rows parentcode == substr(allcodes, 1, nchar(parentcode)) Put together list codes want include far. next longest set codes original list codes, thing. continue done 5-digit ones get 6-digit children. Take unique(allthat) table(nchar(.character(NAICS))) 2    3    4    5    6 17   99  311  709 1057","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics2children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - query NAICS codes and also see all children (subcategories) of any of those — naics2children","text":"","code":"naics2children(211)   naics_from_code(211)   naics_from_code(211, children = TRUE)   NAICS[211][1:3] # wrong   NAICS[NAICS == 211]   NAICS[\"211 - Oil and Gas Extraction\"]"},{"path":"https://usepa.github.io/EJAM-open/reference/naicstable.html","id":null,"dir":"Reference","previous_headings":"","what":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site — naicstable","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site — naicstable","text":"data.table NAICS code(s) industry names EPA-regulated site Facility Registry Service Also 2,3,4,5,6-digit NAICS code falls , relevant given length","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naicstable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site — naicstable","text":"","code":"naicstable"},{"path":"https://usepa.github.io/EJAM-open/reference/naicstable.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site — naicstable","text":"object class data.table (inherits data.frame) 2200 rows 8 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naicstable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"naicstable (DATA) data.table of NAICS code(s) and industry names for each EPA-regulated site — naicstable","text":"similar data file EJAM::NAICS useful format newer functions work . see NAICS.com","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"Easy way list 2-digit NAICS (17 categories), level","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"","code":"naics_categories(digits = 2, dataset = EJAM::NAICS)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"digits default 2, 2-digits NAICS, top level, 6. dataset default dataset called NAICS, installed package. see NAICS  Check attr(NAICS, 'year')","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"matrix 1 column 2-digit codes rownames look like \"22 - Utilities\" etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"Also see https://www.naics.com/search/ many NAICS codes roughly number digits code: table(nchar(NAICS)) 2    3    4    5    6 17   99  311  709 1057 See https://www.census.gov/naics/","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - See the names of industrial categories and their NAICS code — naics_categories","text":"","code":"naics_categories()"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"naics_counts (DATA) data.frame with regulated facility counts for each industry code — naics_counts","title":"naics_counts (DATA) data.frame with regulated facility counts for each industry code — naics_counts","text":"data.frame regulated facility counts NAICS code, without subcodes, labels include site counts","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"naics_counts (DATA) data.frame with regulated facility counts for each industry code — naics_counts","text":"","code":"naics_counts"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"naics_counts (DATA) data.frame with regulated facility counts for each industry code — naics_counts","text":"object class tbl_df (inherits tbl, data.frame) 2200 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"naics_counts (DATA) data.frame with regulated facility counts for each industry code — naics_counts","text":"available NAICS codes, count sites frs data, including subcodes. Used EJAM shiny app dropdown menu.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_download.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Script to download NAICS file with code and name of sector — naics_download","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"See source code. Mostly just short script get 2017 2022 codes names. See <'https://www.census.gov/naics/?48967'>","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"","code":"naics_download(   year = 2017,   urlpattern = \"https://www.census.gov/naics/YYYYNAICS/2-6%20digit_YYYY_Codes.xlsx\",   destfile = paste0(\"~/Downloads/\", year, \"NAICS.xlsx\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"year vintage NAICS codes use, 2012, 2017, 2022 urlpattern full url xlsx file use, YYYY instead year destfile full path name file save locally","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Script to download NAICS file with code and name of sector — naics_download","text":"names list year attribute","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_findwebscrape.html","id":null,"dir":"Reference","previous_headings":"","what":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","title":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","text":"finds just naics_from_any() , since needs exact match looks naics.com website lists various aliases sector.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_findwebscrape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","text":"","code":"naics_findwebscrape(query)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_findwebscrape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","text":"query text like \"gasoline\" \"copper smelting\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_findwebscrape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","text":"data.frame info found, naics title","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_findwebscrape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"for query term, show list of roughly matching NAICS, scraped from web — naics_findwebscrape","text":"","code":"# naics_from_any(\"copper smelting\")  # naics_from_any(\"copper smelting\", website_scrape=TRUE)  # browseURL(naics_from_any(\"copper smelting\", website_url=TRUE) )    url_naics.com(\"copper smelting\")   # \\donttest{   naics_findwebscrape(\"copper smelting\")   browseURL(url_naics.com(\"copper smelting\"))   browseURL(naics_url_of_code(326))   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"Find industry names codes searching queried code(s) text","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"","code":"naics_from_any(   query,   children = FALSE,   ignore.case = TRUE,   fixed = FALSE,   website_scrape = FALSE,   website_url = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"query query string(s) /number(s), vector NAICS codes industry names regular expression partial words children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl() website_scrape whether scrape info NAICS website return table codes names match (web query uses synonyms gets hits) website_url whether return URL webpage info NAICS (web query uses synonyms gets hits)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"subset naicstable data.table (just codes column)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"Finding right NAICS/SIC finding right sites complicated. See discussion latlon_from_naics().","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_any.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - General way to search for industry names and NAICS codes — naics_from_any","text":"","code":"# Also see vignettes for many more examples, and discussion.   naics_categories()      naics_from_any(\"textile mills\", children = FALSE)   naics_from_any(\"textile mills\", children = TRUE)    frs_from_naics(\"textile mills\", children = FALSE)   frs_from_naics(\"textile mills\", children = TRUE)      # \\donttest{   naics_from_any(naics_categories(3))[order(name),.(name,code)][1:10,]   naics_from_any(naics_categories(3))[order(code),.(code,name)][1:10,]   naics_from_code(211)   naicstable[code==211,]   naics_subcodes_from_code(211)   naics_from_code(211,  children = TRUE)   naicstable[n3==211,]   NAICS[211][1:3] # wrong   NAICS[NAICS == 211]   NAICS[\"211 - Oil and Gas Extraction\"]   naics_from_any(\"plastics and rubber\")[,.(name,code)]  naics_from_any(326)  naics_from_any(326, children = T)[,.(code,name)]  naics_from_any(\"plastics\", children=T)[,unique(n3)]  naics_from_any(\"pig\")  naics_from_any(\"pig \") # space after g   # naics_from_any(\"copper smelting\")  # naics_from_any(\"copper smelting\", website_scrape=TRUE)  # browseURL(naics_from_any(\"copper smelting\", website_url=TRUE) )   a = naics_from_any(\"plastics\")  b = naics_from_any(\"rubber\")  fintersect(a,b)[,.(name,code)] #  a AND b  funion(a,b)[,.(name,code)]     #  a OR  b  naics_subcodes_from_code(funion(a,b)[,code])[,.(name,code)]   #  plus children  naics_from_any(funion(a,b)[,code], children=T)[,.(name,code)] #  same   NROW(naics_from_any(325)) #[1] 1  NROW(naics_from_any(325, children = T)) #[1] 54  NROW(naics_from_any(\"chem\")) #[1] 20  NROW(naics_from_any(\"chem\", children = T)) #[1] 104 # }"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"See naics_from_any() uses ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"","code":"naics_from_code(mycodes, children = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"mycodes vector numeric NAICS codes. see https://naics.com children logical, TRUE, also return subcategories - NAICS starts digits","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - search for industry names by NAICS code(s), 2-6 digits long each — naics_from_code","text":"subset naicstable data.table (just codes column)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_federalregister.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register by reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register by reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"NAICS - Try extract NAICS affected rule published Federal Register reading NAICS listed near top preamble - DRAFT WORK PROGRESS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_federalregister.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register by reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"","code":"naics_from_federalregister(naics_text_copy_from_fr)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_federalregister.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Try to extract which NAICS could be affected by a rule published in the Federal Register by reading the NAICS listed near the top of the preamble - DRAFT WORK IN PROGRESS — naics_from_federalregister","text":"naics_text_copy_from_fr","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"query parts words, etc. industry name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"","code":"naics_from_name(mynames, children = FALSE, ignore.case = TRUE, fixed = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"mynames query string, vector NAICS industry names regular expression partial words. See https://naics.com children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"subset naicstable data.table (just codes column)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"See naics_from_any() uses ","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_from_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - Search for industry names and NAICS codes by query string — naics_from_name","text":"","code":"data.table::fintersect(naics_from_any( \"manufac\"), naics_from_any(\"chem\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_is.valid.html","id":null,"dir":"Reference","previous_headings":"","what":"validate industry NAICS codes — naics_is.valid","title":"validate industry NAICS codes — naics_is.valid","text":"validate industry NAICS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_is.valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate industry NAICS codes — naics_is.valid","text":"","code":"naics_is.valid(code)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_is.valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate industry NAICS codes — naics_is.valid","text":"code vector one numeric character codes like c(22, 111, 4239, 423860)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_is.valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate industry NAICS codes — naics_is.valid","text":"logical vector, TRUE means valid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_is.valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"validate industry NAICS codes — naics_is.valid","text":"","code":"naics_is.valid(c(22, \"022\", \" 22\", 111, \"4239\", 423860))   # table(naics_is.valid(frs_by_naics$NAICS)) / NROW(frs_by_naics)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"Given 3-digit NAICS code, example, get NAICS start digits.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"","code":"naics_subcodes_from_code(mycodes)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"mycodes NAICS codes vector, 2 6 digits . See https://naics.com","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"subset naicstable data.table (just codes column)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"similar idea naics2children() robust See naics_from_any() uses ","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_subcodes_from_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NAICS - find subcategories of the given overall NAICS industry code(s) — naics_subcodes_from_code","text":"","code":"naics_categories()"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_url_of_code.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"See (https://naics.com) information NAICS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_url_of_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"","code":"naics_url_of_code(naics)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_url_of_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"naics vector one NAICS codes, like 11,\"31-33\",325","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_url_of_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Get URL for page with info about industry sector(s) by NAICS — naics_url_of_code","text":"vector URLs strings like https://www.naics.com/six-digit-naics/?v=2017&code=22","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/naics_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"NAICS - Validate NAICS uploads — naics_validation","title":"NAICS - Validate NAICS uploads — naics_validation","text":"Validates prepares echo uploads","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NAICS - Validate NAICS uploads — naics_validation","text":"","code":"naics_validation(naics_enter, naics_select)"},{"path":"https://usepa.github.io/EJAM-open/reference/naics_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NAICS - Validate NAICS uploads — naics_validation","text":"naics_enter vector naics naics_select single value","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/naics_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NAICS - Validate NAICS uploads — naics_validation","text":"boolean value","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"Get FIPS codes names states counties inverse fips2name(), 1--1 map statename, ST, countyname FIPS ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"","code":"name2fips(   x,   exact = FALSE,   usegrep = FALSE,   geocoding = FALSE,   details = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"x vector 1 exact names states ST abbreviations countynames include comma state abbrev., like \"Harris County, TX\" (ST separate fips_counties_from_countyname()) Ignores case. exact TRUE, query must match exactly set FALSE want partial matching possibly one result query term x usegrep passed fips_place_from_placename() TRUE, helps find partial matches geocoding passed fips_place_from_placename() details set TRUE return table details places instead just fips vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"vector character fips codes (unless details = TRUE)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"CAUTION - cities/ towns/ CDPs/ etc. (census places), currently assumes placename,ST occurs per state, exceptions like townships PA use name 2 different counties state.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/name2fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get FIPS codes from names of states or counties inverse of fips2name(), 1-to-1 map statename, ST, countyname to FIPS of each — name2fips","text":"","code":"name2fips(c(\"de\", \"NY\")) name2fips(\"rhode island\") name2fips(c(\"delaware\", \"NY\")) name2fips(c(\"Magnolia town, DE\", \"Delaware City city, DE\")) name2fips(c('denver',  \"new york\" ), exact = F)"},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator names within a varlist like names_d — namesbyvarlist","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"Get indicator names within varlist like names_d","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"","code":"namesbyvarlist(varlist, nametype = c(\"rname\", \"longname\", \"apiname\")[1])"},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"varlist one character string like \"names_d\", vector nametype vector 1 names columns map_headernames, shortcut type can api, csv, r, original, long, shortlabel","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"data.frame one row per indicator, one col per nametype column identifying varlist","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"varlist2names() way just get vector variable names even varlist stored separate data object found map_headernames$varlist column: varlist2names(c('names_d', 'names_d_subgroups')) c(names_d, names_d_subgroups)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/namesbyvarlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator names within a varlist like names_d — namesbyvarlist","text":"","code":"unique(map_headernames$varlist)    namesbyvarlist('names_e_avg', 'rname')  namesbyvarlist('names_d')  namesbyvarlist('names_d', 'r')  namesbyvarlist('names_d', 'long')  namesbyvarlist('names_d', 'shortlabel')    namesbyvarlist( 'names_e_pctile', c('r', 'longname'))      namesbyvarlist(c('names_e_pctile', 'names_e_state_pctile'),     c('varlist', 'rname', 'apiname', 'csvname', 'shortlabel', 'longname'))"},{"path":"https://usepa.github.io/EJAM-open/reference/names_age.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_age","title":"a list of variable names for internal use in EJAM — names_age","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_age","text":"","code":"names_age"},{"path":"https://usepa.github.io/EJAM-open/reference/names_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_age","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_age","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_age_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_age_count","title":"a list of variable names for internal use in EJAM — names_age_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_age_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_age_count","text":"","code":"names_age_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_age_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_age_count","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_age_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_age_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_all.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_all","title":"a list of variable names for internal use in EJAM — names_all","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_all","text":"","code":"names_all"},{"path":"https://usepa.github.io/EJAM-open/reference/names_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_all","text":"object class character length 562.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_all_r.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_all_r","title":"a list of variable names for internal use in EJAM — names_all_r","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_all_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_all_r","text":"","code":"names_all_r"},{"path":"https://usepa.github.io/EJAM-open/reference/names_all_r.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_all_r","text":"object class character length 560.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_climate","title":"a list of variable names for internal use in EJAM — names_climate","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_climate","text":"","code":"names_climate"},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_climate","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_climate","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_climate_avg","title":"a list of variable names for internal use in EJAM — names_climate_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_climate_avg","text":"","code":"names_climate_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_climate_avg","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_climate_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_climate_pctile","title":"a list of variable names for internal use in EJAM — names_climate_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_climate_pctile","text":"","code":"names_climate_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_climate_pctile","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_climate_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_climate_state_avg","title":"a list of variable names for internal use in EJAM — names_climate_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_climate_state_avg","text":"","code":"names_climate_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_climate_state_avg","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_climate_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_climate_state_pctile","title":"a list of variable names for internal use in EJAM — names_climate_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_climate_state_pctile","text":"","code":"names_climate_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_climate_state_pctile","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_climate_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_climate_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_community.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_community","title":"a list of variable names for internal use in EJAM — names_community","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_community.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_community","text":"","code":"names_community"},{"path":"https://usepa.github.io/EJAM-open/reference/names_community.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_community","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_community.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_community","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_community_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_community_count","title":"a list of variable names for internal use in EJAM — names_community_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_community_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_community_count","text":"","code":"names_community_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_community_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_community_count","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_community_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_community_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_countabove.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_countabove","title":"a list of variable names for internal use in EJAM — names_countabove","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_countabove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_countabove","text":"","code":"names_countabove"},{"path":"https://usepa.github.io/EJAM-open/reference/names_countabove.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_countabove","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_countabove.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_countabove","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_criticalservice","title":"a list of variable names for internal use in EJAM — names_criticalservice","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_criticalservice","text":"","code":"names_criticalservice"},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_criticalservice","text":"object class character length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_criticalservice","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_criticalservice_avg","title":"a list of variable names for internal use in EJAM — names_criticalservice_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_criticalservice_avg","text":"","code":"names_criticalservice_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_criticalservice_avg","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_criticalservice_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_criticalservice_pctile","title":"a list of variable names for internal use in EJAM — names_criticalservice_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_criticalservice_pctile","text":"","code":"names_criticalservice_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_criticalservice_pctile","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_criticalservice_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_criticalservice_state_avg","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_avg","text":"","code":"names_criticalservice_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_avg","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_criticalservice_state_pctile","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_pctile","text":"","code":"names_criticalservice_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_pctile","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_criticalservice_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_criticalservice_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d","title":"a list of variable names for internal use in EJAM — names_d","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d","text":"","code":"names_d"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_avg","title":"a list of variable names for internal use in EJAM — names_d_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_avg","text":"","code":"names_d_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_avg","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_count","title":"a list of variable names for internal use in EJAM — names_d_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_count","text":"","code":"names_d_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_count","text":"object class character length 7.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_demogindexstate.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_demogindexstate","title":"a list of variable names for internal use in EJAM — names_d_demogindexstate","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_demogindexstate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_demogindexstate","text":"","code":"names_d_demogindexstate"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_demogindexstate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_demogindexstate","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_demogindexstate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_demogindexstate","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_extra","title":"a list of variable names for internal use in EJAM — names_d_extra","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_extra","text":"","code":"names_d_extra"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_extra","text":"object class character length 1.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_extra","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_extra_count","title":"a list of variable names for internal use in EJAM — names_d_extra_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_extra_count","text":"","code":"names_d_extra_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_extra_count","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_extra_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_extra_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_language","title":"a list of variable names for internal use in EJAM — names_d_language","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_language","text":"","code":"names_d_language"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_language","text":"object class character length 14.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_language","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_languageli","title":"a list of variable names for internal use in EJAM — names_d_languageli","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_languageli","text":"","code":"names_d_languageli"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_languageli","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_languageli","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_languageli_count","title":"a list of variable names for internal use in EJAM — names_d_languageli_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_languageli_count","text":"","code":"names_d_languageli_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_languageli_count","text":"object class character length 4.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_languageli_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_languageli_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_language_count","title":"a list of variable names for internal use in EJAM — names_d_language_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_language_count","text":"","code":"names_d_language_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_language_count","text":"object class character length 7.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_language_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_language_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_other_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_other_count","title":"a list of variable names for internal use in EJAM — names_d_other_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_other_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_other_count","text":"","code":"names_d_other_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_other_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_other_count","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_other_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_other_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_pctile","title":"a list of variable names for internal use in EJAM — names_d_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_pctile","text":"","code":"names_d_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_pctile","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_avg","text":"","code":"names_d_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_avg","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_state_avg","text":"","code":"names_d_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_state_avg","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_state_avg","title":"a list of variable names for internal use in EJAM — names_d_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_state_avg","text":"","code":"names_d_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_state_avg","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_state_pctile","title":"a list of variable names for internal use in EJAM — names_d_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_state_pctile","text":"","code":"names_d_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_state_pctile","text":"object class character length 9.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups","title":"a list of variable names for internal use in EJAM — names_d_subgroups","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups","text":"","code":"names_d_subgroups"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone","text":"","code":"names_d_subgroups_alone"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_avg","text":"","code":"names_d_subgroups_alone_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_count","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_count","text":"","code":"names_d_subgroups_alone_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_count","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_pctile","text":"","code":"names_d_subgroups_alone_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_avg","text":"","code":"names_d_subgroups_alone_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_state_avg","text":"","code":"names_d_subgroups_alone_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_avg","text":"","code":"names_d_subgroups_alone_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_pctile","text":"","code":"names_d_subgroups_alone_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_alone_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_alone_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_avg","text":"","code":"names_d_subgroups_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_count","title":"a list of variable names for internal use in EJAM — names_d_subgroups_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_count","text":"","code":"names_d_subgroups_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_count","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh","text":"","code":"names_d_subgroups_nh"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_avg","text":"","code":"names_d_subgroups_nh_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_count","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_count","text":"","code":"names_d_subgroups_nh_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_count","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_pctile","text":"","code":"names_d_subgroups_nh_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_avg","text":"","code":"names_d_subgroups_nh_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_state_avg","text":"","code":"names_d_subgroups_nh_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_avg","text":"","code":"names_d_subgroups_nh_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_pctile","text":"","code":"names_d_subgroups_nh_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_nh_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_nh_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_pctile","text":"","code":"names_d_subgroups_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_avg","text":"","code":"names_d_subgroups_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_state_avg","text":"","code":"names_d_subgroups_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_state_avg","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_avg","text":"","code":"names_d_subgroups_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_avg","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_d_subgroups_state_pctile","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_pctile","text":"","code":"names_d_subgroups_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_pctile","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_d_subgroups_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_d_subgroups_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e","title":"a list of variable names for internal use in EJAM — names_e","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e","text":"","code":"names_e"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej","title":"a list of variable names for internal use in EJAM — names_ej","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej","text":"","code":"names_ej"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_pctile","title":"a list of variable names for internal use in EJAM — names_ej_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_pctile","text":"","code":"names_ej_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_state","title":"a list of variable names for internal use in EJAM — names_ej_state","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_state","text":"","code":"names_ej_state"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_state","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_state","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_state_pctile","title":"a list of variable names for internal use in EJAM — names_ej_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_state_pctile","text":"","code":"names_ej_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_state_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_supp","title":"a list of variable names for internal use in EJAM — names_ej_supp","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_supp","text":"","code":"names_ej_supp"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_supp","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_supp","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_supp_pctile","title":"a list of variable names for internal use in EJAM — names_ej_supp_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_supp_pctile","text":"","code":"names_ej_supp_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_supp_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_supp_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_supp_state","title":"a list of variable names for internal use in EJAM — names_ej_supp_state","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_supp_state","text":"","code":"names_ej_supp_state"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_supp_state","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_supp_state","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_ej_supp_state_pctile","title":"a list of variable names for internal use in EJAM — names_ej_supp_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_ej_supp_state_pctile","text":"","code":"names_ej_supp_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_ej_supp_state_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_ej_supp_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_ej_supp_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_avg","title":"a list of variable names for internal use in EJAM — names_e_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_avg","text":"","code":"names_e_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_avg","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_other.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_other","title":"a list of variable names for internal use in EJAM — names_e_other","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_other.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_other","text":"","code":"names_e_other"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_other.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_other","text":"object class character length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_other.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_other","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_pctile","title":"a list of variable names for internal use in EJAM — names_e_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_pctile","text":"","code":"names_e_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_avg","text":"","code":"names_e_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_avg","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_state_avg","text":"","code":"names_e_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_state_avg","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_state_avg","title":"a list of variable names for internal use in EJAM — names_e_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_state_avg","text":"","code":"names_e_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_state_avg","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_e_state_pctile","title":"a list of variable names for internal use in EJAM — names_e_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_e_state_pctile","text":"","code":"names_e_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_e_state_pctile","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_e_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_e_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_featuresinarea.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_featuresinarea","title":"a list of variable names for internal use in EJAM — names_featuresinarea","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_featuresinarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_featuresinarea","text":"","code":"names_featuresinarea"},{"path":"https://usepa.github.io/EJAM-open/reference/names_featuresinarea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_featuresinarea","text":"object class character length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_featuresinarea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_featuresinarea","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_flag","title":"a list of variable names for internal use in EJAM — names_flag","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_flag","text":"","code":"names_flag"},{"path":"https://usepa.github.io/EJAM-open/reference/names_flag.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_flag","text":"object class character length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_flag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_flag","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_geo.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_geo","title":"a list of variable names for internal use in EJAM — names_geo","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_geo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_geo","text":"","code":"names_geo"},{"path":"https://usepa.github.io/EJAM-open/reference/names_geo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_geo","text":"object class character length 26.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_geo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_geo","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health","title":"a list of variable names for internal use in EJAM — names_health","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health","text":"","code":"names_health"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health","text":"object class character length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_avg","title":"a list of variable names for internal use in EJAM — names_health_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_avg","text":"","code":"names_health_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_avg","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_count.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_count","title":"a list of variable names for internal use in EJAM — names_health_count","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_count","text":"","code":"names_health_count"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_count","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_count","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_pctile","title":"a list of variable names for internal use in EJAM — names_health_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_pctile","text":"","code":"names_health_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_pctile","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_avg","text":"","code":"names_health_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_avg","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_state_avg","text":"","code":"names_health_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_state_avg","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_ratio_to_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_ratio_to_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_state_avg","title":"a list of variable names for internal use in EJAM — names_health_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_state_avg","text":"","code":"names_health_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_state_avg","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_state_avg","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_pctile.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_health_state_pctile","title":"a list of variable names for internal use in EJAM — names_health_state_pctile","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_pctile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_health_state_pctile","text":"","code":"names_health_state_pctile"},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_pctile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_health_state_pctile","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_health_state_pctile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_health_state_pctile","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_misc.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_misc","title":"a list of variable names for internal use in EJAM — names_misc","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_misc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_misc","text":"","code":"names_misc"},{"path":"https://usepa.github.io/EJAM-open/reference/names_misc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_misc","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_misc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_misc","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_blockgroupstats.html","id":null,"dir":"Reference","previous_headings":"","what":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_blockgroupstats","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_blockgroupstats","text":"indicators percentages stored 0-1 0-100, blockgroupstats","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_blockgroupstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_blockgroupstats","text":"","code":"names_pct_as_fraction_blockgroupstats"},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_blockgroupstats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_blockgroupstats","text":"object class character length 51.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejamit","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejamit","text":"indicators percentages stored 0-1 0-100, blockgroupstats","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejamit","text":"","code":"names_pct_as_fraction_ejamit"},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejamit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejamit","text":"object class character length 82.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejscreenit.html","id":null,"dir":"Reference","previous_headings":"","what":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejscreenit","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejscreenit","text":"indicators percentages stored 0-1 0-100, blockgroupstats","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejscreenit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejscreenit","text":"","code":"names_pct_as_fraction_ejscreenit"},{"path":"https://usepa.github.io/EJAM-open/reference/names_pct_as_fraction_ejscreenit.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"which indicators are percentages stored as 0-1 not 0-100, in blockgroupstats — names_pct_as_fraction_ejscreenit","text":"object class character length 13.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_sitesinarea.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_sitesinarea","title":"a list of variable names for internal use in EJAM — names_sitesinarea","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_sitesinarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_sitesinarea","text":"","code":"names_sitesinarea"},{"path":"https://usepa.github.io/EJAM-open/reference/names_sitesinarea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_sitesinarea","text":"object class character length 6.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_sitesinarea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a list of variable names for internal use in EJAM — names_sitesinarea","text":"see groups variables: unique(map_headernames$varlist)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_these.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_these","title":"a list of variable names for internal use in EJAM — names_these","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_these","text":"","code":"names_these"},{"path":"https://usepa.github.io/EJAM-open/reference/names_these.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_these","text":"object class character length 30.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_these_avg","title":"a list of variable names for internal use in EJAM — names_these_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_these_avg","text":"","code":"names_these_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_these_avg","text":"object class character length 30.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_these_ratio_to_avg","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_avg","text":"","code":"names_these_ratio_to_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_avg","text":"object class character length 30.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_these_ratio_to_state_avg","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_state_avg","text":"","code":"names_these_ratio_to_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_ratio_to_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_these_ratio_to_state_avg","text":"object class character length 30.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_state_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_these_state_avg","title":"a list of variable names for internal use in EJAM — names_these_state_avg","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_state_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_these_state_avg","text":"","code":"names_these_state_avg"},{"path":"https://usepa.github.io/EJAM-open/reference/names_these_state_avg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_these_state_avg","text":"object class character length 30.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":null,"dir":"Reference","previous_headings":"","what":"See which of the lists of names a single term appears in — names_whichlist","title":"See which of the lists of names a single term appears in — names_whichlist","text":"See lists names single term appears ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which of the lists of names a single term appears in — names_whichlist","text":"","code":"names_whichlist(   x,   exact = T,   grepmatching = T,   ignore.case.exact = FALSE,   ignore.case.grep = FALSE,   keylists = F,   exactonly = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which of the lists of names a single term appears in — names_whichlist","text":"x term, like part variable name, state.avg exact whether look exact matches grepmatching whether look matches via grep (partial match) ignore.case.exact whether ignore capitalization exact matches ignore.case.grep passed grep ignore.case param keylists true, report key lists friendly, , , need types. exactonly limit output rows exact matches","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which of the lists of names a single term appears in — names_whichlist","text":"data.frame whichlist, exactmatch, grepmatch, grephits (examples)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"See which of the lists of names a single term appears in — names_whichlist","text":"EJAM::namez list lists names used indicators variables, namez$d_subgroups_state_pctile vector terms like \"state.pctile.pcthisp\", \"state.pctile.pctnhba\", etc.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"See which of the lists of names a single term appears in — names_whichlist","text":"","code":"x <- names_whichlist(\"rsei\", ignore.case.exact = T, ignore.case.grep = T)    subset(x, !grepl(\"friendly\", x$whichlist))        subset(x,  grepl(\"friendly\", x$whichlist))    subset(namez, names(namez) != \"all_r\" & names(namez) %in%       subset(x, x$grepmatch == \"yes\" & !grepl(\"friendly\", x$whichlist))$whichlist  )    grep(\"\\\\.eo$\", namez$ej, value = T)"},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"See which lists of names the given indicator names are in — names_whichlist_multi","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"See lists names given indicator names ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"","code":"names_whichlist_multi(x, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"x vector names (query terms) ... passed names_whichlist()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which lists of names the given indicator names are in — names_whichlist_multi","text":"list sets names","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi_key.html","id":null,"dir":"Reference","previous_headings":"","what":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"See key lists names given indicator names ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"","code":"names_whichlist_multi_key(x, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"x vector names ... passed names_whichlist_multi()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_whichlist_multi_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See which key lists of names the given indicator names are in — names_whichlist_multi_key","text":"vector maybe","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/names_wts.html","id":null,"dir":"Reference","previous_headings":"","what":"a list of variable names for internal use in EJAM — names_wts","title":"a list of variable names for internal use in EJAM — names_wts","text":"list variable names internal use EJAM","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/names_wts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a list of variable names for internal use in EJAM — names_wts","text":"","code":"names_wts"},{"path":"https://usepa.github.io/EJAM-open/reference/names_wts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"a list of variable names for internal use in EJAM — names_wts","text":"object class character length 1.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/namez.html","id":null,"dir":"Reference","previous_headings":"","what":"namez (DATA) list of lists of indicator names (complete list in 1 object) — namez","title":"namez (DATA) list of lists of indicator names (complete list in 1 object) — namez","text":"namez (DATA) list lists indicator names (complete list 1 object)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/namez.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"namez (DATA) list of lists of indicator names (complete list in 1 object) — namez","text":"yet implemented/used EJAM 7/2024","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/offline.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to check if internet connection is not available — offline","title":"utility to check if internet connection is not available — offline","text":"utility check internet connection available","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/offline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to check if internet connection is not available — offline","text":"","code":"offline(url = \"r-project.org\")"},{"path":"https://usepa.github.io/EJAM-open/reference/offline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to check if internet connection is not available — offline","text":"url optional URL checked, using curl::nslookup()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/offline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to check if internet connection is not available — offline","text":"logical (TRUE FALSE), TRUE offline, FALSE can connect r-project.org","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","title":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","text":"Extract summary list ejamit() runs multiple distances Get table, one row per distance. Overall summary, site.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","text":"","code":"out_bydistance2results_bydistance(out_bydistance)"},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","text":"out_bydistance list tables output ejamit_compare_distances_fulloutput()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","text":"table can call results_bydistance, like ejamit()$results_overall, 1 row per distance (radius buffer width)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract summary from list of ejamit() runs at multiple distances Get a table, one row per distance. Overall summary, not each site. — out_bydistance2results_bydistance","text":"compile results_bydistance table output ejamit_compare_distances_fulloutput(), using ejamit()$results_overall distance.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance_bysite.html","id":null,"dir":"Reference","previous_headings":"","what":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","title":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","text":"way focus 1 SITE time, radius choices Get list tables, one per site. table row per distance.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance_bysite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","text":"","code":"out_bydistance2results_bydistance_bysite(out_bydistance)"},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance_bysite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","text":"out_bydistance list tables output ejamit_compare_distances_fulloutput()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance_bysite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","text":"LIST can call results_bydistance_bysite (results_bysite_bydistance), list element table 1 site (ejam_uniq_id value) one row per distance (radius buffer width). table format output ejamit_compare_distances() internal function out_bydistance2results_bydistance()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bydistance_bysite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A way to focus on 1 SITE at a time, for a few radius choices Get a list of tables, one per site. Each table has a row per distance. — out_bydistance2results_bydistance_bysite","text":"function might used . Extract/create results_bydistance site, list ejamit() runs multiple distances","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bysite_bydistance.html","id":null,"dir":"Reference","previous_headings":"","what":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","title":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","text":"way focus 1 DISTANCE (RADIUS) time (multi-distance run), list sites Get list tables, one per distance. table row per site.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bysite_bydistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","text":"","code":"out_bydistance2results_bysite_bydistance(out_bydistance)"},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bysite_bydistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","text":"out_bydistance list tables output ejamit_compare_distances_fulloutput()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bysite_bydistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","text":"LIST can call results_bysite_bydistance (results_bydistance_bysite), list element ejamit()$results_bysite unique distance (radius buffer width)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/out_bydistance2results_bysite_bydistance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A way to focus on 1 DISTANCE (RADIUS) at a time (after a multi-distance run), for the list of sites Get a list of tables, one per distance. Each table has a row per site. — out_bydistance2results_bysite_bydistance","text":"function might used . Extract results_bysite distance list ejamit() runs multiple distances","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/pctiles_lookup_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"Utility create lookup table percentiles 0 100 mean indicator State USA total","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pctiles_lookup_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"","code":"pctiles_lookup_create(   x,   zone.vector = NULL,   zoneOverallName = \"USA\",   wts = NULL,   usecollapse = TRUE,   type = 7 )"},{"path":"https://usepa.github.io/EJAM-open/reference/pctiles_lookup_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"x data.frame numeric data. column examined calculate mean,   percentiles, zone zone.vector optional names states regions, example. length wts, rows mydf zoneOverallName optional. Default USA. wts leave default since weighted percentiles blockgroups used EJScreen percentiles anymore usecollapse logical, whether use collapse::fquantile() instead Hmisc package wtd.quantile stats pkg quantile, test fully removing dependency Hmisc also speed . type CHANGE - moot EJScreen/EJAM - SEE SOURCE CODE - Hmisc pkg wtd.quantile type \"1/n\" used past possibly EJScreen (EJScreen longer uses weighted percentiles moot weighted case) collapse pkg fquantile now used avoid Hmisc dependency fquantile type 4 seems Hmisc type \"1/n\" confirmed, function default uses fquantile type 1, inverse ECDF however, seems simpler using type 4 linear interpolation points ECDF! ***  NEED CONFIRM CREATES TABLE DIFFERENT EJSCREEN CREATE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pctiles_lookup_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Utility to create lookup table of percentiles 0 to 100 and mean for each indicator by State or USA total — pctiles_lookup_create","text":"EJScreen assigns indicator block group percentile value via python script, using https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.percentileofscore.html","code":"The way the python function is used as of 2023 is that percentileofscore is 80   80   are less than (NOT equal to) the indicator value   in the specified block group (since kind=\"strict\").   The percentile recorded in the EJScreen dataset is the floor of that,   meaning if the 81.9   The EJScreen python script used to create percentile lookup tables is in a file   called cal_statepctile_0222.py and the key lines of code and functions it uses are    pctile = math.floor(stats.percentileofscore(barray, indicatorscore, kind=\"strict\"))    binvalue = getBinvalue(pctile)    and    def getBinvalue(pct):  if pct is None:   return 0 else:     if pct >= 95:     return 11 elif pct >= 90 and pct < 95:   return 10 elif pct >= 80 and pct < 90:   return 9 elif pct >= 70 and pct < 80:   return 8 elif pct >= 60 and pct < 70:   return 7 elif pct >= 50 and pct < 60:   return 6 elif pct >= 40 and pct < 50:   return 5 elif pct >= 30 and pct < 40:   return 4 elif pct >= 20 and pct < 30:   return 3 elif pct >= 10 and pct < 20:   return 2 else:   return 1"},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"used lookup table convert raw indicator vector percentiles US States.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"","code":"pctile_from_raw_lookup(   myvector,   varname.in.lookup.table,   lookup = usastats,   zone = \"USA\",   quiet = TRUE )  lookup_pctile(   myvector,   varname.in.lookup.table,   lookup = usastats,   zone = \"USA\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"myvector Numeric vector, required. Values look lookup table. varname..lookup.table Character element, required. Name column lookup table look find interval given element myvector values . *** vector provided, must length myvector, 1 value zone can provided. lookup Either lookup must provided, quoted, lookup table called usastats must already memory. lookup table data.frame PCTILE column, REGION column, column whose name value varname..lookup.table use state lookups set lookup=statestats zone Character element (vector long myvector), optional. specified, must appear column called REGION within lookup table, NA returned item looked warning given. example, \"NY\" New York State, \"USA\" national percentiles. quiet set FALSE see details certain scores NA values like 1 state","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"default, returns numeric vector length myvector.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"recoded efficient - use data.table. data.frame lookup table must field called \"PCTILE\" quantiles/percentiles column(s) values fall percentiles. usastats statestats lookup tables. function uses lookup table finds number PCTILE column corresponds specified value (myvector) appears column called varname..lookup.table. function just looks specified value fits values lookup table returns approximate percentile found PCTILE column. value cutpoints listed percentiles 89 90, returns 89, example. value exactly equal cutpoint listed percentile 90, returns percentile 90. value exactly minimum lookup table multiple percentiles lookup listed tied threshold value defining percentile (.e., large percent places score minimum score), percentile gets reported 0, percent places tied minimum score. Note true whether tied value 0 tied minimum value 0. value less cutpoint listed percentile 0, minimum value dataset, still returns 0 percentile, warning value checked less minimum dataset. also handles odd cases, like large percent raw scores tied minimum value, case reports 0 percentile, large percent.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/pctile_from_raw_lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find approx percentiles in lookup table that is in memory — pctile_from_raw_lookup","text":"","code":"# \\donttest{  eg <- dput(         round(as.vector(           unlist(testoutput_ejamit_10pts_1miles$results_overall[ , ..names_d] )),           3)       )  data.frame(value = eg,             pctile = t(testoutput_ejamit_10pts_1miles$results_overall[ , ..names_d_pctile]))  data.frame(value = eg, pctile = lookup_pctile(eg, names_d))     # compare ejscreen API output percentiles to those from this function:   for (vname in c(names_d[c(1,3:6,8:10)] )) {      print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname] / 100, vname,        lookup = usastats)        - testoutput_ejscreenapi_plus_100[,paste0(\"pctile.\",vname)] )   }   for (vname in c(names_e )) {      print(pctile_from_raw_lookup(testoutput_ejscreenapi_plus_100[,vname], vname,        lookup = usastats)          - testoutput_ejscreenapi_plus_100[,paste0(\"pctile.\",vname)] )   } # }"},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":null,"dir":"Reference","previous_headings":"","what":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"plotblocksnearby - Map view Census blocks (centroids) near one sites Utility quickly view one facility points map blocks found nearby","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"","code":"plotblocksnearby(   sitepoints,   radius = 3,   sites2blocks,   siteidvarname = \"ejam_uniq_id\",   usemapfast = TRUE,   returnmap = FALSE,   overlay_blockgroups = FALSE,   maxradius = 31.07,   avoidorphans = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"sitepoints table points lat, lon decimal degrees (data.frame data.table), also just output getblocksnearby() already done. radius optional. miles (Max allowed 32 miles, just 50 kilometers since 31.06856 miles 50 * 1000 / meters_per_mile). sites2blocks optional. provided, used sites2blocks like testoutput_getblocksnearby_10pts_1miles neither sites2blocks sitepoints provided plot returns error. sites2blocks sitepoints provided, uses plot blocks sites (centers circles). sites2blocks provided, sitepoints alone provided, checks sitepoints actually sites2blocks, uses . sites2blocks provided, sitepoints alone provided, sitepoints really sitepoints, runs getblocksnearby() create sites2blocks. sites2blocks provided, sitepoints , bad approximation sitepoints draw circle site center circle. siteidvarname optional. specifies column name sites2blocks unique site id, values also row numbers corresponding sites sitepoints, site appearing sitepoints, sites2blocks appearing per block near site. usemapfast optional. simpler plot FALSE returnmap optional. set TRUE, returns leaflet map object instead tabular info.  needed pass results map_blockgroups_over_blocks() example. overlay_blockgroups optional. set TRUE, also plots overlay blockgroup boundaries. maxradius optional. see getblocksnearby() avoidorphans optional. see getblocksnearby() ... optional. passed mapfast() plot() depending usemapfast, like column_names = \"ej\" better map popups block points","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"invisibly returns sites2blocks like getblocksnearby() ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"Uses getblocksnearby() lat,lon points provided sitepoints, skips looks like user passed output getblocksnearby(), displays map blocks near specified point.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plotblocksnearby.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotblocksnearby - Map view of Census blocks (their centroids) near one or more sites Utility to quickly view one or more facility points on map with the blocks found nearby — plotblocksnearby","text":"","code":"#  see all Census Blocks within 1 mile of 1 site, if already had run getblocksnearby()   getblocks_output <- copy(testoutput_getblocksnearby_10pts_1miles)   if (\"siteid\" %in% names(getblocks_output)) {   siteidvarname <- \"siteid\" # the old default   eg <- getblocks_output[siteid == 1,]   eg2 <- getblocks_output[siteid %in% c(4,10),]   } else {   siteidvarname <- \"ejam_uniq_id\"    eg <- getblocks_output[ejam_uniq_id == 1,]    eg2 <- getblocks_output[ejam_uniq_id %in% c(4,10),]   }    z <-  plotblocksnearby(sitepoints = testpoints_10,       sites2blocks = eg, radius = 1)    # see two sites if already had run getblocksnearby()    z2 <-  plotblocksnearby(sitepoints = testpoints_10[c(4,10),],       sites2blocks = eg2, radius = 1)   # \\donttest{   # See one randomly selected regulated facility from FRS and all Census Blocks within 2 miles:     plotblocksnearby(testpoints_n(1), 2)    # See two sites and all Census Blocks within 5 kilometers     plotblocksnearby(testpoints_2, radius = convert_units(5, from = \"km\", towhat = \"miles\"))   # See 100 sites and all blocks within 1 mile of each -    # Note you have to specify radius here or it uses default that may not match intent    # - and this is a bit slow   plotblocksnearby(     testoutput_ejamit_100pts_1miles$results_bysite[,          c(siteidvarname, \"lat\", \"lon\"), with=FALSE],    radius = 1)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sitegroups.html","id":null,"dir":"Reference","previous_headings":"","what":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","title":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","text":"barplot comparing groups sites 1 indicator, based table grouped site data","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sitegroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","text":"","code":"plot_barplot_sitegroups(   results_bytype,   varname = \"Demog.Index\",   names.arg = NULL,   main = \"Sites by Type\",   xlab = \"Groups or Types of Sites\",   ylab = NULL,   sortby = NULL,   topn = 10,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sitegroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","text":"results_bytype table like ejamit_compare_types_of_places()$results_bytype, table site groups, one row per type (group), column names least varname (\"ejam_uniq_id\" names.arg specified) varname name column results_bytype, bar height names.arg optional vector labels bars, like types sites represented group main optional, barplot xlab optional, barplot ylab optional, barplot, plain English version varname, indicator bar height sortby set FALSE want sorting, increasing vector provides sort order topn optional, show top n groups (site types) – show default – shows top n groups. ... passed barplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sitegroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","text":"barplot()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sitegroups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"barplot comparing groups of sites on 1 indicator, based on table of grouped site data — plot_barplot_sitegroups","text":"","code":"out <- ejamit_compare_types_of_places(testpoints_10[1:4, ],     typeofsite <- c(\"A\", \"B\", \"B\", \"C\"))    cbind(Rows_or_length = sapply(out, NROW))     ejam2barplot_sitegroups(out, \"sitecount_unique\", topn=3, sortby = F)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","title":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","text":"barplot comparing sites 1 indicator, based table site data quick way plot calculated variable site, ejam2barplot_sites() ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","text":"","code":"plot_barplot_sites(   results_bysite,   varname = \"pctlowinc\",   names.arg = NULL,   main = \"Comparison of Sites\",   xlab = \"Sites\",   ylab = NULL,   sortby = NULL,   topn = 5,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","text":"results_bysite table like ejamit()$results_bysite, table sites, one row per site, column names least varname (\"ejam_uniq_id\" names.arg specified) varname name column results_bysite, bar height names.arg optional vector labels bars, like short site names IDs main optional, barplot xlab optional, barplot ylab optional, barplot, plain English version varname, indicator bar height sortby set FALSE want sorting, increasing vector provides sort order topn optional, show top n sites ... passed barplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","text":"barplot()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/plot_barplot_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"barplot comparing sites on 1 indicator, based on table of site data a quick way to plot a calculated variable at each site, which ejam2barplot_sites() can't — plot_barplot_sites","text":"","code":"# Quickly compare top few sites by population count nearby out <- copy(testoutput_ejamit_10pts_1miles) ejam2barplot_sites(out, \"pop\")  # Show all 10, ejam2barplot_sites(out, \"traffic.score\", topn = 10, cex.names = 0.8)  # Sort by site id ejam2barplot_sites(out, \"blockcount_near_site\", topn = 10,   sortby = -1 * out$results_bysite$ejam_uniq_id)  # Plot a calculated variable sites <- copy(out$results_bysite) sites$log_traffic = log10(sites$traffic.score) plot_barplot_sites(sites, \"log_traffic\", ylab = \"Traffic Score (log10 scale)\", topn = 10)  # On a large monitor, 100 sites with legible labels if the window is wide enough ejam2barplot_sites(testoutput_ejamit_100pts_1miles, topn = 100, cex.names = 0.4)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_pctiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","title":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","text":"Boxplots comparing indicators showing varies across sites Visualize mean median etc. several percentile indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_pctiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","text":"","code":"plot_boxplot_pctiles(   out,   vars = names_d_state_pctile,   ylab = \"Percentile in State\",   ranked = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_pctiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","text":"output ejamit() testoutput_ejamit_10pts_1miles vars Typically one : names_d_pctile, names_d_state_pctile, names_d_subgroups_pctile, names_d_subgroups_state_pctile, names_e_pctile, names_e_state_pctile, possibly ratios others, designed plot pctiles. ylab inferred vars normally ranked set FALSE avoid sorting x axis size wtdmeans ... passed boxplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_pctiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","text":"prints means etc. plots","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_pctiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplots comparing a few indicators showing how each varies across sites Visualize mean median etc. for each of several percentile indicators — plot_boxplot_pctiles","text":"","code":"# \\donttest{ bplot = plot_boxplot_pctiles bplot(out, names_d_state_pctile) bplot(out, names_d_subgroups_state_pctile) bplot(out, names_e_state_pctile) bplot(out, names_d_pctile) bplot(out, names_d_subgroups_pctile) bplot(out, names_e_pctile) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"boxplots show range scores vs range US overall","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"","code":"plot_boxplot_ratios(   x,   selected_dvar_colname = varlist2names(\"names_d\")[1],   selected_dvar_nicename = selected_dvar_colname,   towhat_nicename = \"US average\",   maxratio = 5,   wheretext = \"Near\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"x ratios derived data.frame output ejscreen analysis, example:   selected_dvar_colname default first column name x, \"Demog.Index\" given table just ratios named regular indicators, output calc_ratios_to_avg()$ratios_d, tries figure ratios available base name case output ejamit() provided. selected_dvar_nicename default \"short\" name selected_dvar_colname converted using fixcolnames() towhat_nicename default \"US average\" maxratio largest ratio plot case outliers, plot looks better wheretext Use plot subtitle. Default \"Near\" \"Within 5km \" example. number, n, set wheretext \"Within n miles \"","code":"df <- ejscreenit(testpoints_5)$table df <- testoutput_ejscreenapi_plus_5 x <- calc_ratios_to_avg(df)$ratios_d"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"format output ggplot2::ggplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"See ejam2boxplot_ratios() now ratios plots. See plot_boxplot_pctiles() now espec. percentiles. IMPORTANTLY, NOTE uses ratio site USING AVERAGE RESIDENT SITE, BOXPLOT SHOWS ONE DOT PER SITE BOXPLOT POP WTD MEANING SHOWS MEDIAN 75TH PERCENTILE SITE RESIDENT, ETC. function originally used ejscreenit() output, just quick interim solution replaced. assumed colnames r variable names. communicate whether skewed right (high scores might expect) also say X% SITES PEOPLE scores top Y% US range, >= 100-Y percentile. e.g., 20% sites scores least top 5% US scores (/less one might expect leaving aside statistical significance ie whether chance sites randomly picked US block groups people's bg scores)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_boxplot_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"For the outputs of ejscreenit(), get boxplots of Residential Population Percentages across sites as ratios to US means — plot_boxplot_ratios","text":"","code":"# x <- testoutput_ejscreenit_50$table # or   x <- testoutput_ejscreenapi_plus_5   myradius <- x$radius.miles[1]   plot_boxplot_ratios(calc_ratios_to_avg(x)$ratios_d, wheretext = myradius)   #plot_boxplot_ratios(calc_ratios_to_avg(x)$ratios_e, wheretext = myradius)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_bycounty.html","id":null,"dir":"Reference","previous_headings":"","what":"plot comparison of counties in 1 state, for 1 indicator (variable) — plot_bycounty","title":"plot comparison of counties in 1 state, for 1 indicator (variable) — plot_bycounty","text":"plot comparison counties 1 state, 1 indicator (variable)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_bycounty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot comparison of counties in 1 state, for 1 indicator (variable) — plot_bycounty","text":"","code":"plot_bycounty(   x,   myvars = x$variable[1],   myvarnames = NULL,   mystate = NULL,   labeltype = NULL,   acsinfo = NULL,   yr = 2022 )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_bycounty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot comparison of counties in 1 state, for 1 indicator (variable) — plot_bycounty","text":"x table output acs_bycounty() .e., output get_acs() tidycensus pkg downloads ACS Census Bureau data via API. myvars optional .extracted x, one (?) ACS5 variables like \"B03002_001\" myvarnames optional friendlier names myvars mystate name state labeltype scales package.  continuous scales: label_bytes(), label_number_auto(), label_number_si(), label_ordinal(), label_parse(), label_percent(), label_pvalue(), label_scientific() acsinfo large table metadata load_variables function tidycensus pkg yr like 2022, end 5 year ACS 2018-2022","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_bycounty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot comparison of counties in 1 state, for 1 indicator (variable) — plot_bycounty","text":"plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_demogshare_by_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"plot_demogshare_by_distance - work progress","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_demogshare_by_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"","code":"plot_demogshare_by_distance(   results_bybg_people,   demogvarname = names_d[1],   myids = unique(results_bybg_people$ejam_uniq_id),   show.lowess = F,   show.lm = TRUE,   show.line = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_demogshare_by_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"results_bybg_people table ejamit()$results_results_bybg_people, like testoutput_ejamit_10pts_1miles$results_bybg_people demogvarname one column names results_bybg_people, one names_d like \"Demog.Index.Supp\" myids optional vector ejam_uniq_id values show.lowess whether show curve fitted via graphics::lines(stats::lowess(x,y)) using stats::lowess() show.lm whether show straight line fitted via stats::lm() show.line whether show straight line fitted via stats::coef(line(x,y)) using stats::coef() stats::line() ... passed plot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_demogshare_by_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"just used create plot side effect","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_demogshare_by_distance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plot_demogshare_by_distance - work in progress — plot_demogshare_by_distance","text":"also consider plotting something like boxplot(demogvar ~ round(distance, 1)) See notes plots plot_barplot_ratios()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":null,"dir":"Reference","previous_headings":"","what":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"*** DRAFT - NEED RECHECK CALCULATIONS plots cumulative share residents found within distance, single population group.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"","code":"plot_distance_by_pctd(   s2b = NULL,   sitenumber = 1,   score_colname = names_these[3],   scorewts_colname = \"pop\",   score_label = fixcolnames(score_colname, \"r\", \"shortlabel\"),   radius = 30 )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"s2b output getblocksnearby(), else can table points lat,lon columns 1 row per point. NULL (provided parameter function), prompt file upload use, interactive() TRUE, else function just show example using random point. sitenumber used, one number unique ID (row number original list points) look s2b. value s2b$ejam_uniq_id site analyzed. able omit set NULL use overall aggregate sites. score_colname colname blockgroupstats indicator aggregated across blocks blockgroups weighted mean scorewts_colname colname blockgroupstats – like \"pop\" – weight use aggregating scores referred score_colname score_label optional friendly label variable radius optional radius use maximum analyzed shown – s2b provided, caps used shorter radii get shown (relevant s2b radii larger radius parameter) s2b provided, interactively RStudio user prompted provide latlon file analyze getblocksnearby() radius used .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"returns s2b columns like wtdmean_within","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"Also see ejamit_compare_distances() plot  several indicators several distances! function uses distance Census block site conjunction block group residential population data, provide relatively detailed picture far away residents group live. contrast, function distance_cdf_by_group_plot() based ejamit()$results_bybg_people, provides block group resolution information distance.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_by_pctd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"What percentage of this group's population lives less than X miles from a site? — *** DRAFT - NEED TO RECHECK CALCULATIONS — plot_distance_by_pctd","text":"","code":"# Example of area where %Black is  # very high within 1 mile but drops by 3 miles away  pts = testpoints_100[3,]   plot_distance_by_pctd(     getblocksnearby(pts, radius = 10, quiet = T),     score_colname = \"pctnhba\")  #browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 0.5))  #browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 3))    # Example of area that has higher %Hispanic as you go   # 10 to 30 miles away from this specific point  pts = data.table(lat = 45.75464, lon = -94.36791)  plot_distance_by_pctd(pts,    sitenumber = 1, score_colname = \"pcthisp\")  # browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 10))  # browseURL(url_ejscreen_report(lat = pts$lat, lon = pts$lon, radius = 30))"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_mean_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"Shows distance sites, residents population group (vs everyone else). plot_distance_mean_by_group() plot_distance_by_group() synonymous. distance_mean_by_group() distance_mean_by_group() synonymous, like plot_distance_mean_by_group(), show table plot, default.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_mean_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"","code":"plot_distance_mean_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   graph = TRUE,   returnwhat = \"table\" )  plot_distance_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   graph = TRUE,   returnwhat = \"table\" )  distance_mean_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   returnwhat = \"table\",   graph = FALSE )  distance_by_group(   results_bybg_people,   demogvarname = NULL,   demoglabel = fixcolnames(demogvarname, \"r\", \"shortlabel\"),   returnwhat = \"table\",   graph = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_mean_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"results_bybg_people data.table doaggregate()$results_bybg_people demogvarname vector column names like \"pctlowinc\" etc. demoglabel vector labels like \"Low Income Residents\" etc. graph logical optional, set FALSE show barplot save file returnwhat returnwhat \"table\", invisibly returns data.frame group, ratio, avg_distance_for_group, avg_distance_for_nongroup. returnwhat \"plotfilename\" returns full path including filename .png tempdir returnwhat \"plot\" returns plot object needed table_xls_format() ?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_mean_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"see parameter returnwhat See plot_distance_mean_by_group()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_distance_mean_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot of Average Proximity, by Group — plot_distance_mean_by_group","text":"Note ratio shown ratio distance among others distance given group, values 1 mean given group lives closer facilities. value 0.85 mean group 85% far site everyone else. Note miles assuming input miles, distance resident actually average distance residents within Census block (block group), site close block internal point (like centroid) relative size block, distance average resident block estimated 90 percent effective radius, radius block area square meters miles circular shape. approach used EJScreen estimate average proximity block resident cases block extremely close site site may actually inside block, exactly top internal point block, case zero appropriate estimate distance, hence adjustment made EJAM getblocksnearby()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_distance_by_dcount.html","id":null,"dir":"Reference","previous_headings":"","what":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"lorenz plot bybg_people (cumulative share x vs cum share y) - DRAFT/EXPERIMENTAL COUNT SITES (PEOPLE?) BIN","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_distance_by_dcount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"","code":"plot_lorenz_distance_by_dcount(bybg_people, varname)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_distance_by_dcount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"bybg_people ejamit()$results_bybg_people varname ************ tbd","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_distance_by_dcount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lorenz plot bybg_people (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COUNT OF SITES (or PEOPLE?) BY BIN — plot_lorenz_distance_by_dcount","text":"ggplot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_popcount_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"lorenz plot bysite (cumulative share x vs cum share y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets SITES (people??)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_popcount_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"","code":"plot_lorenz_popcount_by_site(bysite, radius)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_popcount_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"bysite ejamit()$results_bysite radius miles ************ tbd","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_lorenz_popcount_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"lorenz plot bysite (cumulative share of x vs cum share of y) - DRAFT/EXPERIMENTAL COMPARES TWO subsets OF SITES (or people??) — plot_lorenz_popcount_by_site","text":"ggplot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios","text":"Make ridgeline plot ratios residential population percentage average","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios","text":"","code":"plot_ridgeline_ratios(   ratio.to.us.d.bysite,   shortlabels = NULL,   main = \"Variations among Sites\",   maxratio = 5 )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios","text":"ratio..us.d.bysite named list ratios plot (data.frame) shortlabels names use plot - length named list ratio..us.d.overall maxratio largest ratio plot case outliers, plot looks better","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios","text":"","code":"out <- testoutput_ejamit_1000pts_1miles  ratio.to.us.d.bysite <- out$results_bysite[ ,  c(    ..names_d_ratio_to_avg, ..names_d_subgroups_ratio_to_avg    )]  # plot_ridgeline_ratios(ratio.to.us.d.bysite)  # cap the ratio, for better plot  x <- as.matrix(ratio.to.us.d.bysite)  plot_ridgeline_ratios(data.table::data.table(x))"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios_ez.html","id":null,"dir":"Reference","previous_headings":"","what":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios_ez","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios_ez","text":"Make ridgeline plot ratios residential population percentage average","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios_ez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios_ez","text":"","code":"plot_ridgeline_ratios_ez(   out,   varnames = c(names_d_ratio_to_avg, names_d_subgroups_ratio_to_avg),   main = \"Variations among Sites\",   maxratio = 5 )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios_ez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios_ez","text":"like ejamit() varnames vector colnames $results_bysite, ratio variables main optional alternative title plot maxratio largest ratio plot case outliers, plot looks better","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_ridgeline_ratios_ez.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make ridgeline plot of ratios of residential population percentage to its average — plot_ridgeline_ratios_ez","text":"","code":"out <- testoutput_ejamit_1000pts_1miles  plot_ridgeline_ratios_ez(out)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_st_v_us.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","title":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","text":"Barplot ratios 1 State's indicator averages vs US overall","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_st_v_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","text":"","code":"plot_st_v_us(ST = \"CA\", varnames = names_these)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_st_v_us.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","text":"ST state abbreviation like \"NY\" varnames vector character names raw indicator variables among names(statestats), like \"pm\" \"pctlowinc\" vector like names_d names_e","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_st_v_us.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","text":"similar plot_barplot_ratios()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_st_v_us.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of ratios of 1 State's indicator averages vs US overall — plot_st_v_us","text":"","code":"plot_st_v_us(\"CA\", names_these)"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"Visualize indicator values (scores) distributed across places","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"","code":"plot_vs_us(   bysite = NULL,   varname = \"pctlowinc\",   type = \"ggplot\",   refarealabel = \"All Blockgroups Nationwide\",   siteslabel = \"At Sites Analyzed\",   siteidlabel = NULL,   refdata = NULL,   nsample = 5000,   fix_pctcols = TRUE,   colorfills = c(\"lightblue\", \"yellow\"),   box.cex.ref = 0.6,   box.cex.here = 2.2,   box.pch.ref = 20,   box.pch.here = 2,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"bysite table results ejamit()$results_bysite, like testoutput_ejamit_1000pts_1miles$results_bysite varname name column bysite, like  \"Demog.Index\" type \"box\", \"plotly\", \"ggplot\" refarealabel e.g., \"blockgroups State\" siteslabel e.g., \"Avg. Site Analyzed\" siteidlabel vector text one per site show type 'box' refdata reference area dataset, like blockgroupstats, must columns named 'pop' varname. e.g., refdata = blockgroupstatsST %% \"DE\", .(pop, pcthisp) nsample limit dots plot ref area like bg US colorfills two colors boxplot box.cex.ref use default box.cex.use default box.pch.ref use default box.pch.description ... passed boxplot()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"plots","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"population weighted, distribution across sites residents. edited allow multiple types sites /reference zones generally like ejamit_compare_types_of_places()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/plot_vs_us.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot boxplot distribution of data among residents at sites vs reference area (US, etc.) — plot_vs_us","text":"","code":"# \\donttest{   out <- testoutput_ejamit_1000pts_1miles   # ejam2boxplot(out)   # plot_boxplot_vs_ref(out$results_bysite)   plot_vs_us(out$results_bysite, type = 'box')   plot_vs_us(out$results_bysite, varname = \"pctlingiso\", type =  'box', ylim=c(0, 20))   plot_vs_us(out$results_bysite, varname = \"pctlingiso\", type =  'ggplot')   plot_vs_us(out$results_bysite, varname = \"pctnhaa\", type =  'ggplot')   plot_vs_us(out$results_bysite, varname = \"pctnhaa\", type = 'box', ylim = c(0, 20))   # td = testoutput_ejamit_1000pts_1miles$results_bysite  # plot_vs_us(, type = 'box')  # plot_vs_us(td, varname = \"pctlingiso\", type =  'box', ylim=c(0,20))  # plot_vs_us(td, varname = \"pctlingiso\", type =  'ggplot')  # plot_vs_us(td, varname = \"pctnhaa\", type =  'ggplot')  # plot_vs_us(td, varname = \"pctnhaa\", type = 'box', ylim = c(0,20))  # plot_vs_us(td[td$ST %in% \"DE\", ], 'pcthisp', refdata = blockgroupstats[ST %in% \"DE\", .(pop, pcthisp)])   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_n.html","id":null,"dir":"Reference","previous_headings":"","what":"top N sites account for what percent of residents? — popshare_at_top_n","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"fraction total population accounted top N places?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"","code":"popshare_at_top_n(pop, n = 10, astext = FALSE, dig = 0)"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() n number places consider astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"fraction 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"top N sites account for what percent of residents? — popshare_at_top_n","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_x_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"fraction total population accounted top X percent places?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_x_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"","code":"popshare_at_top_x_pct(pop, x = 0.2, astext = FALSE, dig = 0)"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_x_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() x fraction 1, share places (vector values) astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_x_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"fraction 1 (vector results) text","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_at_top_x_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"top X percent of sites account for what percent of residents? — popshare_at_top_x_pct","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_n.html","id":null,"dir":"Reference","previous_headings":"","what":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"many sites account P percent residents?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"","code":"popshare_p_lives_at_what_n(pop, p, astext = FALSE, dig = 0)"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() p share population (0-1, fraction), vector one astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"vector numbers sites, text ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"how many sites account for P percent of residents? — popshare_p_lives_at_what_n","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"percent sites account P percent residents?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"","code":"popshare_p_lives_at_what_pct(pop, p, astext = FALSE, dig = 0)"},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"pop vector population totals across places, like $results_bysite$pop output ejamit() p share population (0-1, fraction), vector one astext TRUE, return text description results dig rounding digits text output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"vector fractions 0-1 sites, text ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popshare_p_lives_at_what_pct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"what percent of sites account for P percent of residents? — popshare_p_lives_at_what_pct","text":"","code":"x <- testdata_ejamit_output_100pts_1miles$results_bysite  popshare_p_lives_at_what_pct(x$pop, p = 0.50, astext=TRUE)  popshare_p_lives_at_what_n(  x$pop, p = c(0.50, 0.67, 0.80, 0.95))  popshare_at_top_x_pct(       x$pop, x = c(0.25, 0.50, .90))  popshare_at_top_n(           x$pop, n = c(1, 5, 10))"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"Creates popup vector leaflet::addCircles leaflet::addPopups can use.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"","code":"popup_from_any(   x,   column_names = names(x),   labels = column_names,   n = \"all\",   testing = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"x, data table data frame column_names default , vector column names x use. column_names requested found names(x), warning given NA values returned names x. names(x) requested column_names, left . labels default column_names - vector used label elements popup. Must length column_names n Show first n columns mypoints, popup. \"\" means . testing can set TRUE testing function","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"vector strings, one per row map point, line break separating column elements","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"popup made one row data.frame. popup one row text per column data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_any.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map popups - Simple map popup from a data.table or data.frame, one point per row — popup_from_any","text":"","code":"dat <- data.table(    RegistryId = c(\"110071102551\", \"110015787683\"),    FacilityName = c(\"USDOI FWS AK MARITIME NWR etc\", \"ADAK POWER PLANT\"),    LocationAddress = c(\"65 MI W. OF ADAK NAVAL FACILITY\", \"100 HILLSIDE BLVD\"),    CityName = c(\"ADAK\", \"ADAK\"),    CountyName = c(\"ALEUTIAN ISLANDS\", \"ALEUTIANS WEST\"),    StateAbbr = c(\"AK\", \"AK\"),    ZipCode = c(\"99546\", \"99546\"),    FIPSCode = c(\"02010\", \"02016\"),    lat = c(51.671389,51.8703), lon = c(-178.051111, -176.659),    SupplementalLocation = c(NA_character_,NA_character_))    ## add popups only  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addPopups(popup = popup_from_any(dat))    ## add circles with clickable popups  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addCircles(popup = popup_from_any(dat))    ## convert to data frame, works the same way   dat_df <- as.data.frame(dat_df)  leaflet::leaflet(dat) |> leaflet::addTiles() |> leaflet::addCircles(popup = popup_from_any(dat))"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"Map popups - Simple map popup data.frame, one point per row MAY DEPRECATE - See popup_from_any() newer general replacement .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"","code":"popup_from_df(x, column_names = names(x), labels = column_names, n = \"all\")"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"x data.frame info shown map popups column_names default , vector column names x use labels default colnames(x) - vector used label elements popup. Must length column_names n Show first n columns mypoints, popup. \"\" means .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"vector strings, one per row map point, line break separating column elements","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"popup made one row data.frame. popup one row text per column data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map popups - Simple map popup from a data.frame, one point per row MAY DEPRECATE - See popup_from_any() for newer more general replacement for this. — popup_from_df","text":"","code":"df <- structure(list(    RegistryId = c(\"110071102551\", \"110015787683\"),    FacilityName = c(\"USDOI FWS AK MARITIME NWR etc\", \"ADAK POWER PLANT\"),    LocationAddress=c(\"65 MI W. OF ADAK NAVAL FACILITY\",\"100 HILLSIDE BLVD\"),    CityName = c(\"ADAK\", \"ADAK\"),    CountyName = c(\"ALEUTIAN ISLANDS\", \"ALEUTIANS WEST\"),    StateAbbr = c(\"AK\", \"AK\"),    ZipCode = c(\"99546\", \"99546\"),    FIPSCode = c(\"02010\", \"02016\"),    lat = c(51.671389,51.8703), lon = c(-178.051111, -176.659),    SupplementalLocation = c(NA_character_,NA_character_)),    row.names = 1:2, class = \"data.frame\")  leaflet::leaflet(df) |> leaflet::addTiles() |>     leaflet::addPopups(popup = popup_from_df(df))"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_ejscreen.html","id":null,"dir":"Reference","previous_headings":"","what":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","title":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","text":"creates HTML text appears map popups.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_ejscreen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","text":"","code":"popup_from_ejscreen(   out,   linkcolname = \"EJScreen Report\",   linkcolname2 = \"EJScreen Map\",   linkcolname3 = \"EJScreenACS\",   verbose = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_ejscreen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","text":"like ejamit()$results_bysite, also can full list ejamit(). table raw data data.frame form, results EJ analysis. linkcolname Name one column table links URL linkcolname2 Another like linkcolname linkcolname3 another verbose TRUE FALSE, can see details reported function used.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_ejscreen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","text":"HTML ready used map popups","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_ejscreen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map popups - Create the popup text for maps of EJ results — popup_from_ejscreen","text":"Popup shows window click site map, viewing results EJ analysis site. CURRENTLY HARD CODED USE EJScreen VARIABLE NAMES. provides raw scores (summary indexes) US State percentiles available: site id info fields found latitude, longitude, size area around site Indicators like population count, Residential Population Demog. Indicator, etc. Environmental Indicators Summary Indexes web link(s) map report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_uploadedpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Map popups - make simple popups for map to show info about uploaded points — popup_from_uploadedpoints","title":"Map popups - make simple popups for map to show info about uploaded points — popup_from_uploadedpoints","text":"Map popups - make simple popups map show info uploaded points","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_uploadedpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map popups - make simple popups for map to show info about uploaded points — popup_from_uploadedpoints","text":"","code":"popup_from_uploadedpoints(mypoints, n = \"all\")"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_uploadedpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map popups - make simple popups for map to show info about uploaded points — popup_from_uploadedpoints","text":"mypoints data.frame (tibble?) lat lon columns preferably n Show first n columns mypoints, popup. \"\" means .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_from_uploadedpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map popups - make simple popups for map to show info about uploaded points — popup_from_uploadedpoints","text":"popups vector used leaflet maps","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/popup_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to view popup info in an interactive session - easier format to view — popup_print","title":"Helper function to view popup info in an interactive session - easier format to view — popup_print","text":"Helper function view popup info interactive session - easier format view","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/popup_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to view popup info in an interactive session - easier format to view — popup_print","text":"","code":"popup_print(x, linkregex = \"<a href.*>(.*)<.*\", linksimple = \"\\\\1\")"},{"path":"https://usepa.github.io/EJAM-open/reference/popup_print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to view popup info in an interactive session - easier format to view — popup_print","text":"x output popup_from_ejscreen() linkregex see source linksimple see source","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/post_comma.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - keep text after last or 1st comma (get ","title":"utility - keep text after last or 1st comma (get ","text":"utility - keep text last 1st comma (get \"TX\" \"Waco, TX\") used","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/post_comma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - keep text after last or 1st comma (get ","text":"","code":"post_comma(x, lastcomma = TRUE, if_no_comma_do_nothing = TRUE, trim = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/post_comma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - keep text after last or 1st comma (get ","text":"x string vector lastcomma logical if_no_comma_do_nothing logical trim logical","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/post_comma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - keep text after last or 1st comma (get ","text":"vector like x","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/predict_ejamit_runtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility used in app_server to predict ejamit and doaggregate runtimes — predict_ejamit_runtime","title":"Utility used in app_server to predict ejamit and doaggregate runtimes — predict_ejamit_runtime","text":"Utility used app_server predict ejamit doaggregate runtimes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/predict_ejamit_runtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility used in app_server to predict ejamit and doaggregate runtimes — predict_ejamit_runtime","text":"","code":"predict_ejamit_runtime(rows, radius)"},{"path":"https://usepa.github.io/EJAM-open/reference/predict_ejamit_runtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility used in app_server to predict ejamit and doaggregate runtimes — predict_ejamit_runtime","text":"rows number locations analyzed radius buffer radius distance, miles","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pre_comma.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - keep text before last or 1st comma (get ","title":"utility - keep text before last or 1st comma (get ","text":"utility - keep text last 1st comma (get \"Waco\" \"Waco, TX\") used","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pre_comma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - keep text before last or 1st comma (get ","text":"","code":"pre_comma(x, lastcomma = TRUE, if_no_comma_do_nothing = TRUE, trim = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/pre_comma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - keep text before last or 1st comma (get ","text":"x string vector lastcomma logical if_no_comma_do_nothing logical trim logical","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/pre_comma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - keep text before last or 1st comma (get ","text":"vector like x","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proximity.score.in.miles.html","id":null,"dir":"Reference","previous_headings":"","what":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer Shows US percentiles if no arguments used — proximity.score.in.miles","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer Shows US percentiles if no arguments used — proximity.score.in.miles","text":"proximity.score..miles - convert EJScreen proximity scores miles per site instead sites per kilometer Shows US percentiles arguments used","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proximity.score.in.miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer Shows US percentiles if no arguments used — proximity.score.in.miles","text":"","code":"proximity.score.in.miles(scoresdf = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/proximity.score.in.miles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"proximity.score.in.miles - convert EJScreen proximity scores to miles per site instead of sites per kilometer Shows US percentiles if no arguments used — proximity.score.in.miles","text":"scoresdf data.frame simple proximity scores like tsdf, rmp, npl traffic.score npdes one since weighted just count per km","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"DRAFT - Create custom proximity score every block group, representing count proximity specified points Indicator proximity residents US blockgroup custom set facilities sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"","code":"proxistat(   topoints,   bpoints = NULL,   blocks_per_batch = 1000,   countradius = 3.106856,   maxradius = 621.3712,   avoidorphans = TRUE,   quadtree = NULL,   quaddatatable = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"topoints Representing nearby amenities hazards counted proximity scores – Superfund NPL sites used NPL proximity score – data.table lat lon, points representing amenity hazard proximity score indicates proximity . subset frs table, e.g. bpoints Representing places assigned proximity scores – blockpoints, centroid/internal point every block USA – data.table Census block points lat lon, representing residents , entire US (least whole State, example – blocks need proximity score). score calculated given block based topoints near block, summarized blocks given block group create score block group. blocks_per_batch number blocks process batch, defaults 1000 countradius distance within nearby sites counted create proximity score. miles, default 5 km (5000 / meters_per_mile = 3.106856 miles) EJScreen zone proximity scores based counts. maxradius max distance miles search nearest single facility, none found within countradius. EJScreen seems use 1,000 km max search, since lowest scores proximity scores RMP, TSDF, NPL ROUGHLY 0.001, (exactly 0.000747782) meaning approx. 1/1000 km km_per_mile = 1.609344 = meters_per_mile / 1000 1000 km 1000 / 1.609344 = 621.3712 miles. However, exact min value implies 1337.288 kilometers, 830.9523 miles? avoidorphans (getblocksnearby() may implemented working yet) quadtree Index sites facilities basis proximity scores. Optional, can created fly based pts parameter, can pass already exists - index block locations, built use EJAM package. create_quaddata() quaddatatable optional, created pts passed, created create_quaddata() utility, used create quadtree","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"data.table block groups, proximityscore, bgfips, lat, lon, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"Tries use getpointsnearby() one batch blocks time, finding user-specified sites nearby blocks (block, get distance block nearby user-specified SITE points). inverse approach compared proxistat_via_getblocks() \"facility\" proximity score residents one place indicator far away facilities , many nearby - accounts number facilities within 5 kilometers (facility density) distance (proximity). points nearby, /points closer average resident blockgroup, blockgroup gets higher proximity score. formula proximity score sum (1/d) d distance given site kilometers, summed sites within 5 km (single closest site none within 5 km), just EJScreen proximity scores like TSDF RMP scores. custom user-provided set points can turned proximity score, locations industrial sites certain type, grocery stores, schools. proximity score can created blocks block groups US (just one State Region). proximity scores can analyzed tool like EJAM, just existing pre-calculated proximity scores analyzed represent number nearby hazardous waste treatment storage disposal facilities, weighted far away one , provided EJScreen proximity score TSDFs. custom user-specified proximity score might focus schools, example. schools proximity score analyzed EJAM one communities, areas near regulated facilities, set analyzed places. provide statistics demonstrating places schools closer (inside areas defined polygons FIPS codes, example). create proximity score, EJAM uses method EJScreen used create proximity scores. specified points first get indexed utility function called indexpoints() searched counted near every block blockgroup US via function called getpointsnearby().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat","text":"","code":"### see test data in test-proxistat.R   # pts <- testpoints_1000  # x <- proxistat(topoints = pts)  #  # summary(x$proximityscore)  # # analyze.stuff   pctiles(x$proximityscore)  #  # plot(x = x$lon, y = x$lat)  # tops = x$proximityscore > 500 & !is.infinite(x$proximityscore) & !is.na(x$proximityscore)  # points(x = x$lon[tops], y = x$lat[tops], col=\"red\")"},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat_via_getblocks.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","text":"DRAFT - Create custom proximity score every block group, representing count proximity specified points Indicator proximity residents US blockgroup custom set facilities sites","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat_via_getblocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","text":"","code":"proxistat_via_getblocks(pts, countradius = 5, maxradius = 31)"},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat_via_getblocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","text":"pts data.table lat lon column names countradius distance within nearby sites counted create proximity score. miles, default 5 km (5000 / meters_per_mile = 3.106856 miles) EJScreen zone proximity scores based counts. maxradius max distance miles search nearest single facility, none found within countradius. EJScreen seems use 1,000 km max search, since lowest scores proximity scores RMP, TSDF, NPL ROUGHLY 0.001, (exactly 0.000747782) meaning approx. 1/1000 km km_per_mile = 1.609344 = meters_per_mile / 1000 1000 km 1000 / 1.609344 = 621.3712 miles. However, exact min value implies 1337.288 kilometers, 830.9523 miles?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat_via_getblocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","text":"data.table block groups, proximityscore, bgfips, lat, lon, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/proxistat_via_getblocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - Create a custom proximity score for every block group, representing count and proximity of specified points Indicator of proximity of residents in each US blockgroup to a custom set of facilities or sites — proxistat_via_getblocks","text":"Tries use getblocksnearby() normally (site, get distance user-specified site nearby blocks) filling info rest blocks US inverse approach compared proxistat()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/quaddata.html","id":null,"dir":"Reference","previous_headings":"","what":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","title":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","text":"quaddata (DATA) data.table used create index US block point locations","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/quaddata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"quaddata (DATA) data.table used to create index of all US block point locations — quaddata","text":"8,174,955 rows non-populated blocks kept. 5,806,512 rows (71%) Census 2020 population (blockwt) > 0. largest file used package, 168 MB file, 2020 Census. - blockid - BLOCK_X, BLOCK_Y, BLOCK_Z  (lat, lon)","code":"localtree is the index made from quaddata (QuadTree class, via SearchTrees pkg), not a data.table"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"DRAFT - addin/ gadget dialog box RStudio user can pick radio button Interactive dialog box choices (RStudio addin wraps Shiny Gadget)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"","code":"radiobox(   choiceNames = c(\"Points\", \"Shapes\", \"FIPS\"),   choiceValues = c(\"latlon\", \"shp\", \"fips\"),   label = \"Choose one:\",   title = \"\",   height = 250,   width = 100 )"},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"choiceNames vector options displayed, e.g., c(\"Points\", \"Shapes\", \"FIPS\") choiceValues vector corresponding values returned function, e.g., c(\"latlon\", \"shp\", \"fips\") label Appears top dialog box cancel done, e.g., \"Choose one:\" title Appears just list choices, e.g., \"Select One\" height height box pixels, e.g., 250 width width box pixels, e.g., 100","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"one choiceValues (canceled/ error), Done clicked.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"uses shiny::runGadget() *** WARNING: DRAFTED, use within nontrivial scripts functions stopApp() seems interrupt processes cause problems - seems related quirk seen script function calls radiobox() twice - work first time show blank popup window 2d time... e.g.,  try : radius1 <- radiobox() radius2 <- radiobox() May related issue: https://github.com/rstudio/rstudio/issues/13394 Note function defined RStudio addin assigned keyboard shortcut, useful.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radiobox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DRAFT - addin/ gadget dialog box so RStudio user can pick a radio button Interactive dialog box of choices (RStudio addin that wraps a Shiny Gadget) — radiobox","text":"","code":"# chosen <- radiobox() # cat(\"you chose\", chosen, '\\n') # \\donttest{  junk = function() {   z =  radiobox()   # print(z)   return(z)  }  # (note this works after load_all or if it is an exported function)  radius <- radiobox(   c(\"Far (3 miles)\", \"Medium (2 miles)\", \"Near (1 mile)\"),   c(3,2,1),   label = \"Radius\"  )  cat(\"The radius will be\", radius, \"miles. \\n\")  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":null,"dir":"Reference","previous_headings":"","what":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"radius_inferred - utility estimate original radius requested getblocksnearby() outputs getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"","code":"radius_inferred(   s2b = NULL,   decimalsreported = 2,   decimalsforinferring = 3,   pctile_of_sites = 0.9,   nth_furthest_block = 2 )"},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"s2b data.table ejam_uniq_id, distance, etc. output getblocksnearby() decimalsreported parameter fine tune estimates - generally changed decimalsforinferring parameter fine tune estimates - generally changed pctile_of_sites parameter fine tune estimates - generally changed nth_furthest_block parameter fine tune estimates - generally changed","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"single number 1.5 3 estimate miles distance originally requested getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"cases someone using EJAM functions like getblocksnearby() might later separate step use results getblocksnearby() summarize indicator values using function like doaggregate(), actual radius originally requested known. function tries approximate radius must requested analysis, looking sites2blocks information distances nearby blocks near analyzed sites. simple using max distance sites, sites getblocksnearby() reports one two distances larger radius requested, even avoidorphans FALSE. must reported distance adjusted small relative whole block, better estimate distance average resident block rather reporting distance point block internal point (centroid essentially). documented EJScreen information creating proximity scores, facility exactly top block internal point distance zero point actual distance average resident block, hence adjustment. blocks low density areas huge relatively small circular buffer (small radius) require adjustments often. block 3 miles radius someone wants radius 1 mile getblocksnearby() ejamit() analysis overall, site inside block might reported distance 2.7 miles average resident block estimated 2.7 miles away site block. Almost 2% US blocks affected issue selected radius 1 mile, 1 1,000 radius 3 miles. function based largely practical algorithm accurate within 0.01 miles vast majority time radius 1 3 miles.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/radius_inferred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"radius_inferred - utility to estimate original radius requested in getblocksnearby() if we only have the outputs of getblocksnearby() — radius_inferred","text":"","code":"radius_inferred()   # radius_inferred(getblocksnearby(testpoints_n(100), radius = 3.25))"},{"path":"https://usepa.github.io/EJAM-open/reference/read_and_clean_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","title":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","text":"Flexibly read .csv .xlsx lat/lon points facility IDs WORK PROGRESS DRAFTED","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_and_clean_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","text":"","code":"read_and_clean_points(filepath, default_points = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/read_and_clean_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","text":"filepath filename can include path default_points return matches","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_and_clean_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","text":"data.frame lat, lon, etc. columns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_and_clean_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flexibly read .csv or .xlsx of lat/lon points or facility IDs WORK IN PROGRESS THAT WAS DRAFTED — read_and_clean_points","text":"*** REPLACE CODE server.R may want merge EJAM   ::latlon_from_anything() one can read file table vectors - format - figures latlon program IDs registry IDs (NAICS?) guess turns lat, lon, siteid . EJAM  ::  latlon_from_anything() uses EJAMbatch.summarizer   ::  read_csv_or_xl() EJAM   ::latlon_df_clean()  uses  EJAM  ::  latlon_infer()  latlon_as.numeric() latlon_is.valid() read_and_clean_points() general / flexible broadest way get points, still work progress similar done EJAM  ::latlon_from_anything() except also uses functions: EJAM  ::latlon_from_siteid() EJAM  ::latlon_from_programid()   _from_naics() ?","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/read_csv_or_xl.html","id":null,"dir":"Reference","previous_headings":"","what":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","title":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","text":"Read simple table csv xls xlsx. excel format, must simple table first tab, one row header (column names), data starting first cell second row, like A2, rows columns must empty.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_csv_or_xl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","text":"","code":"read_csv_or_xl(   fname = NULL,   path = NULL,   show_col_types = FALSE,   rowsize_warn = 30 * 1000 )"},{"path":"https://usepa.github.io/EJAM-open/reference/read_csv_or_xl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","text":"fname full path folder filename path optional, ignored name provided !interactive(). fname provided, interactive(), folder look default interactively picking file read. show_col_types FALSE makes print less console reads using readr::read_csv() rowsize_warn Give warning many rows table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_csv_or_xl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","text":"data.frame contents table read","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/read_csv_or_xl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read table of data from .csv or .xlsx Excel file — read_csv_or_xl","text":"RStudio, interactively can select file local drive. Also used EJAM shiny app file uploads.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/regid_from_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","title":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","text":"Find registry ids EPA-regulated facilities FRS NAICS code (industrial category) Like latlon_from_naics() returns regid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/regid_from_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","text":"","code":"regid_from_naics(naics, children = TRUE, id_only = TRUE, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/regid_from_naics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","text":"naics vector naics codes, data.table column named code, output naics_from_any() children optional logical. Must set TRUE get facilities whose NAICS starts provided naics (naics based provided title) rather exact matches. Many facilities longer specific NAICS code listed FRS, 6-digit code, category (e.g., 4-digit) queried children = TRUE specified find sites within overall category. id_only optional, backward compatibility ... passed naics_from_any()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/regid_from_naics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","text":"vector registry ID values facilities EPA FRS listed /NAICS, like latlon_from_naics() id_only = TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/regid_from_naics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find registry ids of EPA-regulated facilities in FRS by NAICS code (industrial category) Like latlon_from_naics() but returns only regid — regid_from_naics","text":"Finding right NAICS/SIC finding right sites complicated. See discussion latlon_from_naics().","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/report_residents_within_xyz.html","id":null,"dir":"Reference","previous_headings":"","what":"Build text for report: Residents within( X miles of)( any of) the (N) point(s)/polygon(s)/Census unit(s) — report_residents_within_xyz","title":"Build text for report: Residents within( X miles of)( any of) the (N) point(s)/polygon(s)/Census unit(s) — report_residents_within_xyz","text":"Build text report: Residents within( X miles )( ) (N) point(s)/polygon(s)/Census unit(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/report_residents_within_xyz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build text for report: Residents within( X miles of)( any of) the (N) point(s)/polygon(s)/Census unit(s) — report_residents_within_xyz","text":"","code":"report_residents_within_xyz(   text1 = \"Residents within \",   radius = NULL,   unitsingular = \"mile\",   area_in_square_miles = NULL,   nsites = 1,   sitenumber = NULL,   ejam_uniq_id = NULL,   sitetype = c(\"latlon\", \"fips\", \"shp\", \"frs\", \"epa_program_up\", \"echo\", \"naics\", \"sic\",     \"mact\", \"epa_program_sel\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/report_residents_within_xyz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build text for report: Residents within( X miles of)( any of) the (N) point(s)/polygon(s)/Census unit(s) — report_residents_within_xyz","text":"text1 text start phrase, like \"Residents within \" radius distance place, normally miles (can 0), custom text like \"seven kilometers \" case end words like \"safe distance \" \"vicinity \" \"proximity \" \"near\" – may need specify custom text1 also. unitsingular 'mile' default, can use 'kilometer' etc. Ignored radius number. area_in_square_miles number available, area square miles, added second line nsites number places text lieu number sitenumber 1 site list sites, can say one (1:N) ejam_uniq_id 1 site list sites, can say ID sitetype can 'latlon', 'fips', 'shp', singular custom text like \"Georgia location\" something can made plural just adding \"s\" ending \"site\" works better ending \"... facility\" since print \"facilitys\" .","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/report_setup_temp_files.html","id":null,"dir":"Reference","previous_headings":"","what":"helper - copies template, css to tempdir for render of summary report helper - copies .Rmd (template), .css from Rmd_folder to a temp dir subfolder for rendering — report_setup_temp_files","title":"helper - copies template, css to tempdir for render of summary report helper - copies .Rmd (template), .css from Rmd_folder to a temp dir subfolder for rendering — report_setup_temp_files","text":"helper - copies template, css tempdir render summary report helper - copies .Rmd (template), .css Rmd_folder temp dir subfolder rendering","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/report_setup_temp_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper - copies template, css to tempdir for render of summary report helper - copies .Rmd (template), .css from Rmd_folder to a temp dir subfolder for rendering — report_setup_temp_files","text":"","code":"report_setup_temp_files(   Rmd_name = \"community_report_template.Rmd\",   Rmd_folder = \"report/community_report/\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/report_setup_temp_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper - copies template, css to tempdir for render of summary report helper - copies .Rmd (template), .css from Rmd_folder to a temp dir subfolder for rendering — report_setup_temp_files","text":"Rmd_name .Rmd filename package uses Rmd_folder folder package stores template ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/report_setup_temp_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper - copies template, css to tempdir for render of summary report helper - copies .Rmd (template), .css from Rmd_folder to a temp dir subfolder for rendering — report_setup_temp_files","text":"used ejam2report() now? also copying  logo .png ? now?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/report_xmilesof.html","id":null,"dir":"Reference","previous_headings":"","what":"helper for report_residents_within_xyz() — report_xmilesof","title":"helper for report_residents_within_xyz() — report_xmilesof","text":"helper report_residents_within_xyz()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/report_xmilesof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper for report_residents_within_xyz() — report_xmilesof","text":"","code":"report_xmilesof(radius, unitsingular = \"mile\")"},{"path":"https://usepa.github.io/EJAM-open/reference/report_xmilesof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper for report_residents_within_xyz() — report_xmilesof","text":"radius distance site unitsingular use default units","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/rmost.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to rm(list=ls()) but NOT remove key datasets EJAM uses — rmost","title":"utility to rm(list=ls()) but NOT remove key datasets EJAM uses — rmost","text":"utility rm(list=ls()) remove key datasets EJAM uses","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/rmost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to rm(list=ls()) but NOT remove key datasets EJAM uses — rmost","text":"","code":"rmost(   notremove = c(\"blockwts\", \"blockpoints\", \"blockid2fips\", \"quaddata\", \"localtree\",     \"bgej\", \"bgid2fips\", \"frs\", \"frs_by_programid\", \"frs_by_naics\", \"frs_by_sic\",     \"frs_by_mact\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/rmost.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"utility to rm(list=ls()) but NOT remove key datasets EJAM uses — rmost","text":"removes globalenv()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/rowMaxs2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum of each row of data.frame — rowMaxs2","title":"Get maximum of each row of data.frame — rowMaxs2","text":"Get maximum row data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/rowMaxs2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum of each row of data.frame — rowMaxs2","text":"","code":"rowMaxs2(df, na.rm = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/rowMaxs2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum of each row of data.frame — rowMaxs2","text":"df data.frame matrix. na.rm default TRUE. tested FALSE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/rowMaxs2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum of each row of data.frame — rowMaxs2","text":"max row","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch EJAM as Shiny web app in RStudio. — run_app","title":"Launch EJAM as Shiny web app in RStudio. — run_app","text":"Launch app. app_run_EJAM() & run_app() .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch EJAM as Shiny web app in RStudio. — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = \"url\",   uiPattern = \"/\",   ... )  app_run_EJAM(   onStart = NULL,   options = list(),   enableBookmarking = \"url\",   uiPattern = \"/\",   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch EJAM as Shiny web app in RStudio. — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. Note many defaults defined files like global_defaults_*.R. can changed , also can passed override defaults duration app. example:","code":"run_app(    default_default_miles=3.1,    default_max_miles=31,    default_max_mb_upload=100  )"},{"path":"https://usepa.github.io/EJAM-open/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch EJAM as Shiny web app in RStudio. — run_app","text":"object represents app. Printing object passing runApp() run app.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/run_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch EJAM as Shiny web app in RStudio. — run_app","text":"run_app( isPublic = TRUE ) launch simpler version web app (e.g., general public use rather full set complicated features used less often). Technical Notes: Examples parameters pass run_app() fully tested:   enableBookmarking param lets user, via bookmarkButton() ui, save uploaded files plus state  input$  settings. enableBookmarking=\"url\" saved server. See shinyApp() onBookmark() onBookmarked() onRestore() onRestored() See https://mastering-shiny.org/action-bookmark.html https://rdrr.io/cran/shiny/man/bookmarkButton.html Typically R Shiny apps distributed R packages launching shiny app just source() .R files found /R/ folder, run found app.R (assuming one-file Shiny app). R Shiny app, however, shared R package, via golem package approach, provides useful features package useful features golem package enables. file app.R package root, used shiny app started locally via RStudio's Run button posit connect server. app.R script library(EJAM) pkg already loaded, run_app() file called _disable_autoload.R /R/ folder used shiny app started, tell server source .R files, since already loaded package run_app()","code":"run_app(shiny.testmode = TRUE, testing = TRUE,         default_default_miles = 3.1,         default_max_miles = 31,         default_max_mb_upload = 100,         default_default_miles_shapefile = 0.1,           default_hide_plot_histo_tab = FALSE,         default_hide_advanced_settings = FALSE,         default_testing = TRUE,         default_shiny.testmode = TRUE,           default_standard_analysis_title = \"CUSTOM REPORT\",           default.an_threshgroup1 = \"Envt-US-or-ST\",         default.an_thresh_comp1 = 95,         default.an_threshnames1 = EJAM::names_e_state_pctile,           # to have shapefiles, MACT, Cities as initial (default) selections:         ## default_upload_dropdown = \"dropdown\", #may not be implemented yet         default_choices_for_type_of_site_upload =c('Shapefile upload'='SHP'),         default_choices_for_type_of_site_category=c('by MACT subpart'='MACT'),         fipspicker_fips_type2pick_default = \"Cities or Places\",           # shorter reorganized list of extra indicators:         default_extratable_list_of_sections = list(           Health = c(\"pctdisability\", \"lowlifex\",             \"rateheartdisease\", \"rateasthma\", \"ratecancer\", \"lifexyears\"),           Poverty_Income = c(\"pctpoor\",  \"percapincome\"),           `Feature Counts` = c(\"count.NPL\", \"count.TSDF\",             \"num_waterdis\", \"num_airpoll\", \"num_brownfield\", \"num_tri\",             \"num_school\", \"num_hospital\", \"num_church\")         )  )    # untested:    sitepoints = testpoints_10 # or 'latlondata.xlsx'"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff2.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","text":"setdiff2 aka unshared just shows elements one one sets x y","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","text":"","code":"setdiff2(x, y)"},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — setdiff2","text":"","code":"setdiff2(1:4, 3:8)"},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff_yx.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is in y not x — setdiff_yx","title":"UTILITY - see what is in y not x — setdiff_yx","text":"utility just like setdiff except y,x instead x,y","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff_yx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is in y not x — setdiff_yx","text":"","code":"setdiff_yx(x, y)"},{"path":"https://usepa.github.io/EJAM-open/reference/setdiff_yx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UTILITY - see what is in y not x — setdiff_yx","text":"","code":"setdiff(   1:4, 3:8)   setdiff_yx(1:4, 3:8) # makes it easy to check both without"},{"path":"https://usepa.github.io/EJAM-open/reference/shape2zip.html","id":null,"dir":"Reference","previous_headings":"","what":"Save spatial data.frame as shapefile.zip — shape2zip","title":"Save spatial data.frame as shapefile.zip — shape2zip","text":"Save spatial data.frame shapefile.zip","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape2zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save spatial data.frame as shapefile.zip — shape2zip","text":"","code":"shape2zip(shp, file = \"shapefile.zip\")"},{"path":"https://usepa.github.io/EJAM-open/reference/shape2zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save spatial data.frame as shapefile.zip — shape2zip","text":"shp spatial data.frame shapefile_from_any() sf::st_read() file full path name .zip file create","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape2zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save spatial data.frame as shapefile.zip — shape2zip","text":"normalized path cleaned file param (path name .zip)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape2zip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save spatial data.frame as shapefile.zip — shape2zip","text":"","code":"# shp <- shapes_from_fips(fips = name2fips(c('tucson,az', 'tempe, AZ'))) shp <- testshapes_2 # \\donttest{ fname <- file.path(tempdir(), \"myfile.zip\") fpath <- shape2zip(shp = shp, file = fname) file.exists(fpath) zip::zip_list(fpath) # read it back in shp2 <- shapefile_from_any(fpath) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile2latlon.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert shapefile (class sf) of points to data.table of lat, lon columns — shapefile2latlon","title":"Convert shapefile (class sf) of points to data.table of lat, lon columns — shapefile2latlon","text":"Makes lat lon columns, sfc_POINT class geometry field, via sf::st_coordinates()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile2latlon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert shapefile (class sf) of points to data.table of lat, lon columns — shapefile2latlon","text":"","code":"shapefile2latlon(shp, include_only_latlon = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile2latlon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert shapefile (class sf) of points to data.table of lat, lon columns — shapefile2latlon","text":"shp shapefile class sf, shapefile_from_any() sf::st_read(), geometry column points class sfc_POINT include_only_latlon set FALSE function return lat lon columns plus columns shp. TRUE, just returns lat lon columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile2latlon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert shapefile (class sf) of points to data.table of lat, lon columns — shapefile2latlon","text":"data.table columns named lat lon, optionally shp well, can used input ejamit(), mapfast(), etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop invalid rows, warn if all invalid, add unique ID, transform (CRS) — shapefile_clean","title":"Drop invalid rows, warn if all invalid, add unique ID, transform (CRS) — shapefile_clean","text":"Drop invalid rows, warn invalid, add unique ID, transform (CRS)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop invalid rows, warn if all invalid, add unique ID, transform (CRS) — shapefile_clean","text":"","code":"shapefile_clean(shp, crs = 4269)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop invalid rows, warn if all invalid, add unique ID, transform (CRS) — shapefile_clean","text":"shp shapefile object using sf::st_read() crs used shp <- sf::st_transform(shp, crs = crs), default crs = 4269 Geodetic CRS NAD83","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop invalid rows, warn if all invalid, add unique ID, transform (CRS) — shapefile_clean","text":"like input shp, applying crs dropping valid, plus column ejam_uniq_id 1:NROW()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"Get list valid filenames comprising shapefile including paths","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"","code":"shapefile_filepaths_from_folder(folder = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"folder path folder contains files (.shp, .shx, .dbf, .prj)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_from_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of valid filenames comprising shapefile including paths — shapefile_filepaths_from_folder","text":"string vector filenames including full paths","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"Confirm files have ALL the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","title":"Confirm files have ALL the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"Confirm files extensions .shp, .shx, .dbf, .prj","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confirm files have ALL the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"","code":"shapefile_filepaths_valid(filepaths)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confirm files have ALL the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"filepaths vector full paths filenames (types .shp, .shx, .dbf, .prj) strings","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confirm files have ALL the extensions .shp, .shx, .dbf, and .prj — shapefile_filepaths_valid","text":"logical, indicating 4 extensions found among filepaths","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_validize.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert filepath(s) into one complete set (if possible) of a single basename and extensions .shp, .shx, .dbf, .prj — shapefile_filepaths_validize","title":"Convert filepath(s) into one complete set (if possible) of a single basename and extensions .shp, .shx, .dbf, .prj — shapefile_filepaths_validize","text":"Convert filepath(s) one complete set (possible) single basename extensions .shp, .shx, .dbf, .prj","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_validize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert filepath(s) into one complete set (if possible) of a single basename and extensions .shp, .shx, .dbf, .prj — shapefile_filepaths_validize","text":"","code":"shapefile_filepaths_validize(filepaths, inputname = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_validize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert filepath(s) into one complete set (if possible) of a single basename and extensions .shp, .shx, .dbf, .prj — shapefile_filepaths_validize","text":"filepaths vector full path(s) filename(s) strings inputname vector shiny fileInput uploaded filenames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_filepaths_validize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert filepath(s) into one complete set (if possible) of a single basename and extensions .shp, .shx, .dbf, .prj — shapefile_filepaths_validize","text":"assuming 1 base filename provided (among files extensions .shp, .shx, .dbf, .prj) least one 4 valid extensions (.shp, .shx, .dbf, .prj), returns vector exactly four filepaths, one extension. returns NULL one base name provided (since ambiguous), none 4 extensions provided. Ignores drops files extensions.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Read shapefile from any file or folder (trying to infer the format) — shapefile_from_any","title":"Read shapefile from any file or folder (trying to infer the format) — shapefile_from_any","text":"Read shapefile file folder (trying infer format)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read shapefile from any file or folder (trying to infer the format) — shapefile_from_any","text":"","code":"shapefile_from_any(   path = NULL,   cleanit = TRUE,   crs = 4269,   layer = NULL,   inputname = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read shapefile from any file or folder (trying to infer the format) — shapefile_from_any","text":"path path file(s) /.gdb, .zip, .shp, .geojson, .json, etc., folder .zip folder one shapefile , read function, must unzipped handled separately. folder, tries read shapefile_from_folder() Folder must contain one files extensions .shp, .shx, .dbf, .prj .zip containing folder, unzips, tries read shapefile_from_folder() shapefile_from_gdbzip() ? .zip containing .gdb, reads shapefile_from_gdbzip() .gdb, reads shapefile_from_gdb() .json .geojson, reads shapefile_from_json() .kml .shp, uses sf::st_read() vector .shp, .shx, .dbf, .prj file names (may include paths), reads shapefile_from_filepaths() cleanit set FALSE want skip validation dropping invalid rows crs passed shapefile_from_filepaths() etc. default crs = 4269 Geodetic CRS NAD83 layer optional layer name passed sf::st_read() inputname vector shiny fileInput uploaded filenames ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read shapefile from any file or folder (trying to infer the format) — shapefile_from_any","text":"simple feature sf::sf class object using sf::st_read()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_filepaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"Read shapefile disk based filenames given","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_filepaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"","code":"shapefile_from_filepaths(   filepaths = NULL,   cleanit = TRUE,   crs = 4269,   layer = NULL,   inputname = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_filepaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"filepaths vector full paths filenames (types .shp, .shx, .dbf, .prj) strings cleanit set FALSE want skip validation dropping invalid rows crs cleanit = TRUE, crs passed shapefile_clean() default crs = 4269 Geodetic CRS NAD83 Also can check via x <- sf::st_crs(sf::st_read()); x$input layer optional name layer read inputname vector shiny fileInput uploaded filenames ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_filepaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read shapefile from disk based on the filenames given — shapefile_from_filepaths","text":"shapefile object using sf::st_read()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Read shapefile from a folder — shapefile_from_folder","title":"Read shapefile from a folder — shapefile_from_folder","text":"Read shapefile folder","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read shapefile from a folder — shapefile_from_folder","text":"","code":"shapefile_from_folder(folder = NULL, cleanit = TRUE, crs = 4269, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read shapefile from a folder — shapefile_from_folder","text":"folder path folder contains files (.shp, .shx, .dbf, .prj) cleanit set FALSE want skip validation dropping invalid rows crs passed shapefile_from_filepaths() default crs = 4269 Geodetic CRS NAD83 ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read shapefile from a folder — shapefile_from_folder","text":"shapefile object using sf::st_read()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read shapefile from a folder — shapefile_from_folder","text":"","code":"# \\donttest{   testfolder <- system.file(\"testdata/shapes/Portland_neighborhoods\", package = \"EJAM\")   testshape <- shapefile_from_folder(testfolder)    testpaths <- shapefile_filepaths_from_folder(testfolder)   testshape <- shapefile_from_filepaths(testpaths)    ## if interactive(), R user can point to right folder or select the right set of files:   # testshape <- shapefile_from_filepaths()   # testshape <- shapefile_from_folder()    x <- get_blockpoints_in_shape(testshape)   leaflet::leaflet(x$polys) %>% leaflet::addTiles() %>% leaflet::addPolygons(color = \"blue\")   DT::datatable(out$results_bysite)    # }"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdb.html","id":null,"dir":"Reference","previous_headings":"","what":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","title":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","text":"read .gdb geodatabase file via sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","text":"","code":"shapefile_from_gdb(fname, layer = NULL, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","text":"fname path filename .gdb file layer optional name layer, see sf::st_read() ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","text":"like output sf::st_read() ejam_uniq_id column 1:NROW()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read .gdb geodatabase file via sf::st_read() — shapefile_from_gdb","text":"","code":"# npl <- sf::st_read(\"~/../Desktop/NPL/NPL_Boundaries.gdb\")   # npl <- shapefile_from_gdb(\"~/../Desktop/NPL/NPL_Boundaries.gdb\",   #   layer = \"SITE_BOUNDARIES_SF\")   # npl <- shapefile_from_gdbzip(\"~/../Desktop/NPL/NPL_Boundaries.zip\")   # mapview::mapview(npl[x$STATE_CODE == \"CA\", ])"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdbzip.html","id":null,"dir":"Reference","previous_headings":"","what":"read .zip that contains geodatabase file via unzip and st_read — shapefile_from_gdbzip","title":"read .zip that contains geodatabase file via unzip and st_read — shapefile_from_gdbzip","text":"read .zip contains geodatabase file via unzip st_read","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdbzip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read .zip that contains geodatabase file via unzip and st_read — shapefile_from_gdbzip","text":"","code":"shapefile_from_gdbzip(fname, layer = NULL, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdbzip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read .zip that contains geodatabase file via unzip and st_read — shapefile_from_gdbzip","text":"fname path .zip file contains .gdb file layer optional name layer, see sf::st_read() ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_gdbzip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read .zip that contains geodatabase file via unzip and st_read — shapefile_from_gdbzip","text":"see shapefile_from_gdb()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_json.html","id":null,"dir":"Reference","previous_headings":"","what":"read .json or .geojson shapefile data — shapefile_from_json","title":"read .json or .geojson shapefile data — shapefile_from_json","text":"read .json .geojson shapefile data","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read .json or .geojson shapefile data — shapefile_from_json","text":"","code":"shapefile_from_json(path, cleanit = TRUE, crs = 4269, layer = NULL, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read .json or .geojson shapefile data — shapefile_from_json","text":"path path filename cleanit optional, whether use shapefile_clean() crs passed shapefile_from_filepaths() etc. default crs = 4269 Geodetic CRS NAD83 layer optional layer name passed sf::st_read() ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read .json or .geojson shapefile data — shapefile_from_json","text":"like output sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_sitepoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"Creates simple feature (sf) dataframe points","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_sitepoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"","code":"shapefile_from_sitepoints(sitepoints, crs = 4269, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_sitepoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"sitepoints data.table data.frame columns called lat,lon (aliases ) crs used st_as_sf() default crs = 4269 Geodetic CRS NAD83 ... passed sf::st_as_sf()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_sitepoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert table of lat,lon points/sites into sf:: shapefile — shapefile_from_sitepoints","text":"shapefile via sf::st_as_sf(). Note columns get returned, lat,lon columns get returned \"lat\" \"lon\" even provided aliases ","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_zip.html","id":null,"dir":"Reference","previous_headings":"","what":"read zipped .zip that may contain a geodatabase file or .shp file etc. — shapefile_from_zip","title":"read zipped .zip that may contain a geodatabase file or .shp file etc. — shapefile_from_zip","text":"read zipped .zip may contain geodatabase file .shp file etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_zip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read zipped .zip that may contain a geodatabase file or .shp file etc. — shapefile_from_zip","text":"","code":"shapefile_from_zip(path, cleanit = TRUE, crs = 4269, layer = NULL, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_zip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read zipped .zip that may contain a geodatabase file or .shp file etc. — shapefile_from_zip","text":"path path filename .zip file cleanit optional, whether use shapefile_clean() crs passed shapefile_from_filepaths() etc. default crs = 4269 Geodetic CRS NAD83 layer optional layer name passed sf::st_read() ... passed sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefile_from_zip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read zipped .zip that may contain a geodatabase file or .shp file etc. — shapefile_from_zip","text":"like output sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefix.html","id":null,"dir":"Reference","previous_headings":"","what":"shapefix cleans a spatial data.frame, flags invalid rows, add id if missing, etc. — shapefix","title":"shapefix cleans a spatial data.frame, flags invalid rows, add id if missing, etc. — shapefix","text":"way app_server, ejamit() via shapefile_from_any(), use one function thing whether reactive context","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shapefix cleans a spatial data.frame, flags invalid rows, add id if missing, etc. — shapefix","text":"","code":"shapefix(shp, crs = 4269)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shapefix cleans a spatial data.frame, flags invalid rows, add id if missing, etc. — shapefix","text":"shp simple feature data.frame crs coordinate reference system, default 4269","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shapefix cleans a spatial data.frame, flags invalid rows, add id if missing, etc. — shapefix","text":"returns rows shp, adds columns \"valid\" \"invalid_msg\" adds attributes shiny can use update reactives, standardizes \"geometry\" sfc column name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_blockgroups_from_bgfips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","title":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","text":"Get blockgroups boundaries, via API, map ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_blockgroups_from_bgfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","text":"","code":"shapes_blockgroups_from_bgfips(   bgfips = \"010890029222\",   outFields = c(\"FIPS\", \"STATE_ABBR\", \"SQMI\"),   myservice =     c(\"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/5/query\",     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Block_Groups/FeatureServer/0/query\",     \"cartographic\", \"tiger\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_blockgroups_from_bgfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","text":"bgfips one block group FIPS codes 12-character strings vector outFields can \"*\" , can just vector variables particular service provides, like FIPS, SQMI, POPULATION_2020, etc. myservice URL feature service get shapes . \"https://services.arcgis.com/cJ9YHowT8TU7DUyn/ArcGIS/rest/services/ EJScreen_2_21_US_Percentiles_Block_Groups/FeatureServer/0/query\" example provides EJScreen indicator values, NPL_CNT, TSDF_CNT, EXCEED_COUNT_90, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_blockgroups_from_bgfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","text":"spatial object via sf::st_read() # sf-data.frame, sf-tibble like sf::read_sf()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_blockgroups_from_bgfips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get blockgroups boundaries, via API, to map them — shapes_blockgroups_from_bgfips","text":"useful mostly small numbers blockgroups. EJScreen map services provide ways map blockgroups see EJScreen data.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_counties_from_countyfips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","title":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","text":"Get Counties boundaries via API, map ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_counties_from_countyfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","text":"","code":"shapes_counties_from_countyfips(   countyfips = \"10001\",   outFields = c(\"NAME\", \"FIPS\", \"STATE_ABBR\", \"STATE_NAME\", \"POP_SQMI\"),   myservice =     c(\"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/2/query\",     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Counties_and_States_with_PR/FeatureServer/0/query\",     \"cartographic\", \"tiger\")[3] )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_counties_from_countyfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","text":"countyfips FIPS codes 5-character strings (numbers) vector fips_counties_from_state_abbrev(\"DE\") outFields can \"*\" , can just variables like SQMI, POPULATION_2020, etc., none myservice URL feature service get shapes \"cartographic\" \"tiger\" use approx slow/accurate bounds tidycensus tigris packages.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_counties_from_countyfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","text":"spatial object via sf::st_read()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_counties_from_countyfips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Counties boundaries via API, to map them — shapes_counties_from_countyfips","text":"Used sf::read_sf(), alias sf::st_read() modified default arguments. read_sf quiet default/ print info data source, read_sf returns sf-tibble rather sf-data.frame note tidycensus tigris R packages can quickly get county boundaries mapping.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"Download shapefiles based FIPS codes States, Counties, Cities/CDPs, Tracts, Blockgroups","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"","code":"shapes_from_fips(   fips,   myservice_blockgroup =     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/5/query\",   myservice_tract =     \"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/4/query\",   myservice_place = \"tiger\",   myservice_county = \"cartographic\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"fips vector one Census FIPS codes name2fips() myservice_blockgroup URL feature service get shapes , \"cartographic\" \"tiger\" use approx slow/accurate bounds tidycensus tigris packages. myservice_tract URL feature service get shapes , \"cartographic\" \"tiger\" use approx slow/accurate bounds tidycensus tigris packages. myservice_place \"tiger\" implemented myservice_county URL feature service get shapes , \"cartographic\" \"tiger\" use approx slow/accurate bounds tidycensus tigris packages. Note State bounds built package data need downloaded service.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"spatial data.frame one row per fips (assuming fips valid)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"using tigris package (\"tiger\" service-related parameter ), uses year default version tigris package installed. can use options(tigris_year = 2022) example specify explicitly. function also sets options(tigris_use_cache = TRUE), individual shapes_xyz_from_ function may specify.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_from_fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups — shapes_from_fips","text":"","code":"# shp2 = shapes_from_fips(\"10001\", \"10005\")   fipslist = list(   statefips = name2fips(c('DE', 'RI')),   countyfips = fips_counties_from_state_abbrev(c('DE')),   cityfips = name2fips(c('chelsea,MA', 'st. john the baptist parish, LA')),   tractfips = substr(blockgroupstats$bgfips[300:301], 1, 12),   bgfips = blockgroupstats$bgfips[300:301]   )   shp <- list()   # \\donttest{    for (i in seq_along(fipslist)) {     shp[[i]] <- shapes_from_fips(fipslist[[i]])     print(shp[[i]])     # mapfast(shp[[i]])    }   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_places_from_placefips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get shapefiles/ boundaries of census places like cities — shapes_places_from_placefips","title":"Get shapefiles/ boundaries of census places like cities — shapes_places_from_placefips","text":"Get shapefiles/ boundaries census places like cities","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_places_from_placefips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get shapefiles/ boundaries of census places like cities — shapes_places_from_placefips","text":"","code":"shapes_places_from_placefips(fips, myservice = \"tiger\")"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_places_from_placefips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get shapefiles/ boundaries of census places like cities — shapes_places_from_placefips","text":"fips vector 7-digit City/town/CDP codes censusplaces$fips myservice 'tiger' implemented source boundaries, using tigris package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_places_from_placefips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get shapefiles/ boundaries of census places like cities — shapes_places_from_placefips","text":"spatial data.frame mapping","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_state_from_statefips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get boundaries of State(s) for mapping — shapes_state_from_statefips","title":"Get boundaries of State(s) for mapping — shapes_state_from_statefips","text":"Get boundaries State(s) mapping","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_state_from_statefips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get boundaries of State(s) for mapping — shapes_state_from_statefips","text":"","code":"shapes_state_from_statefips(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_state_from_statefips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get boundaries of State(s) for mapping — shapes_state_from_statefips","text":"fips vector one State FIPS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_state_from_statefips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get boundaries of State(s) for mapping — shapes_state_from_statefips","text":"spatial data.frame boundaries","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_tract_from_tractfips.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","title":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","text":"Get tract boundaries, via API, map ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_tract_from_tractfips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","text":"","code":"shapes_tract_from_tractfips(   fips,   outFields = c(\"FIPS\", \"STATE_ABBR\", \"SQMI\"),   myservice =     c(\"https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/4/query\",     \"cartographic\", \"tigris\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_tract_from_tractfips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","text":"fips one FIPS codes 11-character strings vector outFields can \"*\" , can just vector variables particular service provides, like FIPS, SQMI, POPULATION_2020, etc. myservice URL feature service get shapes , (, yet implemented, \"cartographic\" \"tiger\" use approx slow/accurate bounds tidycensus tigris packages).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_tract_from_tractfips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","text":"spatial object via sf::st_read() # sf-data.frame, sf-tibble like sf::read_sf()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shapes_tract_from_tractfips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get tract boundaries, via API, to map them — shapes_tract_from_tractfips","text":"useful mostly small numbers tracts. EJScreen map services provide ways map tracts see EJScreen data.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"shape_buffered_from_shapefile - add buffer around shape","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"","code":"shape_buffered_from_shapefile(shapefile, radius.miles, crs = 4269, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"shapefile spatial object like areas high risk areas facilities analyzed radius.miles width buffer add shapefile (case dist units object, convertible arc_degree x geographic coordinates, st_crs(x)$units otherwise) crs used st_transform()  default crs = 4269 Geodetic CRS NAD83 ... passed st_buffer()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"format sf::st_buffer() returns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"Just wrapper sf::st_buffer()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shape_buffered_from_shapefile - add buffer around shape — shape_buffered_from_shapefile","text":"","code":"# Within 3 miles of the county borders fips_counties_from_state_abbrev(\"DE\")[1] x = shapes_counties_from_countyfips(\"10001\") xtra = shape_buffered_from_shapefile(x, radius.miles = 3) map_shapes_leaflet(x) %>%   map_shapes_leaflet_proxy(xtra, color = \"black\")"},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":null,"dir":"Reference","previous_headings":"","what":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"shape_buffered_from_shapefile_points - add buffer around shape (points, )","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"","code":"shape_buffered_from_shapefile_points(   shapefile_points,   radius.miles = NULL,   crs = 4269,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"shapefile_points spatial object like areas high risk areas facilities analyzed radius.miles width buffer add shapefile_points (case dist units object, convertible arc_degree x geographic coordinates, st_crs(x)$units otherwise) crs used st_transform()  default crs = 4269 Geodetic CRS NAD83 ... passed st_buffer()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"format sf::st_buffer() returns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"Just wrapper sf::st_buffer()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/shape_buffered_from_shapefile_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shape_buffered_from_shapefile_points - add buffer around shape (points, here) — shape_buffered_from_shapefile_points","text":"","code":"map_shapes_leaflet(   shape_buffered_from_shapefile_points(     shapefile_from_sitepoints(testpoints_100),     radius.miles = 3   ) ) # (ignoring projections for this example) # compare to mapfast(testpoints_100)"},{"path":"https://usepa.github.io/EJAM-open/reference/SIC.html","id":null,"dir":"Reference","previous_headings":"","what":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"SIC (DATA) named list SIC code numbers category name ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/SIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"","code":"SIC"},{"path":"https://usepa.github.io/EJAM-open/reference/SIC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"object class character length 1117.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/SIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SIC (DATA) named list of all SIC code numbers and category name for each — SIC","text":"Also see SIC info","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sictable.html","id":null,"dir":"Reference","previous_headings":"","what":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site — sictable","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site — sictable","text":"data.table SIC code(s) industry names EPA-regulated site Facility Registry Service Also 2,3, 4-digit SIC code falls , relevant given length","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sictable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site — sictable","text":"","code":"sictable"},{"path":"https://usepa.github.io/EJAM-open/reference/sictable.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site — sictable","text":"object class data.table (inherits data.frame) 1117 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sictable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sictable (DATA) data.table of SIC code(s) and industry names for each EPA-regulated site — sictable","text":"similar data file EJAM::SIC useful format newer functions work . Also see SIC info","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"See the names of SIC industrial categories and their codes — sic_categories","title":"See the names of SIC industrial categories and their codes — sic_categories","text":"Easy way view, RStudio console, SIC categories. SIC 4-digit codes, like 7218 - Industrial launderers","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"See the names of SIC industrial categories and their codes — sic_categories","text":"","code":"sic_categories()"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"See the names of SIC industrial categories and their codes — sic_categories","text":"matrix 1 column, rownames like \"7353 - Heavy construction equipment rental (411 sites)\" values like \"7353\"","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"General way to search for industry names and NAICS codes — sic_from_any","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"Find industry names codes searching queried code(s) text","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"","code":"sic_from_any(   query,   children = FALSE,   ignore.case = TRUE,   fixed = FALSE,   website_scrape = FALSE,   website_url = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"query query string(s) /number(s), vector NAICS codes industry names regular expression partial words children logical, TRUE, also return subcategories - NAICS starts digits ignore.case see grepl() fixed exact match? see grepl() website_scrape whether scrape info NAICS website return table codes names match (web query uses synonyms gets hits) website_url whether return URL webpage info NAICS (web query uses synonyms gets hits)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General way to search for industry names and NAICS codes — sic_from_any","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"Search industry names SIC code(s), 4 digits ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"","code":"sic_from_code(mycodes, children = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"mycodes vector character SIC codes. see https://siccode.com children logical, TRUE, also return subcategories - SIC starts digits","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for industry names by SIC code(s), 4 digits each — sic_from_code","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for industry names and SIC codes by query string — sic_from_name","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"query parts words, etc. industry name.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"","code":"sic_from_name(mynames, children = FALSE, ignore.case = TRUE, fixed = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"mynames query string, vector SIC industry names regular expression partial words. See https://siccode.com children logical, TRUE, also return subcategories - SIC starts digits ignore.case see grepl() fixed exact match? see grepl()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"subset sictable data.table (just codes column)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_from_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for industry names and SIC codes by query string — sic_from_name","text":"","code":"data.table::fintersect(sic_from_any( \"glass\"), sic_from_any(\"paint\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"Given 3-digit SIC code, example, get SIC start digits.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"","code":"sic_subcodes_from_code(mycodes)"},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"mycodes SIC codes vector, 2 4 digits . See https://siccode.com","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"subset sictable data.table (just codes column)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"similar idea naics2children() robust See sic_from_any() uses ","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/sic_subcodes_from_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find subcategories of the given overall SIC industry code(s) — sic_subcodes_from_code","text":"","code":"# codes starting with '07'   sic_subcodes_from_code('07')   # codes starting with '078'   sic_subcodes_from_code('078')"},{"path":"https://usepa.github.io/EJAM-open/reference/sitepoints_from_any.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","text":"Get lat/lon flexibly - file, data.frame, data.table, lat/lon vectors Like latlon_from_anything() also adds ejam_uniq_id column","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitepoints_from_any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","text":"","code":"sitepoints_from_any(   anything,   lon_if_used,   invalid_msg_table = FALSE,   set_invalid_to_na = TRUE,   interactiveprompt = TRUE )  sitepoints_from_anything(   anything,   lon_if_used,   invalid_msg_table = FALSE,   set_invalid_to_na = TRUE,   interactiveprompt = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/sitepoints_from_any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","text":"anything see latlon_from_anything(), passed lon_if_used see latlon_from_anything(), passed invalid_msg_table set TRUE want columns \"valid\" \"invalid_msg\" also set_invalid_to_na used latlon_df_clean() interactiveprompt passed latlon_from_anything()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitepoints_from_any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","text":"data.frame lat,lon, ejam_uniq_id colnames, one row per point","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitepoints_from_any.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lat/lon flexibly - from file, data.frame, data.table, or lat/lon vectors Like latlon_from_anything() but this also adds a ejam_uniq_id column — sitepoints_from_any","text":"","code":"sitepoints_from_any(testpoints_10)  sitepoints_from_any(lon_if_used = testpoints_10$lon, anything = testpoints_10$lat)  sitepoints_from_any(testpoints_10$lat, testpoints_10$lon)  pts = c(\"33,-100\", \"32,-101\")  sitepoints_from_any(pts)  pts = data.frame(Longitude = testpoints_10$lon, Latitude = testpoints_10$lat)  sitepoints_from_any(pts)  pts = data.table(Lat = testpoints_10$lat, Long = testpoints_10$lon)  sitepoints_from_any(pts)    sitepoints_from_anything(testpoints_bad, set_invalid_to_na = F, invalid_msg_table = T)    # \\donttest{  if (interactive()) {    pts <- sitepoints_from_any()  }# }  # \\donttest{  pts = system.file(\"testdata/latlon/testpoints_10.xlsx\", package = \"EJAM\")  sitepoints_from_any(pts)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/sites_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"helper - given filename, figure out type and return list of input params for ejamit() Do not actually read file but get list of sitepoints, fips, shapefile args to pass to ejamit() — sites_from_file","title":"helper - given filename, figure out type and return list of input params for ejamit() Do not actually read file but get list of sitepoints, fips, shapefile args to pass to ejamit() — sites_from_file","text":"helper - given filename, figure type return list input params ejamit() actually read file get list sitepoints, fips, shapefile args pass ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sites_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper - given filename, figure out type and return list of input params for ejamit() Do not actually read file but get list of sitepoints, fips, shapefile args to pass to ejamit() — sites_from_file","text":"","code":"sites_from_file(file)"},{"path":"https://usepa.github.io/EJAM-open/reference/sites_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper - given filename, figure out type and return list of input params for ejamit() Do not actually read file but get list of sitepoints, fips, shapefile args to pass to ejamit() — sites_from_file","text":"file file name (path) look ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sites_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper - given filename, figure out type and return list of input params for ejamit() Do not actually read file but get list of sitepoints, fips, shapefile args to pass to ejamit() — sites_from_file","text":"named list, sitepoints, fips, shapefile names","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitetype2text.html","id":null,"dir":"Reference","previous_headings":"","what":"helper to convert sitetype code (","title":"helper to convert sitetype code (","text":"helper convert sitetype code (\"latlon\") text describing (\" specified point\")","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitetype2text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper to convert sitetype code (","text":"","code":"sitetype2text(sitetype = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/sitetype2text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper to convert sitetype code (","text":"sitetype code like (lowercase) latlon, shp, fips, fips_place, frs, echo, naics, sic, mact, epa_program_sel, epa_program_up used server come ejamit()$sitetype like latlon, fips, shp","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/sitetype2text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper to convert sitetype code (","text":"phrase use report header excel notes tab","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedmessage.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate how long it will take to get buffer batch results — speedmessage","title":"estimate how long it will take to get buffer batch results — speedmessage","text":"estimate long take get buffer batch results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedmessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate how long it will take to get buffer batch results — speedmessage","text":"","code":"speedmessage(n, perhourslow = 1000, perhourfast = 12000, perhourguess = 6000)"},{"path":"https://usepa.github.io/EJAM-open/reference/speedmessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate how long it will take to get buffer batch results — speedmessage","text":"n number points buffer perhourslow n per hour slow (conservative estimate time needed) perhourfast n per hour fast perhourguess n per hour best guess","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/speedreport.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function that reports on how long buffering took — speedreport","title":"helper function that reports on how long buffering took — speedreport","text":"helper function reports long buffering took","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedreport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function that reports on how long buffering took — speedreport","text":"","code":"speedreport(start, end, n)"},{"path":"https://usepa.github.io/EJAM-open/reference/speedreport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function that reports on how long buffering took — speedreport","text":"start start time end end time n many buffers completed","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedreport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function that reports on how long buffering took — speedreport","text":"text string summarizing speed","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"Utility used speedtest() speedtable_summarize()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"","code":"speedtable_expand(speedtable)"},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility used by speedtest() and speedtable_summarize() — speedtable_expand","text":"speedtable must columns called  points, miles, perhr","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"utility used by speedtest() — speedtable_summarize","title":"utility used by speedtest() — speedtable_summarize","text":"utility used speedtest()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility used by speedtest() — speedtable_summarize","text":"","code":"speedtable_summarize(speedtable)"},{"path":"https://usepa.github.io/EJAM-open/reference/speedtable_summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility used by speedtest() — speedtable_summarize","text":"speedtable speedtest(), columns named points perhr","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"Run EJAM analysis several radii numbers sitepoints, recording long step takes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"","code":"speedtest(   n = 10,   sitepoints = NULL,   weighting = \"frs\",   radii = c(1, 3.106856, 5, 10, 31.06856)[1:3],   avoidorphans = FALSE,   test_ejamit = FALSE,   test_getblocksnearby = TRUE,   test_doaggregate = TRUE,   test_batch.summarize = FALSE,   logging = FALSE,   logfolder = \".\",   logfilename = \"log_n_datetime.txt\",   honk_when_ready = TRUE,   saveoutput = FALSE,   plot = TRUE,   getblocks_diagnostics_shown = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"n optional, vector 1 counts many random points test, set 0 interactively pick file points RStudio (n ignored sitepoints provided) sitepoints optional,  (use want random points) data.frame points path/file points, columns lat lon decimal degrees weighting optional, using random points, weight , facilities, people, blockgroups. see testpoints_n() radii optional, one radius values miles use creating circular buffers findings residents nearby sitepoints. default list includes one 5km (approx 3.1 miles) avoidorphans see getblocksnearby() ejamit() regarding param test_ejamit whether test ejamit() instead subcomponents like getblocksnearby(), doaggregate(), etc test_getblocksnearby whether include function timing - used always done test_doaggregate whether include function timing test_batch.summarize whether include function timing logging logical optional, whether save log file timings steps. NOTE slows though. logfolder optional, name folder log file logfilename optional, name log file go folder honk_when_ready optional, self-explanatory saveoutput slows set TRUE save run .rda file plot whether create plot results getblocks_diagnostics_shown set TRUE see details block counts etc. ... passed plotting function","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"EJAM results similar web app ejamit() also creates plot","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"essentially test script times step EJAM large dataset pick sample size (n) (enter sitepoints, set n=0 interactively pick file points RStudio) pick n random points pick different radii circular buffering analyze indicators circular buffers overall (find blocks nearby calc indicators) get stats summarize indicators compare times steps radii approaches tools","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run EJAM analysis for several radii and numbers of sitepoints, recording how long each step takes — speedtest","text":"","code":"# \\donttest{   speedseen_few <- speedtest(c(50,500), radii=c(1, 3.106856), logging=FALSE, honk=FALSE)    speedseen_nearer_to1k <- speedtest(n = c(1e2,1e3,1e4 ), radii=c(1, 3.106856,5 ),     logging=TRUE, honk=FALSE)   save( speedseen_nearer_to1k, file = \"~/../Downloads/speedseen_nearer_to1k.rda\")   rstudioapi::savePlotAsImage(        \"~/../Downloads/speedseen_nearer_to1k.png\")    speedseen_all <- speedtest(     n = c(1e2,1e3,1e4),     radii=c(1, 3.106856, 5, 10, 31.06856),     logging=TRUE, honk=TRUE   )  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"utility plot output speedtest(), rate points analyzed per hour","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"","code":"speedtest_plot(x, ltype = \"b\", plotfile = NULL, secondsperthousand = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"x table speedtest() ltype optional type line plot plotfile optional path filename .png image file save","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/speedtest_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to plot output of speedtest(), rate of points analyzed per hour — speedtest_plot","text":"side effect plot. returns x seconds column added ","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/st2statename.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to convert between statename and ST abbreviation — st2statename","title":"utility to convert between statename and ST abbreviation — st2statename","text":"utility convert statename ST abbreviation","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/st2statename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to convert between statename and ST abbreviation — st2statename","text":"","code":"st2statename(ST)"},{"path":"https://usepa.github.io/EJAM-open/reference/st2statename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to convert between statename and ST abbreviation — st2statename","text":"ST vector state abbreviations like \"GA\" (can include state names)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/st2statename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to convert between statename and ST abbreviation — st2statename","text":"returns vector state names long ST vector, NA elements neither statename ST","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/st2statename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to convert between statename and ST abbreviation — st2statename","text":"","code":"st2statename(c(\"TX\", 'dc', \"Illinois\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"52 rows variables: ST 2-letter abbreviation, statename State name, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"","code":"stateinfo"},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"object class data.frame 52 rows 5 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stateinfo (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo","text":"Created EJAM datacreate_stateinfo.R script Also see Census details column names: 'ST'  'statename'  'ftpname'   'FIPS.ST'   'REGION' datasets lack PR. (72) Many datasets lack :  , GU, MP, VI (codes '60' '66' '69' '78') Almost datasets lack UM. (74)","code":"72 PR                 Puerto Rico      66 GU                        Guam      69 MP    Northern Mariana Islands      78 VI         U.S. Virgin Islands      74 UM U.S. Minor Outlying Islands"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo2.html","id":null,"dir":"Reference","previous_headings":"","what":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"52 rows several variables: ST 2-letter abbreviation, statename State name, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"","code":"stateinfo2"},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"object class data.frame 58 rows 26 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/stateinfo2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"stateinfo2 (DATA) data.frame of state abbreviations and state names (50+DC+PR; not AS, GU, MP, VI, UM) — stateinfo2","text":"Created EJAM datacreate_stateinfo2.R script Also see Census info column names: c('statename', 'FIPS.ST', 'ST', 'ftpname', 'REGION', '.usa.plus.pr', '.usa', '.state', '.contiguous.us', '.island.areas', 'area.sqmi', 'area.sqkm', 'landarea.sqmi', 'landarea.sqkm', 'waterarea.sqmi', 'waterarea.sqkm', 'inland.sqmi', 'inland.sqkm', 'coastal.sqmi', coastal.sqkm', 'greatlakes.sqmi', 'greatlakes.sqkm', 'territorial.sqmi', 'territorial.sqkm', 'lat', 'lon') datasets lack PR. (72) Many datasets lack :  , GU, MP, VI (codes '60' '66' '69' '78') Almost datasets lack UM. (74)","code":"72 PR                 Puerto Rico      66 GU                        Guam      69 MP    Northern Mariana Islands      78 VI         U.S. Virgin Islands      74 UM U.S. Minor Outlying Islands"},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/statename2st.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to convert between statename and ST abbreviation — statename2st","title":"utility to convert between statename and ST abbreviation — statename2st","text":"utility convert statename ST abbreviation","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statename2st.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to convert between statename and ST abbreviation — statename2st","text":"","code":"statename2st(statename)"},{"path":"https://usepa.github.io/EJAM-open/reference/statename2st.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to convert between statename and ST abbreviation — statename2st","text":"statename vector state names (can include state abbreviations)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statename2st.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to convert between statename and ST abbreviation — statename2st","text":"returns vector ST abbreviations long statename vector, NA elements neither statename ST","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statename2st.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to convert between statename and ST abbreviation — statename2st","text":"","code":"EJAM:::statename2st(c(\"TX\", 'dc', \"Illinois\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","title":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","text":"data.frame 100 percentiles means US State PR DC block groups zone (e.g., block groups blockgroupstats) set indicators percent low income. column one indicator (specifies percentile). similar lookup tables gdb FTP site EJScreen, except also data additional population subgroups. See also usastats details.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","text":"","code":"statestats"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"statestats (DATA) data.frame of 100 percentiles and means for each US State and PR and DC. — statestats","text":"object class data.frame 5304 rows 67 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and RESIDENTIAL POPULATION indicators — statestats_means","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and RESIDENTIAL POPULATION indicators — statestats_means","text":"statestats_means - convenient way see STATE MEANS ENVIRONMENTAL RESIDENTIAL POPULATION indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and RESIDENTIAL POPULATION indicators — statestats_means","text":"","code":"statestats_means(   ST = unique(EJAM::statestats$REGION),   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = \"mean\",   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_means - convenient way to see STATE MEANS of ENVIRONMENTAL and RESIDENTIAL POPULATION indicators — statestats_means","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means_bystates.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_means - convenient way to see STATE MEANS of indicators for a list of states (that can have repeats) — statestats_means_bystates","title":"statestats_means - convenient way to see STATE MEANS of indicators for a list of states (that can have repeats) — statestats_means_bystates","text":"Given vector 2-char ST abbrevs, vector colnames statestats table (indicator names), return data.frame state averages","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means_bystates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_means - convenient way to see STATE MEANS of indicators for a list of states (that can have repeats) — statestats_means_bystates","text":"","code":"statestats_means_bystates(   ST = unique(EJAM::statestats$REGION),   varnames = names_these,   PCTILES = \"mean\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means_bystates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_means - convenient way to see STATE MEANS of indicators for a list of states (that can have repeats) — statestats_means_bystates","text":"ST vector 2-char ST abbrevs, values can \"USA\" get duplicate rows like found ejamit()$results_bysite[, names_d_avg] varnames vector colnames statestats table (indicator names) PCTILES \"mean\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_means_bystates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"statestats_means - convenient way to see STATE MEANS of indicators for a list of states (that can have repeats) — statestats_means_bystates","text":"data.frame state averages , one row per ST provided (can repeats) colnames varnames.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_query.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"statestats_query - convenient way see mean, pctiles Env Demog indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"","code":"statestats_query(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = c(EJAM::names_e, EJAM::names_d),   PCTILES = NULL,   dig = 3 )"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_query - convenient way to see mean, pctiles of Env or Demog indicators from lookup table — statestats_query","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_queryd.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"statestats_queryd - convenient way see mean, pctiles DEMOG indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_queryd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"","code":"statestats_queryd(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = c(EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_queryd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_queryd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_queryd - convenient way to see mean, pctiles of DEMOG indicators from lookup table — statestats_queryd","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_querye.html","id":null,"dir":"Reference","previous_headings":"","what":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"statestats_querye - convenient way see mean, pctiles ENVIRONMENTAL indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_querye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"","code":"statestats_querye(   ST = sort(unique(EJAM::statestats$REGION)),   varnames = EJAM::names_e,   PCTILES = NULL,   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_querye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"ST vector state abbreviations, USA varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/statestats_querye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"statestats_querye - convenient way to see mean, pctiles of ENVIRONMENTAL indicators from lookup table — statestats_querye","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"FIPS - Analyze US States sites, get summary indicators summary","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"","code":"states_as_sites(fips)"},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"fips State FIPS vector, like c(\"01\", \"02\") fips_state_from_state_abbrev(c(\"DE\", \"RI\"))","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"provides table similar output getblocksnearby(), data.table one row per blockgroup states, pairs states fips - bgid, ejam_uniq_id (1 N) assigned state missing blockid distance ready doaggregate().","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"function provides one row per blockgroup. getblocksnearby_from_fips() provides one row per block. See \"Value\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_as_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FIPS - Analyze US States as if they were sites, to get summary indicators summary — states_as_sites","text":"","code":"s2b <- states_as_sites(fips_state_from_state_abbrev(c(\"DE\", \"RI\")))"},{"path":"https://usepa.github.io/EJAM-open/reference/states_shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"This is used to figure out which state contains each point (facility/site). — states_shapefile","title":"This is used to figure out which state contains each point (facility/site). — states_shapefile","text":"used figure state contains point (facility/site).","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_shapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is used to figure out which state contains each point (facility/site). — states_shapefile","text":"","code":"states_shapefile"},{"path":"https://usepa.github.io/EJAM-open/reference/states_shapefile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"This is used to figure out which state contains each point (facility/site). — states_shapefile","text":"object class sf (inherits data.frame) 56 rows 15 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/states_shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This is used to figure out which state contains each point (facility/site). — states_shapefile","text":"used state_from_latlon() find state associated point user wants analyze. needed report indicators form State-specific percentiles (e.g., score 80th percentile within Texas). created package via script EJAM/data-raw/datacreate_states_shapefile.R downloads data Census Bureau.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid.html","id":null,"dir":"Reference","previous_headings":"","what":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","title":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","text":"given vector blockids, get state abbreviation unused. needed sites2blocks table includes bgid column","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","text":"","code":"state_from_blockid(blockid)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","text":"blockid vector blockid values EJAM table called blockpoints","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","text":"vector ST info like AK, CA, DE, etc.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"given vector of blockids, get state abbreviation of each unused. Not needed if you have sites2blocks table that includes a bgid column — state_from_blockid","text":"","code":"x = sample(blockpoints$blockid, 3) state_from_blockid(x)[] mapfast(blockpoints[blockid %in% x, ])  all.equal(state_from_blockid(x), state_from_blockid_table(blockpoints[blockid %in% x, ]))"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid_table.html","id":null,"dir":"Reference","previous_headings":"","what":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","title":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","text":"given data.table blockid column, get state abbreviation - used?","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","text":"","code":"state_from_blockid_table(dt_with_blockid)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","text":"dt_with_blockid","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","text":"vector ST info like AK, CA, DE, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_blockid_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"state_from_blockid_table was used in some special cases e.g., in testpoints_n() — state_from_blockid_table","text":"","code":"x = sample(blockpoints$blockid, 3) state_from_blockid_table(blockpoints[blockid %in% x, ])[] mapfast(blockpoints[blockid %in% x, ])  table(state_from_blockid_table(testoutput_getblocksnearby_10pts_1miles)) # unique(state_from_latlon(testpoints_10)$ST) # slow  all.equal(state_from_blockid(x), state_from_blockid_table(blockpoints[blockid %in% x, ]))"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_fips_bybg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","text":"Get State abbreviations blockgroups WITHIN input FIPS","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_fips_bybg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","text":"","code":"state_from_fips_bybg(fips, uniqueonly = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_fips_bybg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","text":"fips Census FIPS codes vector, numeric char, 2-digit, 5-digit, etc. OK uniqueonly set TRUE, returns unique results. parameter mostly remind user default uniques .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_fips_bybg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","text":"vector 2-character state abbreviations like CA,CA,CA,MD,MD,TX","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_fips_bybg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get FIPS of ALL BLOCKGROUPS in the States or Counties specified — state_from_fips_bybg","text":"Unlike fips2state_abbrev(), returns vector 2-letter State abbreviations one per blockgroup matches input FIPS, necessarily vector long input vector FIPS codes!, just short list unique states!","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_latlon.html","id":null,"dir":"Reference","previous_headings":"","what":"Find what state is where each point is located — state_from_latlon","title":"Find what state is where each point is located — state_from_latlon","text":"Takes 3 seconds find state 1k points, faster alternative useful can take approx. one minute 2.5 million points state_from_latlon(frs$lat, frs$lon)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_latlon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find what state is where each point is located — state_from_latlon","text":"","code":"state_from_latlon(lat, lon)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_latlon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find what state is where each point is located — state_from_latlon","text":"lat latitudes vector lon longitudes vector","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_latlon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find what state is where each point is located — state_from_latlon","text":"Returns data.frame: ST, statename, FIPS.ST, REGION, n many rows elements lat lon","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_latlon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find what state is where each point is located — state_from_latlon","text":"","code":"myprogram <- \"CAMDBS\" # 739 sites  pts <- frs_from_program(myprogram)[ , .(lat, lon, REGISTRY_ID,  PRIMARY_NAME)]  # add a column with State abbreviation  pts[, ST := state_from_latlon(lat=lat, lon = lon)$ST]  #map these points  mapfast(pts[ST == 'TX',], radius = 1) # 1 miles radius circles"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":null,"dir":"Reference","previous_headings":"","what":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"Find 2-character State abbreviation, sites entirely 1 state.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"","code":"state_from_s2b_bysite(sites2blocks)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"sites2blocks data.table data.frame, like testoutput_getblocksnearby_10pts_1miles, getblocksnearby() columns ejam_uniq_id blockid distance","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"data.table columns  ejam_uniq_id, ST","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"works sites entirely 1 state. multistate sites, need lat/lon site slower. returns NA site whose nearby blocks multiple states. multistate sites, need know lat/lon site sure state. function need quickly find state site , able report state percentiles, can identify State site located , based states nearby blocks (parent blockgroups). many analyses, sites single-state sites, function sufficient. However, rare edge case save lat,lon sites analyzed, need approximate lat/lon blocks distances, via latlon_from_s2b(), separately. two functions differ – one gets state info unique site, gets state abbreviation unique block: Note: unexported function xx = state_from_s2b_bysite(testoutput_getblocksnearby_10pts_1miles)[] NROW(xx) [1] 10 length(unique(testoutput_getblocksnearby_10pts_1miles$ejam_uniq_id)) [1] 10 length(EJAM:::state_from_blockid_table(testoutput_getblocksnearby_10pts_1miles)) [1] 1914 NROW(testoutput_getblocksnearby_10pts_1miles) [1] 1914","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_s2b_bysite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get State each site is entirely within, quickly, from table of blockid, ejam_uniq_id — state_from_s2b_bysite","text":"","code":"# \\donttest{ # unexported function table(state_from_blockid_table(testoutput_getblocksnearby_10pts_1miles)) state_from_s2b_bysite(testoutput_getblocksnearby_10pts_1miles)[]    x = getblocksnearby(pts, radius = 30)   y = state_from_s2b_bysite(x)   table(y$in_how_many_states)   y    fname = './inst/testdata/testpoints_207_sites_with_signif_violations_NAICS_326_ECHO.csv'   x = state_from_s2b_bysite(     getblocksnearby( latlon_from_anything(fname), quadtree = localtree))   y = read_csv_or_xl(fname)   x$ST == y$FacState   # }   state_from_s2b_bysite(testoutput_getblocksnearby_10pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_sitetable.html","id":null,"dir":"Reference","previous_headings":"","what":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","title":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","text":"Identify US State site (given ST, lat/lon, FIPS)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_sitetable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","text":"","code":"state_from_sitetable(sites, ignorelatlon = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_sitetable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","text":"sites data.frame data.table, one row per site, column(s) either \"ST\" (2-letter abbreviation State), \"lat\" \"lon\", \"fips\" \"bgfips\" optionally column like  \"ejam_uniq_id\" \"n\" ignorelatlon set TRUE skip slowest step inferring ST latlon case want via sites2blocks info blocks nearby","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_sitetable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","text":"input table data.frame, new columns ST already column: ejam_uniq_id, ST, statename, FIPS.ST, REGION, n","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/state_from_sitetable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"state_from_sitetable - Identify US State that each site is in (given ST, FIPS, or lat/lon) — state_from_sitetable","text":"","code":"state_from_sitetable(testpoints_10)   state_from_sitetable(testoutput_ejamit_10pts_1miles$results_bysite[, .(ejam_uniq_id, ST, pop)])   state_from_sitetable(testoutput_ejamit_10pts_1miles$results_bysite[, .(ST, pop)])   state_from_sitetable(testoutput_ejamit_10pts_1miles$results_bysite[, .(ST, lat, lon, pop)])"},{"path":"https://usepa.github.io/EJAM-open/reference/state_per_site_for_doaggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","title":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","text":"identify State site , doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_per_site_for_doaggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","text":"","code":"state_per_site_for_doaggregate(s2b, s2st)"},{"path":"https://usepa.github.io/EJAM-open/reference/state_per_site_for_doaggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","text":"s2b like testoutput_getblocksnearby_100pts_1miles, output getblocksnearby() s2st like testpoints_10, like input ejamit() getblocksnearby()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_per_site_for_doaggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","text":"data.table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/state_per_site_for_doaggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify the State each site is in, for doaggregate() — state_per_site_for_doaggregate","text":"","code":"# \\donttest{   # cannot quickly id ST if a site spans 2+ states  # not this is an unexported function:  tail(state_from_s2b_bysite(testoutput_getblocksnearby_100pts_1miles))    # using the closest block can id the wrong state:  tail(state_from_nearest_block_bysite(testoutput_getblocksnearby_100pts_1miles))    # getting the true state is slow if some sites span 2+ states:  tail(    state_per_site_for_doaggregate(      testoutput_getblocksnearby_100pts_1miles,       testpoints_100    )) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/structure.of.output.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"Utility print summary info output ejamit() doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/structure.of.output.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"","code":"structure.of.output.list(x, maxshown = 10, objectname = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/structure.of.output.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"x output ejamit() doaggregate(), list objects holding results analysis maxshown shows first 10 elements list default objectname name use printing summary, e.g., \"Output ejamit()\" default use name object passed function.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/structure.of.output.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"data.frame summarizing names list, whether element data.table, data.frame, vector, rows/cols/length info","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/structure.of.output.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Utility to print summary info about the output of ejamit() or doaggregate() — structure.of.output.list","text":"","code":"structure.of.output.list(testpoints_10)   structure.of.output.list(testoutput_getblocksnearby_10pts_1miles)   structure.of.output.list(testoutput_doaggregate_10pts_1miles)   structure.of.output.list(testoutput_ejamit_10pts_1miles)   structure.of.output.list(testoutput_ejscreenapi_plus_5)   structure.of.output.list(testoutput_ejscreenit_5)"},{"path":"https://usepa.github.io/EJAM-open/reference/table4gt_from_scorevectors.html","id":null,"dir":"Reference","previous_headings":"","what":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"Based just indicator names value , tries fill rest summary table's data. formats data.frame ready next step","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table4gt_from_scorevectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"","code":"table4gt_from_scorevectors(   varnames_r = names_e,   varnames_shown = fixcolnames(varnames_r, \"r\", \"long\"),   value = as.vector(usastats_means(varnames_r)),   state_avg = NULL,   state_pctile = NULL,   usa_avg = NULL,   usa_pctile = NULL,   state_ratio = NULL,   usa_ratio = NULL,   ST = \"NY\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/table4gt_from_scorevectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"varnames_r vector variable names like names_d varnames_shown vector like fixcolnames(names_d,'r','short') value indicator values place overall state_avg indicator values average State state_pctile indicator values State percentiles usa_avg indicator values US average usa_pctile indicator values US percentiles state_ratio indicator values ratio State average usa_ratio indicator values ratio US average ST State abbreviation like \"NY\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table4gt_from_scorevectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DRAFT EXPERIMENTAL - attempt to make table more flexible / any indicators — table4gt_from_scorevectors","text":"data.frame ready table_gt_format_step2 ???","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/tablefixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of counts of integer values zero through maxbin — tablefixed","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"Like tabulate table, sort , includes zero unlike tabulate, lets ensure results include every integer 0 maxbin, can, example, easily combine tables counts include integers.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/tablefixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"","code":"tablefixed(x, maxbin = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/tablefixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"x vector integers, like counts, can include 0 maxbin highest integer among x, number bins","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/tablefixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"summary table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/tablefixed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table of counts of integer values zero through maxbin — tablefixed","text":"likely efficient way existing package, useful fast enough. using dataset like EJScreen 13 indicators interest, counting many 13 various cutpoints, may zero rows exactly 8 cutoff, example. function makes easier combine tables summary 0-13 table table() return integers came given case (one cutoff).","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step1.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"Reshapes columns 1 row data.table tall multirow data.frame.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"","code":"table_gt_format_step1(ejamit_results_1row = NULL, type = \"demog\")"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and reshape 1 row of ejamit results to prep for formatting as gt table/report — table_gt_format_step1","text":"ejamit_results_1row data.table (data.frame) like testoutput_ejamit_100pts_1miles$results_overall something like ejamit(testpoints_100, radius = 1)$results_overall type demog envt specify type table","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step2.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"Format table demog envt scores, percentiles, etc. look similar EJScreen report tables","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"","code":"table_gt_format_step2(   df,   type = c(\"demog\", \"envt\")[1],   my_cell_color = \"#dce6f0\",   my_border_color = \"#aaaaaa\",   digits_default = 2 )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"df data frame table_gt_format_step1 just specific format key EJAM results. columns (still works first two omitted user-provided indicators used - just names indicator 1, indicator 2, etc.): varnames_r, varnames_shown, value, state_avg, state_pctile, usa_avg, usa_pctile one row per indicator, varnames_shown longer indicator names use report. sort order df ignored!  Instead, variables shown order shown EJScreen reports, recorded map_headernames checked via varinfo(varnames_r, \"reportsort\"), etc. Uses gt R package formatting. type string - must demog envt my_cell_color color table cell fill backgrounds,  can given string ('blue') hex code ('#0070c0') my_border_color color table borders boundaries, can given string ('blue') hex code ('#0070c0') digits_default number digits round specified given indicator (rounding info drawn map_headernames$decimals)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_format_step2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a table of demog or envt scores, percentiles, etc. to look similar to EJScreen report tables — table_gt_format_step2","text":"gt-style table formatting closely match EJScreen standard report formatting","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"Uses list results ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"","code":"table_gt_from_ejamit(ejamitoutput = NULL, type = c(\"demog\", \"envt\")[1])"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"ejamitoutput list EJAM results formatted testoutput_ejamit_100pts_1miles, output ejamit() type Must \"demog\" \"envt\" – Creates one time","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"Provides table gt format R package called gt","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"See R package called gt. Also see code creates html tables html template code creates formatted spreadsheets like table_xls_format()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a gt-format table of results from EJAM — table_gt_from_ejamit","text":"","code":"table_gt_from_ejamit(testoutput_ejamit_100pts_1miles)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_1site.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"Uses 1 row results_bysite part ejamit() output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_1site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"","code":"table_gt_from_ejamit_1site(...)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_1site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"... passed table_gt_from_ejamit_overall()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_1site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of results for 1 site from EJAM — table_gt_from_ejamit_1site","text":"","code":"table_gt_from_ejamit_1site(testoutput_ejamit_100pts_1miles$results_bysite[ 1, ])"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"Uses results_overall element ejamit() output","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"","code":"table_gt_from_ejamit_overall(   ejamit_results_1row = NULL,   type = c(\"demog\", \"envt\")[1] )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"ejamit_results_1row 1-row data.table like testoutput_ejamit_100pts_1miles$results_overall, come ejamit(testpoints_10)$results_overall type Must \"demog\" \"envt\" – Creates one time","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"Provides table gt format R package called gt","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_gt_from_ejamit_overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a formatted table of results from EJAM overall summary stats — table_gt_from_ejamit_overall","text":"","code":"x <- table_gt_from_ejamit_overall(testoutput_ejamit_100pts_1miles$results_overall)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_order_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"Get order variable names sort , seen EJScreen Community Report","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_order_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"","code":"table_order_variables(   varnames,   s1 = \"ejscreensort\",   s2 = \"sortvarlistEJSCREENREPORT\",   s3 = \"sort_within_varlistEJSCREENREPORT\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_order_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"varnames vector indicator variables names blockgroupstats, bgej, etc., \"pm\", \"pctlowinc\", \"pctile.EJ.DISPARITY.traffic.score.eo\" etc. others found names_all_r, specific subsets like c(names_d, names_d_subgroups, names_e) c(names_ej_pctile, names_ej_state_pctile, names_ej_supp_pctile, names_ej_supp_state_pctile) s1 name column map_headernames get sort info s2 optional like s1 secondary s1 s3 optional tertiary","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_order_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"vector order(), used sorting data.frame example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_order_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get order of variable names to sort by, as seen in EJScreen Community Report — table_order_variables","text":"","code":"cbind(table_order_variables(c(names_d, names_d_subgroups, names_e)))      out <- testoutput_ejamit_10pts_1miles   vars <- out$formatted[ , 'indicator']   vars <- fixcolnames(vars, 'long', 'r')   out$formatted[table_order_variables(vars), ]"},{"path":"https://usepa.github.io/EJAM-open/reference/table_ratios_from_ejamit.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"Quick view summary stats type stat, lacks rounding specific type, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_ratios_from_ejamit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"","code":"table_ratios_from_ejamit(ejamitout, sitenumber = NULL, decimals = 1)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_ratios_from_ejamit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"ejamitout list ejamit() includes results_overall sitenumber NULL, uses overall results. integer, uses site, based just one row ejamitout$results_bysite decimals optional number decimal places round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_ratios_from_ejamit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick view of summary stats by type of stat, but lacks rounding specific to each type, etc. — table_ratios_from_ejamit","text":"prints console returns simple data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numbers in a table, each column to appropriate number of decimal places — table_round","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"Round numbers table, column appropriate number decimal places","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"","code":"table_round(x, var = names(x), varnametype = \"rname\", ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"x data.frame, data.table, vector least numerical columns, like results ejamit()$results_bysite var optional, assumed names(x) default, specifies colnames table names vector elements, within x varnametype optional, name column map_headernames looked var ... passed .numericish()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"Returns original x appropriate cells rounded .","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"Percentages stored 0 1 rather 0 100 shown correctly unless adjusted, rounding info says 0 digits intent show 0 digits 0-100 percent number.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_round.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round numbers in a table, each column to appropriate number of decimal places — table_round","text":"","code":"table_round(c(12.123456, 9, NA ), 'pm')   x <- testoutput_ejamit_10pts_1miles$results_bysite[    1:2, c('lat','lon', 'pop', names_these, names_these_ratio_to_avg, names_e_pctile),     with = FALSE  ]   table_rounding_info(names(x))   table_round(x)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_rounding_info.html","id":null,"dir":"Reference","previous_headings":"","what":"How many decimal places to round to for given variable(s) — table_rounding_info","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"many decimal places round given variable(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_rounding_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"","code":"table_rounding_info(var, varnametype = \"rname\")"},{"path":"https://usepa.github.io/EJAM-open/reference/table_rounding_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"var vector variable names c(\"pctlowinc\", \"pm\") c(names_d, names_d_subgroups) varnametype column map_headernames use looking var, like \"rname\" \"api\" \"long\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_rounding_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"named vector size var, var names.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_rounding_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How many decimal places to round to for given variable(s) — table_rounding_info","text":"","code":"table_rounding_info(\"pm\")   table_round(8.252345, \"pm\")   table_round(8, \"pm\")      cbind(table_rounding_info(names_all_r), fixcolnames(names_all_r, \"r\", \"long\"))"},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","title":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","text":"Round numbers table, column appropriate number significant digits","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","text":"","code":"table_signif(dat, digits = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","text":"dat data.frame data.table numbers digits vector long number columns dat, use default get number significant digits varinfo(colnames(dat), 'sigfigs')$sigfigs gets map_headernames dataset metadata EJAM/EJScreen indicators.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","text":"table size dat","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round numbers in a table, each column to appropriate number of significant digits — table_signif","text":"","code":"out <- testoutput_ejamit_10pts_1miles mytable <- out$results_bysite[1:2, ..names_these] table_signif_round_x100(mytable) # same as this: table_signif(   table_round(     table_x100(       mytable, names_pct_as_fraction_ejamit     )   ) )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif_round_x100.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","title":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","text":"Clean table EJAM numbers: signif digits, rounding, scaling 0-100% table_signif() table_round() fix_pctcols_x100() one call.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif_round_x100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","text":"","code":"table_signif_round_x100(x, cnames = names_pct_as_fraction_ejamit)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif_round_x100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","text":"x data.frame data.table cnames use default formatting output like ejamit()$results_bysite","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif_round_x100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","text":"table shape x","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_signif_round_x100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean table of EJAM numbers: signif digits, rounding, scaling as 0-100% Does table_signif() and table_round() and fix_pctcols_x100() in one call. — table_signif_round_x100","text":"","code":"out <- testoutput_ejamit_10pts_1miles$results_bysite table_signif_round_x100(   out[1:2, ..names_these] )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_tall_from_overall.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"Take quick look results RStudio console","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_tall_from_overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"","code":"table_tall_from_overall(results_overall, longnames = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_tall_from_overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"results_overall data.table 1 row, output ejamit() doaggregate() longnames vector names variables results_overall, output ejamit() doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_tall_from_overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"data.frame one indicator per row","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_tall_from_overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the results_overall part of the output of ejamit() or doaggregate() — table_tall_from_overall","text":"","code":"table_tall_from_overall(testoutput_ejamit_10pts_1miles$results_overall)  table_tall_from_overall(x$results_bysite[1, ])"},{"path":"https://usepa.github.io/EJAM-open/reference/table_validated_ejamit_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"first step formatting results nice tables","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_validated_ejamit_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"","code":"table_validated_ejamit_row(ejamit_results_1row = NULL)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_validated_ejamit_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"ejamit_results_1row 1-row data.table like testoutput_ejamit_100pts_1miles$results_overall, come ejamit(testpoints_10)$results_overall single row testoutput_ejamit_100pts_1miles$results_bysite","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_validated_ejamit_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"Returns input 1-row data.table, indicators etc. columns. 1 row table, colnames expected, returns correct structure filled NA values.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_validated_ejamit_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cleans/validates EJAM results for 1 place or overall — table_validated_ejamit_row","text":"","code":"x <- table_validated_ejamit_row(testoutput_ejamit_100pts_1miles$results_bysite[ 1, ])   x <- table_validated_ejamit_row(testoutput_ejamit_100pts_1miles$results_overall)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_x100.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","text":"multiplies data rescale percentages stored 0 1, 0-100","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_x100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","text":"","code":"table_x100(df, cnames = names_pct_as_fraction_ejamit)"},{"path":"https://usepa.github.io/EJAM-open/reference/table_x100.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","text":"df data.frame can data.table cnames colnames df indicators multiply 100, like names_pct_as_fraction_ejamit, names_pct_as_fraction_blockgroupstats, names_pct_as_fraction_ejscreenit","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_x100.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","text":"df data specified columns multiplied 100","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_x100.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to multiply certain percentage columns by 100 to convert 0-1.00 into 0-100 — table_x100","text":"","code":"out <- testoutput_ejamit_10pts_1miles mytable <- out$results_bysite[1:2, ..names_these] table_signif_round_x100(mytable) # same as this: table_signif(   table_round(     table_x100(       mytable, names_pct_as_fraction_ejamit     )   ) )   y = data.frame(pctlowinc = 1:2, pctpre1960 = 1:2, avg.pctunemployed = 1:2, avg.pctpre1960 = 1:2)    table_x100(y, names_pct_as_fraction_ejscreenit)  table_x100(y, names_pct_as_fraction_blockgroupstats)  table_x100(y, names_pct_as_fraction_ejamit)  cat(\"\\n\\n\")  names_pct_as_fraction_ejscreenit  names_pct_as_fraction_blockgroupstats  names_pct_as_fraction_ejamit  cat(\"\\n\\n\")  ytable = data.table(pctlowinc = 1:2, pctpre1960 = 1:2,                      avg.pctunemployed = 1:2,                       avg.pctpre1960 = 1:2)    table_x100(ytable, names_pct_as_fraction_blockgroupstats)   table_x100(ytable, names_pct_as_fraction_ejamit)  cat(\"\\n\\n\")  y  ytable"},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"Used table_xls_from_ejam()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"","code":"table_xls_format(   overall,   eachsite,   longnames = NULL,   formatted = NULL,   bybg = NULL,   plot_distance_by_group = FALSE,   summary_plot = NULL,   plotlatest = FALSE,   plotfilename = NULL,   ok2plot = TRUE,   mapadd = FALSE,   report_map = NULL,   community_reportadd = FALSE,   community_html = NULL,   analysis_title = \"EJAM analysis\",   radius_or_buffer_in_miles = NULL,   radius_or_buffer_description =     \"Miles radius of circular buffer (or distance used if buffering around polygons)\",   buffer_desc = \"Selected Locations\",   notes = NULL,   custom_tab = NULL,   custom_tab_name = \"other\",   heatmap_colnames = NULL,   heatmap_cuts = c(80, 90, 95),   heatmap_colors = c(\"yellow\", \"orange\", \"red\"),   heatmap2_colnames = NULL,   heatmap2_cuts = c(1.009, 2, 3),   heatmap2_colors = c(\"yellow\", \"orange\", \"red\"),   hyperlink_colnames = c(\"EJScreen Report\", \"EJScreen Map\", \"ACS Report\", \"ECHO Report\"),   graycolnames = NULL,   narrowcolnames = NULL,   graycolor = \"gray\",   narrow6 = 6,   testing = FALSE,   updateProgress = NULL,   launchexcel = FALSE,   saveas = NULL,   ejscreen_ejam_caveat = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"overall table save one tab, ejamit()$results_overall, EJAM analysis indicators overall (one row), entire output ejamit() passed overall, function figures eachsite, etc. eachsite table save one tab, ejamit()$results_bysite, EJAM analysis site site (one row per site) longnames vector indicator names display Excel table formatted optional table save one tab, ejamit()$results_overall, EJAM analysis overall different format bybg Optional large table details block group needed analyze distances group. plot_distance_by_group logical, whether try add plot mean distance group. requires bybg provided parameter input function. summary_plot optional plot object passed EJAM shiny app save 'Plot' sheet Excel table plotlatest optional logical. TRUE, recently displayed plot (prior function called) inserted tab called plot2 plotfilename full path including name .png file insert ok2plot can set FALSE prevent plots attempted, debugging mapadd logical optional - try include map points report_map leaflet map object passed Shiny app display 'Map' sheet community_reportadd logical provided shiny app specify whether include community report image community_html HTML file community report provided shiny app include spreadsheet analysis_title optional title passed Shiny app 'Notes' sheet radius_or_buffer_in_miles provided, miles buffer distance (polygon point circular buffers) radius_or_buffer_description optional text saying distance radius polygon buffer, passed 'Notes' sheet buffer_desc optional description buffer used analysis, passed 'Notes' sheet notes Text additional notes put notes tab, optional vector character elements pasted one line . custom_tab optional table put extra tab custom_tab_name optional name optional custom_tab heatmap_colnames optional vector colnames apply heatmap colors, defaults percentiles heatmap_cuts vector values separate heatmap colors, 0-100 percentiles heatmap_colors vector color names heatmap bins, length heatmap_cuts, first color >= 1st cutpoint, <2d, second color >=2d cutpoint <3d, etc. heatmap2_colnames like heatmap_colnames ratios default heatmap2_cuts like heatmap_cuts ratios default heatmap2_colors like heatmap_colors ratios hyperlink_colnames names treat URLs hyperlinks graycolnames columns de-emphasize narrowcolnames column numbers make narrow graycolor color used de-emphasize columns narrow6 narrow testing optional testing updateProgress optional Shiny progress bar update formatting launchexcel Set TRUE function launch Excel immediately, showing final workbook created . saveas NULL, valid path filename.xlsx provided, workbook saved locally path name. Warning: overwrite existing file. ejscreen_ejam_caveat optional text want change notes tab ... params passed along openxlsx::writeData()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"workbook, ready saved spreadsheet format, tabs like \"Overall\" \"Site\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"Already took put code table_xls_format() table_xls_format_api()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format EJAM tabular outputs for saving as Excel spreadsheet — table_xls_format","text":"","code":"# \\donttest{   table_xls_format(     testoutput_ejamit_100pts_1miles$results_overall,     testoutput_ejamit_100pts_1miles$results_bysite,     saveas =  \"out1.xlsx\")  # can just pass the whole results of ejamit(), for convenience  wb <- table_xls_format(testoutput_ejamit_100pts_1miles)  openxlsx::saveWorkbook(wb, file = \"out2.xlsx\") # }"},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_from_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"Almost identical ejam2excel()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_from_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"","code":"table_xls_from_ejam(   ejamitout,   fname = NULL,   save_now = TRUE,   overwrite = TRUE,   launchexcel = FALSE,   interactive_console = TRUE,   ok2plot = TRUE,   in.testing = FALSE,   in.analysis_title = \"EJAM analysis\",   react.v1_summary_plot = NULL,   radius_or_buffer_in_miles = NULL,   buffer_desc = \"Selected Locations\",   radius_or_buffer_description = NULL,   hyperlink_colnames = \"ECHO Report\",   site_method = \"\",   mapadd = FALSE,   report_map = NULL,   community_reportadd = TRUE,   community_html = NULL,   shp = NULL,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_from_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"ejamitout output ejamit() fname optional name full path name file save locally, like \".xlsx\" save_now optional logical, whether save .xlsx file locally just return workbook object can later written .xlsx file using openxlsx::saveWorkbook() overwrite optional logical, passed openxlsx::saveWorkbook() launchexcel optional logical, passed table_xls_format(), whether launch browser see spreadsheet immediately interactive_console optional - set FALSE used code server. TRUE, prompts RStudio user interactively asking save downloaded file ok2plot optional logical, passed  table_xls_format(), whether safe try plot set FALSE debugging plot problems .testing optional logical .analysis_title optional title character string react.v1_summary_plot optional - plot object radius_or_buffer_in_miles optional radius miles buffer_desc description location use labels, like \"Selected Locations\" radius_or_buffer_description optional text phrase describing places analyzed hyperlink_colnames optional names columns URLs site_method site selection method, SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT optional site method parameter used create specific title create_filename. Note ejamitout$sitetype quite site_method parameter used building reports. sitetype can latlon, fips, shp site_method can one : SHP, latlon, FIPS, NAICS, FRS, EPA_PROGRAM, SIC, MACT mapadd Logical, whether add tab map sites. report tab added, though, standalone static map excel tab redundant. report_map map use mapadd = TRUE (re-created omitted/NULL mapadd TRUE) community_reportadd Logical, whether add tab static copy summary report (tables, map, barplot). community_html HTML summary/community report available (re-created omitted/NULL community_reportadd TRUE) shp shapefile create map providing via report_map community_html parameters ... optional additional parameters passed table_xls_format(), heatmap_colnames, heatmap_cuts, heatmap_colors, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_from_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"returns workbook object use openxlsx::saveWorkbook(wb_out, pathname) returns just full path/file name saved save_now = TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/table_xls_from_ejam.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the results of ejamit() for excel and optionally save .xlsx file — table_xls_from_ejam","text":"","code":"# \\donttest{   table_xls_from_ejam(testoutput_ejamit_10pts_1miles)   # }"},{"path":"https://usepa.github.io/EJAM-open/reference/testdata.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","title":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","text":"utility show dir_tree available files testdata folders See list samples input files try EJAM, output examples EJAM functions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","text":"","code":"testdata(pattern = NULL, installed = TRUE, quiet = FALSE)"},{"path":"https://usepa.github.io/EJAM-open/reference/testdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","text":"pattern optional query expression, used regexp passed fs::dir_ls() installed developer local source package, can set parameter FALSE want work local source package version testdata folders rather locally installed version. quiet set TRUE want just get path without seeing info console without browsing folder","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","text":"path local testdata folder comes EJAM package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to show dir_tree of available files in testdata folders See list of samples of input files to try in EJAM, and output examples from EJAM functions — testdata","text":"","code":"testdata('shapes', quiet = T) x <- testdata('shape', quiet = TRUE) x[fs::is_file(x)]  testdata('fips', quiet = T) testdata('registryid', quiet = T) testdata(\"address\", quiet = T)  # datasets as lazyloaded objects vs. files installed with package  topic = \"fips\"  # or \"shape\" or \"latlon\" or \"naics\" or \"address\" etc.  # datasets / R objects cbind(data.in.package  = sort(grep(topic, EJAM:::datapack()$Item, value = T)))  # files cbind(files.in.package = sort(basename(testdata(topic, quiet = T))))"},{"path":"https://usepa.github.io/EJAM-open/reference/testdatafolder.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to show path to testdata folders see folder that has samples of input files to try in EJAM, and output examples from EJAM functions — testdatafolder","title":"utility to show path to testdata folders see folder that has samples of input files to try in EJAM, and output examples from EJAM functions — testdatafolder","text":"utility show path testdata folders see folder samples input files try EJAM, output examples EJAM functions","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testdatafolder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to show path to testdata folders see folder that has samples of input files to try in EJAM, and output examples from EJAM functions — testdatafolder","text":"","code":"testdatafolder(installed = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/testdatafolder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to show path to testdata folders see folder that has samples of input files to try in EJAM, and output examples from EJAM functions — testdatafolder","text":"installed developer local source package, can set parameter FALSE want work local source package version testdata folders rather locally installed version.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testdatafolder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to show path to testdata folders see folder that has samples of input files to try in EJAM, and output examples from EJAM functions — testdatafolder","text":"path local testdata folder comes EJAM package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_address_table.html","id":null,"dir":"Reference","previous_headings":"","what":"datasets for trying address-related functions — testinput_address_table","title":"datasets for trying address-related functions — testinput_address_table","text":"datasets trying address-related functions (testinput_address_parts, testinput_address_2, testinput_address_9, testinput_address_table_9, testinput_address_table, testinput_address_table_goodnames, testinput_address_table_withfull)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_address_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"datasets for trying address-related functions — testinput_address_table","text":"","code":"testinput_address_table"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_address_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"datasets for trying address-related functions — testinput_address_table","text":"object class data.frame 2 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_blockgroups.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_fips_blockgroups dataset — testinput_fips_blockgroups","title":"testinput_fips_blockgroups dataset — testinput_fips_blockgroups","text":"Census FIPS codes vector example input, e.g., ejamit(fips = testinput_fips_blockgroups)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_blockgroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_fips_blockgroups dataset — testinput_fips_blockgroups","text":"","code":"testinput_fips_blockgroups"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_blockgroups.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_fips_blockgroups dataset — testinput_fips_blockgroups","text":"object class character length 14.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_fips_cities dataset — testinput_fips_cities","title":"testinput_fips_cities dataset — testinput_fips_cities","text":"Census FIPS codes vector example input, e.g., ejamit(fips = testinput_fips_cities)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_fips_cities dataset — testinput_fips_cities","text":"","code":"testinput_fips_cities"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_fips_cities dataset — testinput_fips_cities","text":"object class numeric length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_fips_counties dataset — testinput_fips_counties","title":"testinput_fips_counties dataset — testinput_fips_counties","text":"Census FIPS codes vector example input, e.g., ejamit(fips = testinput_fips_counties)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_fips_counties dataset — testinput_fips_counties","text":"","code":"testinput_fips_counties"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_counties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_fips_counties dataset — testinput_fips_counties","text":"object class character length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_states.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_fips_states dataset — testinput_fips_states","title":"testinput_fips_states dataset — testinput_fips_states","text":"Census FIPS codes vector example input, e.g., ejamit(fips = testinput_fips_states)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_fips_states dataset — testinput_fips_states","text":"","code":"testinput_fips_states"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_fips_states dataset — testinput_fips_states","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_tracts.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_fips_tracts dataset — testinput_fips_tracts","title":"testinput_fips_tracts dataset — testinput_fips_tracts","text":"Census FIPS codes vector example input, e.g., ejamit(fips = testinput_fips_tracts)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_tracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_fips_tracts dataset — testinput_fips_tracts","text":"","code":"testinput_fips_tracts"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_fips_tracts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_fips_tracts dataset — testinput_fips_tracts","text":"object class character length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_mact.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_mact dataset — testinput_mact","title":"testinput_mact dataset — testinput_mact","text":"MACT subpart code example input, e.g., latlon_from_mactsubpart(testinput_mact)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_mact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_mact dataset — testinput_mact","text":"","code":"testinput_mact"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_mact.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_mact dataset — testinput_mact","text":"object class character length 1.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_naics.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_naics dataset — testinput_naics","title":"testinput_naics dataset — testinput_naics","text":"NAICS codes vector example input, e.g., latlon_from_naics(testinput_naics)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_naics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_naics dataset — testinput_naics","text":"","code":"testinput_naics"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_naics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_naics dataset — testinput_naics","text":"object class numeric length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_name.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_program_name dataset — testinput_program_name","title":"testinput_program_name dataset — testinput_program_name","text":"EPA program name codes vector example input, e.g., latlon_from_program(testinput_program_name)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_program_name dataset — testinput_program_name","text":"","code":"testinput_program_name"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_name.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_program_name dataset — testinput_program_name","text":"object class character length 2.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_sys_id.html","id":null,"dir":"Reference","previous_headings":"","what":"test data, EPA program names and program system ID numbers to try using — testinput_program_sys_id","title":"test data, EPA program names and program system ID numbers to try using — testinput_program_sys_id","text":"test data, EPA program names program system ID numbers try using","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_sys_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data, EPA program names and program system ID numbers to try using — testinput_program_sys_id","text":"","code":"testinput_program_sys_id"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_sys_id.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data, EPA program names and program system ID numbers to try using — testinput_program_sys_id","text":"object class data.frame 8 rows 2 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_program_sys_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data, EPA program names and program system ID numbers to try using — testinput_program_sys_id","text":"Just convenience, installed package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_regid.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_regid (DATA) test data, vector of EPA FRS Registry ID numbers — testinput_regid","title":"testinput_regid (DATA) test data, vector of EPA FRS Registry ID numbers — testinput_regid","text":"testinput_regid (DATA) test data, vector EPA FRS Registry ID numbers","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_regid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"testinput_regid (DATA) test data, vector of EPA FRS Registry ID numbers — testinput_regid","text":"testing, e.g., frs_from_regid(testinput_regid) mapfast(  frs_from_regid(testinput_regid)  )","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_registry_id.html","id":null,"dir":"Reference","previous_headings":"","what":"test data, EPA Facility Registry ID numbers to try using — testinput_registry_id","title":"test data, EPA Facility Registry ID numbers to try using — testinput_registry_id","text":"test data, EPA Facility Registry ID numbers try using","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_registry_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data, EPA Facility Registry ID numbers to try using — testinput_registry_id","text":"","code":"testinput_registry_id"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_registry_id.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data, EPA Facility Registry ID numbers to try using — testinput_registry_id","text":"object class numeric length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_registry_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data, EPA Facility Registry ID numbers to try using — testinput_registry_id","text":"Just convenience, installed package","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_shapes_2.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_shapes_2 dataset — testinput_shapes_2","title":"testinput_shapes_2 dataset — testinput_shapes_2","text":"Sample shapefile/polygon data spatial data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_shapes_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_shapes_2 dataset — testinput_shapes_2","text":"","code":"testinput_shapes_2"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_shapes_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_shapes_2 dataset — testinput_shapes_2","text":"object class sf (inherits data.frame) 2 rows 18 columns.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_sic.html","id":null,"dir":"Reference","previous_headings":"","what":"testinput_sic dataset — testinput_sic","title":"testinput_sic dataset — testinput_sic","text":"SIC codes vector example input e.g., latlon_from_sic(testinput_sic)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_sic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testinput_sic dataset — testinput_sic","text":"","code":"testinput_sic"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_sic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testinput_sic dataset — testinput_sic","text":"object class character length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_xtrac.html","id":null,"dir":"Reference","previous_headings":"","what":"for internal use — testinput_xtrac","title":"for internal use — testinput_xtrac","text":"internal use","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_xtrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"for internal use — testinput_xtrac","text":"","code":"testinput_xtrac"},{"path":"https://usepa.github.io/EJAM-open/reference/testinput_xtrac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"for internal use — testinput_xtrac","text":"object class numeric length 25.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"test output doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_1000pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"","code":"testoutput_doaggregate_1000pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_1000pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"object class list length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_1000pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_1000pts_1miles, sites2states_or_latlon = testpoints_1000, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"test output doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_100pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"","code":"testoutput_doaggregate_100pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_100pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"object class list length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_100pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_100pts_1miles, sites2states_or_latlon = testpoints_100, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"test output doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_10pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"","code":"testoutput_doaggregate_10pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_10pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"object class list length 5.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_doaggregate_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of doaggregate() — testoutput_doaggregate_10pts_1miles","text":"output doaggregate(testoutput_getblocksnearby_10pts_1miles, sites2states_or_latlon = testpoints_10, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"test output ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_1000pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"","code":"testoutput_ejamit_1000pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_1000pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"object class list length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_1000pts_1miles","text":"output ejamit(testpoints_1000, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_100pts_1miles","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"test output ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_100pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"","code":"testoutput_ejamit_100pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_100pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"object class list length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_100pts_1miles","text":"output ejamit(testpoints_100, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of ejamit() — testoutput_ejamit_10pts_1miles","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"test output ejamit()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_10pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"","code":"testoutput_ejamit_10pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_10pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"object class list length 8.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of ejamit() — testoutput_ejamit_10pts_1miles","text":"output ejamit(testpoints_10, radius = 1, include_ejindexes = TRUE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_cities.html","id":null,"dir":"Reference","previous_headings":"","what":"testoutput_ejamit_fips_cities dataset — testoutput_ejamit_fips_cities","title":"testoutput_ejamit_fips_cities dataset — testoutput_ejamit_fips_cities","text":"output ejamit(fips = testinput_fips_cities)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_cities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testoutput_ejamit_fips_cities dataset — testoutput_ejamit_fips_cities","text":"","code":"testoutput_ejamit_fips_cities"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_cities.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testoutput_ejamit_fips_cities dataset — testoutput_ejamit_fips_cities","text":"object class list length 8.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_counties.html","id":null,"dir":"Reference","previous_headings":"","what":"testoutput_ejamit_fips_counties dataset — testoutput_ejamit_fips_counties","title":"testoutput_ejamit_fips_counties dataset — testoutput_ejamit_fips_counties","text":"output ejamit(fips = testinput_fips_counties)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_counties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testoutput_ejamit_fips_counties dataset — testoutput_ejamit_fips_counties","text":"","code":"testoutput_ejamit_fips_counties"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_fips_counties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testoutput_ejamit_fips_counties dataset — testoutput_ejamit_fips_counties","text":"object class list length 8.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_shapes_2.html","id":null,"dir":"Reference","previous_headings":"","what":"testoutput_ejamit_shapes_2 dataset — testoutput_ejamit_shapes_2","title":"testoutput_ejamit_shapes_2 dataset — testoutput_ejamit_shapes_2","text":"output ejamit(shapefile = testinput_shapes_2, radius = 0)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_shapes_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testoutput_ejamit_shapes_2 dataset — testoutput_ejamit_shapes_2","text":"","code":"testoutput_ejamit_shapes_2"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejamit_shapes_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testoutput_ejamit_shapes_2 dataset — testoutput_ejamit_shapes_2","text":"object class list length 8.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_1pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test data, output from this function — testoutput_ejscreenapi_1pts_1miles","title":"test data, output from this function — testoutput_ejscreenapi_1pts_1miles","text":"test data, output function","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_1pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data, output from this function — testoutput_ejscreenapi_1pts_1miles","text":"","code":"testoutput_ejscreenapi_1pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_1pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data, output from this function — testoutput_ejscreenapi_1pts_1miles","text":"object class data.frame 1 rows 291 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_1pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data, output from this function — testoutput_ejscreenapi_1pts_1miles","text":"Just convenience, installed package, equivalent results ejscreenapi(lon = testpoints_5$lon[1], lat = testpoints_5$lat[1],     radius = 1, unit = 'miles', wkid = 4326,     report_every_n = 25, # report_every_n = 1000,     save_when_report = FALSE, format_report_or_json =  'pjson', on_server_so_dont_save_files = FALSE,      ipurl = 'ejscreen.epa.gov',     updateProgress = NULL, drop_redundant_indicators = FALSE)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_plus_5.html","id":null,"dir":"Reference","previous_headings":"","what":"test data examples of output from ejscreenapi_plus() using testpoints_5, radius = 1 — testoutput_ejscreenapi_plus_5","title":"test data examples of output from ejscreenapi_plus() using testpoints_5, radius = 1 — testoutput_ejscreenapi_plus_5","text":"test data examples output ejscreenapi_plus() using testpoints_5, radius = 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_plus_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data examples of output from ejscreenapi_plus() using testpoints_5, radius = 1 — testoutput_ejscreenapi_plus_5","text":"","code":"testoutput_ejscreenapi_plus_5"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_plus_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data examples of output from ejscreenapi_plus() using testpoints_5, radius = 1 — testoutput_ejscreenapi_plus_5","text":"object class data.frame 5 rows 356 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenapi_plus_5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data examples of output from ejscreenapi_plus() using testpoints_5, radius = 1 — testoutput_ejscreenapi_plus_5","text":"Just convenience, installed package. header row, plus row point, 300+ columns buffer summary results.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_5.html","id":null,"dir":"Reference","previous_headings":"","what":"test data examples of output from ejscreenit() using testpoints_5, radius = 1 — testoutput_ejscreenit_5","title":"test data examples of output from ejscreenit() using testpoints_5, radius = 1 — testoutput_ejscreenit_5","text":"test data examples output ejscreenit() using testpoints_5, radius = 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data examples of output from ejscreenit() using testpoints_5, radius = 1 — testoutput_ejscreenit_5","text":"","code":"testoutput_ejscreenit_5"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data examples of output from ejscreenit() using testpoints_5, radius = 1 — testoutput_ejscreenit_5","text":"object class list length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data examples of output from ejscreenit() using testpoints_5, radius = 1 — testoutput_ejscreenit_5","text":"Just convenience, installed package. list outputs, named 'table', 'map', 'plot'","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_50.html","id":null,"dir":"Reference","previous_headings":"","what":"test data examples of output from ejscreenit() using testpoints_50, radius = 1 — testoutput_ejscreenit_50","title":"test data examples of output from ejscreenit() using testpoints_50, radius = 1 — testoutput_ejscreenit_50","text":"test data examples output ejscreenit() using testpoints_50, radius = 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data examples of output from ejscreenit() using testpoints_50, radius = 1 — testoutput_ejscreenit_50","text":"","code":"testoutput_ejscreenit_50"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data examples of output from ejscreenit() using testpoints_50, radius = 1 — testoutput_ejscreenit_50","text":"object class list length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_50.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data examples of output from ejscreenit() using testpoints_50, radius = 1 — testoutput_ejscreenit_50","text":"Just convenience, installed package. list outputs, named 'table', 'map', 'plot'","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_500.html","id":null,"dir":"Reference","previous_headings":"","what":"test data examples of output from ejscreenit() using testpoints_500, radius = 1 — testoutput_ejscreenit_500","title":"test data examples of output from ejscreenit() using testpoints_500, radius = 1 — testoutput_ejscreenit_500","text":"test data examples output ejscreenit() using testpoints_500, radius = 1","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data examples of output from ejscreenit() using testpoints_500, radius = 1 — testoutput_ejscreenit_500","text":"","code":"testoutput_ejscreenit_500"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_500.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data examples of output from ejscreenit() using testpoints_500, radius = 1 — testoutput_ejscreenit_500","text":"object class list length 3.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenit_500.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data examples of output from ejscreenit() using testpoints_500, radius = 1 — testoutput_ejscreenit_500","text":"Just convenience, installed package. list outputs, named 'table', 'map', 'plot'","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenRESTbroker_1pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test data, output from this function — testoutput_ejscreenRESTbroker_1pts_1miles","title":"test data, output from this function — testoutput_ejscreenRESTbroker_1pts_1miles","text":"test data, output function","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenRESTbroker_1pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test data, output from this function — testoutput_ejscreenRESTbroker_1pts_1miles","text":"","code":"testoutput_ejscreenRESTbroker_1pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenRESTbroker_1pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test data, output from this function — testoutput_ejscreenRESTbroker_1pts_1miles","text":"object class response length 10.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_ejscreenRESTbroker_1pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test data, output from this function — testoutput_ejscreenRESTbroker_1pts_1miles","text":"Just convenience, installed package, equivalent results ejscreenRESTbroker(lon = testpoints_5$lon[1], lat = testpoints_5$lat[1], radius = 1)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"","code":"testoutput_getblocksnearby_1000pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"object class data.table (inherits data.frame) 127179 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_1000pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_1000pts_1miles","text":"output getblocksnearby(testpoints_1000, radius = 1)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_100pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_100pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"","code":"testoutput_getblocksnearby_100pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_100pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"object class data.table (inherits data.frame) 14918 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_100pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_100pts_1miles","text":"output getblocksnearby(testpoints_100, radius = 1)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_10pts_1miles.html","id":null,"dir":"Reference","previous_headings":"","what":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"test output getblocksnearby(), input doaggregate()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_10pts_1miles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"","code":"testoutput_getblocksnearby_10pts_1miles"},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_10pts_1miles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"object class data.table (inherits data.frame) 1640 rows 6 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testoutput_getblocksnearby_10pts_1miles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test output of getblocksnearby(), and is an input to doaggregate() — testoutput_getblocksnearby_10pts_1miles","text":"output getblocksnearby(testpoints_10, radius = 1)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","text":"","code":"testpoints_10"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10","text":"object class data.frame 10 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","text":"","code":"testpoints_100"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100","text":"object class data.frame 100 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_1000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","text":"","code":"testpoints_1000"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_1000.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_1000","text":"object class data.frame 1000 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10000.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","text":"","code":"testpoints_10000"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_10000.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_10000","text":"object class data.frame 10000 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","text":"","code":"testpoints_100_dt"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_100_dt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_100_dt","text":"object class data.table (inherits data.frame) 100 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_5.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_5","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_5","text":"Examples inputs functions need points specified lat lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_5","text":"","code":"testpoints_5"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_5","text":"object class data.frame 5 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_5","text":"Just convenience, installed package, equivalent results reading .xlsx test data files.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_50.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_50","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_50","text":"Examples inputs functions need points specified lat lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_50","text":"","code":"testpoints_50"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_50","text":"object class data.frame 50 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_50.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_50","text":"Just convenience, installed package, equivalent results reading .xlsx test data files.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_500.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns sitenumber, lat, lon — testpoints_500","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_500","text":"test points data.frame columns sitenumber, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_500","text":"","code":"testpoints_500"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_500.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns sitenumber, lat, lon — testpoints_500","text":"object class data.frame 500 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_bad.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns note, lat, lon — testpoints_bad","title":"test points data.frame with columns note, lat, lon — testpoints_bad","text":"test points data.frame columns note, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_bad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test points data.frame with columns note, lat, lon — testpoints_bad","text":"examples test points testing functions need lat lon, invalid tricky cases like rural (blocks nearby), outside US, edge two states, NA values, etc.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"Get data.table Random Points (lat lon) Testing/ Benchmarking/ Demos, weighted various ways. weighting can specified point reflects average EPA-regulated facility, blockgroup, block, place map, US resident.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"","code":"testpoints_n(   n = 10,   weighting = c(\"frs\", \"pop\", \"area\", \"bg\", \"block\"),   region = NULL,   ST = NULL,   validonly = TRUE,   dt = TRUE )"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"n Number points needed (sample size) weighting word indicating weight random points (synonyms allowed, addition shown ): Note default frs, may want use pop even though slower. pop people (slow) = Average Person: random person among US residents (block point residence per 2020 Census) frs facility = Average Facility: random EPA-regulated facility actives Facility Registry Service (FRS) bg = Average Blockgroup: random US Census block group (internal point like centroid) block = Average Block: random US Census block (internal point like centroid) area place = Average Place: random point map (internal point avg blockgroup weighted square meters size) region optional vector EPA Regions (1-10) pick regions. ST optional, can character vector 2 letter State abbreviations pick States. validonly return points valid lat/lon coordinates. Defaults TRUE. dt logical, whether return data.table (DEFAULT) instead normal data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"data.frame data.table columns lat, lon decimal degrees, columns table used (based weighting)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random points in USA - average resident, facility, BG, block, or square mile — testpoints_n","text":"","code":"mapfast(testpoints_n(300, ST = c('LA','MS')) ) # \\donttest{ n=2 for (d in c(TRUE,FALSE)) {   for (w in c('frs', 'pop', 'area', 'bg', 'block')) {     cat(\"n=\",n,\"  weighting=\",w, \"  dt=\",d,\"\\n\\n\")     print(x <- testpoints_n(n, weighting = w, dt = d)); print(class(x))     cat('\\n')   } } # }"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_overlap3.html","id":null,"dir":"Reference","previous_headings":"","what":"test points data.frame with columns note, lat, lon — testpoints_overlap3","title":"test points data.frame with columns note, lat, lon — testpoints_overlap3","text":"test points data.frame columns note, lat, lon","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_overlap3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test points data.frame with columns note, lat, lon — testpoints_overlap3","text":"","code":"testpoints_overlap3"},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_overlap3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"test points data.frame with columns note, lat, lon — testpoints_overlap3","text":"object class data.frame 3 rows 4 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testpoints_overlap3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"test points data.frame with columns note, lat, lon — testpoints_overlap3","text":"examples test points testing functions need lat lon, 3 overlapping 1-mile radius circles. view points:","code":"pts <- testpoints_overlap3   mapfast(pts, radius = 1)   plotblocksnearby(pts, radius = 1)"},{"path":"https://usepa.github.io/EJAM-open/reference/testshapes_2.html","id":null,"dir":"Reference","previous_headings":"","what":"testshapes_2 dataset — testshapes_2","title":"testshapes_2 dataset — testshapes_2","text":"Sample shapefile/polygon data spatial data.frame","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/testshapes_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testshapes_2 dataset — testshapes_2","text":"","code":"testshapes_2"},{"path":"https://usepa.github.io/EJAM-open/reference/testshapes_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"testshapes_2 dataset — testshapes_2","text":"object class sf (inherits data.frame) 2 rows 18 columns.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/unshared.html","id":null,"dir":"Reference","previous_headings":"","what":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — unshared","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — unshared","text":"setdiff2 aka unshared just shows elements one one sets x y","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/unshared.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — unshared","text":"","code":"unshared(x, y)"},{"path":"https://usepa.github.io/EJAM-open/reference/unshared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UTILITY - see what is only in x or y but not both - just like setdiff except for y,x and also x,y — unshared","text":"","code":"unshared(1:4, 3:8)"},{"path":"https://usepa.github.io/EJAM-open/reference/urls_clusters_and_sort_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"Add update, reorder, columns results","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/urls_clusters_and_sort_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"","code":"urls_clusters_and_sort_cols(results_table)"},{"path":"https://usepa.github.io/EJAM-open/reference/urls_clusters_and_sort_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"results_table ejscreenapi() function example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/urls_clusters_and_sort_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"input table extra columns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/urls_clusters_and_sort_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Links to ejscreenapi output, to launch EJScreen report for given point(s) — urls_clusters_and_sort_cols","text":"used ejscreenapi_plus() ejamit(), create weblinks maps, output table. Adds weblinks column. Adds column flag sites close sites, Puts certain columns first.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_4table.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - Create URLs in columns, for EJAM — url_4table","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"start use server ejamit(), already used table_xls_format()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_4table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"","code":"url_4table(   lat,   lon,   radius = NULL,   regid = NULL,   fips,   wherestr = \"\",   namestr = NULL,   shapefile = NULL,   as_html = TRUE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/url_4table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"lat vector latitudes lon vector longitudes radius vector values radius miles regid optional vector FRS registry IDs available use create links detailed ECHO facility reports fips vector FIPS codes relevant, use instead lat lon, Passed url_ejscreen_report() areaid Note nearly half county fips codes impossible distinguish 5-digit zipcodes numbers used purposes. wherestr optional inferred fips provided. Passed url_ejscreenmap() can name city, county, state like fips2name(201090), \"new rochelle, ny\" \"AK\" even zip code, fips code! (FIPS, use fips parameter instead). Note nearly half county fips codes impossible distinguish 5-digit zipcodes numbers used purposes. namestr passed url_ejscreen_report() shapefile implemented as_html logical, optional. passed url_ejscreen_report() url_ejscreenmap() ... passed url_ejscreen_report() areaid=\"0201090\" city fips","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_4table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"list data.frames append list data.frames created ejamit() doaggregate(), list(results_bysite = results_bysite,      results_overall = results_overall,       newcolnames=newcolnames)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_4table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"URL functions - Create URLs in columns, for EJAM — url_4table","text":"used table_xls_format()","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"Get URLs use query FRS API find EPA facilities ID Note API might changed related functions like locate_by_id() might work now","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"","code":"url_by_id(id, type = \"frs\", ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"id vector one character strings pgm_sys_id registry_id values (need type, defined type parameter). Program ids like \"VA0088986\" frs ids like \"110015787683\" type one word, applies . default frs can program word . ... appended end URL -, useful type , example","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"vector URLs strings, length id parameter","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"Note API might changed related functions like locate_by_id() might work now - use ?latlon_from_programid() ?latlon_from_regid() instead uses API find sites, faster look table FRS dataset already loaded app, example. details FRS API, see https://www.epa.gov/frs/frs-rest-services examples https://www.epa.gov/frs/frs-rest-services#ex1 https://www.epa.gov/frs/frs-rest-services#appendixa example: https://frs-public.epa.gov/ords/frs_public2/frs_rest_services.get_facilities?pgm_sys_id=VA0088986 https://frs-public.epa.gov/ords/frs_public2/frs_rest_services.get_facilities?registry_id=110010912496 Note: API URL internal use EPA appears different public one?","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_by_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the URLs to use to query FRS API to find EPA facilities by ID Note API might have changed and related functions like locate_by_id() might not work now — url_by_id","text":"","code":"# \\donttest{     url_by_id(testinput_regid)     browseURL(url_by_id(testinput_regid)[1]) # }"},{"path":"https://usepa.github.io/EJAM-open/reference/url_countyhealthrankings.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"URL functions - Get URLs useful report(s) Counties countyhealthrankings.org","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_countyhealthrankings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"","code":"url_countyhealthrankings(fips, year = 2025)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_countyhealthrankings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"fips vector fips codes counties, 5 characters , like \"10003\" year e.g., 2025","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_countyhealthrankings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"vector URLs","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_countyhealthrankings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - Get URLs of useful report(s) on Counties from countyhealthrankings.org — url_countyhealthrankings","text":"","code":"url_countyhealthrankings(fips_counties_from_state_abbrev(\"DE\"))  # browseURL(url_countyhealthrankings(fips_counties_from_state_abbrev(\"DE\"))[1])"},{"path":"https://usepa.github.io/EJAM-open/reference/url_echo_facility_webpage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of ECHO reports — url_echo_facility_webpage","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"Get URL(s) EPA ECHO webpage facility information","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_echo_facility_webpage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"","code":"url_echo_facility_webpage(regid, as_html = FALSE, linktext)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_echo_facility_webpage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"regid EPA FRS Registry ID as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_echo_facility_webpage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"URL(s)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_echo_facility_webpage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get URLs of ECHO reports — url_echo_facility_webpage","text":"","code":"# \\donttest{  browseURL(url_echo_facility_webpage(110070874073))  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreenmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"Get URL(s) EJScreen map centered given point(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreenmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"","code":"url_ejscreenmap(   lon,   lat,   as_html = FALSE,   linktext,   wherestr = \"\",   shapefile = NULL )"},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreenmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"lon one longitudes lat one latitudes as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE wherestr Name place center (FIPS code!). Note nearly half county fips codes impossible distinguish 5-digit zipcodes numbers used purposes. zipcode 10001, use url_ejscreenmap(wherestr =  '10001') County FIPS code 10001, use url_ejscreenmap(wherestr =  fips2name('10001')) parameter passed API wherestr= , lat/lon specified. Can State abbrev like \"NY\" full state name, city like \"New Rochelle, NY\" fips2name() – using fips2name() works state, county, city FIPS code converted name. Also wherestr can street address zipcode. sure part EJScreen URL-encoded map request documented. shapefile implemented","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreenmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URL(s) for EJScreen map centered at given point(s) — url_ejscreenmap","text":"URL(s)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_acs_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"Get URL(s) EJScreen ACS report residents near given point(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_acs_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"","code":"url_ejscreen_acs_report(lon, lat, radius, as_html = FALSE, linktext)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_acs_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"lon one longitudes lat one latitudes radius miles radius as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_acs_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"URL(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_acs_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EJScreen older ACS reports - will be phased out — url_ejscreen_acs_report","text":"USED APP NOW COMMUNITY REPORT EXISTS","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EJScreen reports — url_ejscreen_report","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"Get URL(s) EJScreen standard report residents near given point(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"","code":"url_ejscreen_report(   lat = \"\",   lon = \"\",   radius = \"\",   as_html = FALSE,   linktext,   mobile = FALSE,   areatype = \"\",   areaid = \"\",   namestr = \"\",   shapefile = NULL,   wkid = 4326,   unit = 9035,   f = \"report\",   interactiveprompt = FALSE )"},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"lat one latitudes (table lat, lon columns, filepath , omit interactively select file) lon one longitudes (omitted – see lat parameter details) radius miles radius as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE mobile TRUE, provides URL mobile browser version, desktop version areatype passed areatype= API, inferred provided areaid provided areaid fips codes used,  passed areaid=  API, can FIPS blockgroups, tracts, counties. zip code! example, \"10001\" report county, zip code. Note nearly half county fips codes impossible distinguish 5-digit zipcodes numbers used purposes. county FIPS 10001, use url_ejscreen_report(areaid =  '10001') zipcode 10001, use url_ejscreen_report() zip codes since API support zip codes. can still least try url_ejscreenmap(wherestr =  '10001') namestr character string text show report name place shapefile implemented wkid default 4326 -WGS84 - World Geodetic System 1984, used GPS - see (https://epsg.io/4326) unit default 9035 means miles; kilometers use 9036 f can \"report\" \"pjson\" \"json\" interactiveprompt passed sitepoints_from_any()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"URL(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_ejscreen_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EJScreen reports — url_ejscreen_report","text":"Also see ejscreenRESTbroker() ejscreenapi1() (https://ejscreen.epa.gov/mapper/EJAPIinstructions.pdf) (https://ejscreen.epa.gov/mapper/ejscreenapi1.html)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_envirofacts_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","title":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","text":"Get URL(s) query get data facilities Envirofacts, XML,JSON,CSV, EXCEL format","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_envirofacts_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","text":"","code":"url_envirofacts_data(regid, as_html = FALSE, linktext)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_envirofacts_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","text":"regid EPA-regulated facility registry identification (ID), vector as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_envirofacts_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","text":"URL(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_envirofacts_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EPA EnviroFacts API queries - DRAFT INCOMPLETE WORK IN PROGRESS — url_envirofacts_data","text":"see https://www.epa.gov/enviro/web-services https://www.epa.gov/enviro/envirofacts-data-service-api (https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/count) ??? WORK PROGRESS .... need look documentation closely returns expected attempts WEBPAGE URL (returns webpage) e.g., https://enviro.epa.gov/enviro/efsystemquery.multisystem?fac_search=primary_name&fac_value=&fac_search_type=Beginning+&postal_code=&location_address=&add_search_type=Beginning+&city_name=&county_name=&state_code=&TribalLand=0&TribeType=selectTribeALL&selectTribe=noselect&tribedistance1=onLand&sic_type=Equal+&sic_code_to=&naics_type=Beginning+&naics_to=326&chem_name=&chem_search=Beginning+&cas_num=&page_no=1&output_sql_switch=FALSE&report=1&database_type=Multisystem https://enviro.epa.gov/enviro/efsystemquery.multisystem?state_code=DE&naics_type=Beginning+&naics_to=326&database_type=Multisystem API URL (returns data) https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/naics_type/Beginning+/naics_to/32611 https://data.epa.gov/efservice/multisystem/minLatitude/35.465158/maxLatitude/52.912225/minLongitude/-104.387994/maxLongitude/-69.231744/EXCEL","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_enviromapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of EnviroMapper reports — url_enviromapper","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"Get URL(s) EnviroMapper web-based tool, open map specified point location(s)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_enviromapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"","code":"url_enviromapper(lon, lat, as_html = FALSE, linktext, zoom = 13)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_enviromapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"lon one longitude lat one latitude as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE zoom initial map zoom extent, smaller numbers zoomed closer","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_enviromapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"URL one webpage (launches mapping tool)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_enviromapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URLs of EnviroMapper reports — url_enviromapper","text":"EnviroMapper lets view EPA-regulated facilities information map, given lat,lon","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_frs_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URLs of FRS reports — url_frs_report","title":"Get URLs of FRS reports — url_frs_report","text":"Get URL(s) reports facilities EPA FRS (facility registry service)","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_frs_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URLs of FRS reports — url_frs_report","text":"","code":"url_frs_report(regid, as_html = FALSE, linktext)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_frs_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URLs of FRS reports — url_frs_report","text":"regid one EPA FRS Registry IDs. as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_frs_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URLs of FRS reports — url_frs_report","text":"URL(s)","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_frs_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get URLs of FRS reports — url_frs_report","text":"","code":"# \\donttest{ browseURL(url_frs_report(testinput_regid)[1]) # } url_frs_report(testinput_registry_id)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"uses ACS2019 rest services ejscreen ejquery MapServer 7 Documentation format examples input parameters: https://geopub.epa.gov/arcgis/sdk/rest/index.html#/Query_Map_Service_Layer/02ss0000000r000000/","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"","code":"url_getacs_epaquery(   objectIds = 1:3,   servicenumber = 7,   outFields = NULL,   returnGeometry = FALSE,   justurl = FALSE,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"objectIds see API servicenumber see API outFields see API. eg \"STCNTRBG\",\"TOTALPOP\",\"PCT_HISP\", returnGeometry see API justurl TRUE, returns url instead default making API request ... passed url_getacs_epaquery_chunked()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - url_getacs_epaquery - experimental/ work in progress: get ACS data via EPA API (for <200 places) — url_getacs_epaquery","text":"","code":"url_getacs_epaquery(justurl=TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery_chunked.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"URL functions - url_getacs_epaquery_chunked - experimental/ work progress: chunks, get ACS data via EPA API","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery_chunked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"","code":"url_getacs_epaquery_chunked(   objectIds = 1:3,   servicenumber = 7,   outFields = NULL,   returnGeometry = FALSE,   justurl = FALSE,   chunksize = 200,   ... )"},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery_chunked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"objectIds see API servicenumber see API outFields see API returnGeometry see API justurl see API chunksize eg 200 chunks 200 request ... passed url_getacs_epaquery()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery_chunked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_getacs_epaquery_chunked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"URL functions - url_getacs_epaquery_chunked - experimental/ work in progress: in chunks, get ACS data via EPA API — url_getacs_epaquery_chunked","text":"","code":"# \\donttest{  # x <- list() # chunked chunks. best not to ask for all these:  # x[[1]] <- url_getacs_epaquery_chunked(   1:1000, chunksize = 100)  # x[[2]] <- url_getacs_epaquery_chunked(1001:5000, chunksize = 100)  # xall <- do.call(rbind, x)  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_eparest_chunked_by_id.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"URL functions - url_get_eparest_chunked_by_id - experimental/ work progress: chunks, get ACS data Block weights nearby via EPA API","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_eparest_chunked_by_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"","code":"url_get_eparest_chunked_by_id(objectIds, chunksize = 200, ...)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_eparest_chunked_by_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"objectIds see API chunksize see API ... passed url_getacs_epaquery()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_eparest_chunked_by_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_get_eparest_chunked_by_id - experimental/ work in progress: in chunks, get ACS data or Block weights nearby via EPA API — url_get_eparest_chunked_by_id","text":"table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_via_url.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"URL functions - url_get_via_url - helper function work progress: GET json via url ejscreen ejquery map services","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_via_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"","code":"url_get_via_url(url)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_via_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"url url EJScreen ejquery request","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_get_via_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_get_via_url - helper function work in progress: GET json via url of ejscreen ejquery map services — url_get_via_url","text":"json","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_linkify.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to make html link from URL — url_linkify","title":"utility to make html link from URL — url_linkify","text":"Convert URL HTML link opens new tab","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_linkify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to make html link from URL — url_linkify","text":"","code":"url_linkify(url, text)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_linkify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to make html link from URL — url_linkify","text":"url string URL text string label","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_linkify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to make html link from URL — url_linkify","text":"url_linkify('epa.gov','EPA') returns \"<href=\\\"epa.gov\\\", target=\\\"_blank\\\">EPA<\/>\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_map_google.html","id":null,"dir":"Reference","previous_headings":"","what":"Map - get URL(s) that would display map(s) on maps.google.com — url_map_google","title":"Map - get URL(s) that would display map(s) on maps.google.com — url_map_google","text":"Map - get URL(s) display map(s) maps.google.com","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_map_google.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map - get URL(s) that would display map(s) on maps.google.com — url_map_google","text":"","code":"url_map_google(lat, lon, zoom = 13, point = TRUE)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_map_google.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map - get URL(s) that would display map(s) on maps.google.com — url_map_google","text":"lat Anything can handled sitepoints_from_any(). Leave unspecified interactively browse .xlsx file lat,lon columns, lat can data.frame lat,lon column names case longitude provided, lat = testpoints_10[1,], lat lon can separately provided vectors. lon longitude, omit parameter provide points first parameter. zoom zoomed value 3 5, zoomed default 12 point logical, TRUE, URL marker point zoom parameter ignored. Otherwise just map.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_map_google.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map - get URL(s) that would display map(s) on maps.google.com — url_map_google","text":"URL(s) vector one per point","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/url_naics.com.html","id":null,"dir":"Reference","previous_headings":"","what":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"See (https://naics.com) information NAICS codes","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_naics.com.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"","code":"url_naics.com(query, as_html = FALSE, linktext)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_naics.com.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"query string query term like \"gasoline\" \"copper smelting\" as_html Whether return just urls html hyperlinks use DT::datatable() example linktext used text hyperlinks, supplied as_html=TRUE","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_naics.com.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"URL functions - url_naics.com - Get URL for page with info about industry sectors by text query term — url_naics.com","text":"URL string","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_online.html","id":null,"dir":"Reference","previous_headings":"","what":"utility - check if URL available, such as if an API is online or offline — url_online","title":"utility - check if URL available, such as if an API is online or offline — url_online","text":"utility - check URL available, API online offline","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_online.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility - check if URL available, such as if an API is online or offline — url_online","text":"","code":"url_online(url)"},{"path":"https://usepa.github.io/EJAM-open/reference/url_online.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility - check if URL available, such as if an API is online or offline — url_online","text":"url URL check","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/url_online.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility - check if URL available, such as if an API is online or offline — url_online","text":"TRUE FALSE (NA internet connection seems available )","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats (DATA) data.frame of 100 percentiles and means — usastats","title":"usastats (DATA) data.frame of 100 percentiles and means — usastats","text":"data.frame 100 percentiles means (100 rows) USA overall, across locations (e.g., block groups blockgroupstats) set indicators percent low income. column one indicator (specifies percentile). similar lookup tables gdb FTP site EJScreen, except also data additional population subgroups. details table made, see source package files EJAM/data-raw/datacreate_usastats2.32_add_dsubgroups.R EJAM/data-raw/datacreate_usastats2.32.R See also statestats","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats (DATA) data.frame of 100 percentiles and means — usastats","text":"","code":"usastats"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"usastats (DATA) data.frame of 100 percentiles and means — usastats","text":"object class data.frame 102 rows 67 columns.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_means.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and residential population indicators — usastats_means","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and residential population indicators — usastats_means","text":"usastats_means - convenient way see US MEANS ENVIRONMENTAL residential population indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_means.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and residential population indicators — usastats_means","text":"","code":"usastats_means(   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_means - convenient way to see US MEANS of ENVIRONMENTAL and residential population indicators — usastats_means","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_query.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"usastats_query - convenient way see US mean, pctiles Envt Demog indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"","code":"usastats_query(   varnames = c(EJAM::names_e, EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"long list variables: usastats_query(intersect(EJAM::names_all_r,  names(EJAM::usastats)))","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_query - convenient way to see US mean, pctiles of Envt and Demog indicators in lookup table — usastats_query","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_queryd.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_queryd - convenient way to see US mean, pctiles of residential population indicators in lookup table — usastats_queryd","title":"usastats_queryd - convenient way to see US mean, pctiles of residential population indicators in lookup table — usastats_queryd","text":"usastats_queryd - convenient way see US mean, pctiles residential population indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_queryd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_queryd - convenient way to see US mean, pctiles of residential population indicators in lookup table — usastats_queryd","text":"","code":"usastats_queryd(   varnames = c(EJAM::names_d, EJAM::names_d_subgroups_nh),   PCTILES = NULL,   dig = 4 )"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_queryd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_queryd - convenient way to see US mean, pctiles of residential population indicators in lookup table — usastats_queryd","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_queryd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_queryd - convenient way to see US mean, pctiles of residential population indicators in lookup table — usastats_queryd","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_querye.html","id":null,"dir":"Reference","previous_headings":"","what":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"usastats_querye - convenient way see US mean, pctiles ENVIRONMENTAL indicators lookup table","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_querye.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"","code":"usastats_querye(varnames = EJAM::names_e, PCTILES = NULL, dig = 4)"},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_querye.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"varnames names columns lookup table, like \"proximity.rmp\" PCTILES vector percentiles 0-100 /\"mean\" dig many digits round ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/usastats_querye.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"usastats_querye - convenient way to see US mean, pctiles of ENVIRONMENTAL indicators in lookup table — usastats_querye","text":"","code":"# \\donttest{  usastats_querye()  #  data.frame where names_e are the names(),  #  means plus other percentiles, and there are other cols REGION PCTILE  avg.in.us                # This is a data.frame, 1 row, where colnames are indicators avg.in.us[names_e]          # subset is a data.frame! unlist(avg.in.us[names_e])  # to make it a vector  usastats_means()        # This is a matrix, with 1 col, and indicator names are rownames usastats_means(names_e)     # subset is a matrix        and indicator names are rownames usastats_means()[names_e, ] # subset is a named vector  and indicator names are  names  usastats_means() statestats_query()  statestats_query()[,names_d] statestats_query(varnames = names_d)  statestats_query()[,names_e] statestats_query(varnames = names_e)  statestats_query(varnames = names_d_subgroups) head(statestats_query(varnames = longlist))  ## in USA overall, see mean and key percentiles # for all demog and envt indicators usastats_query() # or statestats_query('us')  # can say us or US or USA or usa etc. usastats_query(PCTILES = 'mean') usastats_means() # same but nicer looking format in console usastats_means(dig=4)  # long list of variables: x = intersect(EJAM::names_all_r,  names(EJAM::usastats)) usastats_means(x)  usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_d)] usastats[!(usastats$PCTILE < 50), c(\"PCTILE\", names_e)]  ## in 1 state, see mean and key percentiles for all demog and envt indicators statestats_query('MD')  ## in 1 state, see mean and key percentiles for just demog indicators statestats_queryd('MD')  ## 1 indicator in 1 state, see a few key percentiles and mean statestats_query('MD','proximity.tsdf')  ## mean of 1 indicator for each state statestats_query(varnames = 'proximity.tsdf')  ## using full blockgroup dataset, not lookup tables of percentiles,  blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),    .SDcols= c(names_d, names_e)]  ##   see all total counts (not just US means),  ##   residential populations including subgroups,  ##   but not environmental indicators. t(blockgroupstats[, lapply(.SD, function(x) mean(x, na.rm=T)),     .SDcols= c(names_e, names_d)])  # }"},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"just way query map_headernames, info indicator variable used EJAM.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"","code":"varinfo(   var = map_headernames$rname,   info = colnames(map_headernames),   varnametype = \"rname\" )"},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"var vector variable names c(\"pctlowinc\", \"pm\") c(names_d, names_d_subgroups) (must found column map_headernames indicated varnametype parameter ). info types metadata/info needed, \"decimals\", \"long\", etc. among colnames map_headernames, alias like \"long\" allowed fixcolnames() varnametype optional. colname map_headernames use looking var, like \"rname\" \"api\" \"long\"","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"data.frame 1 rows, 1 columns, rowsnames var (indicators like \"pctmin\") colnames info (metadata   like \"decimals\") Cells table metadata type indicator var, many decimal places rounding displayed tables, etc. Results can character, numeric, etc. depending info requested","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"See map_headernames kind information available . variable appears twice+ var map_headernames, info returned 1st row . Developers may wish know functions, several exported: varinfo() varname2varcategory_ejam() varname2vartype_ejam() table_rounding_info() EJAM table_signif_round_x100() fixcolnames() fixcolnames_infer() EJAM fixcolnames2related() EJAM fixmapheadernamescolname() EJAM .numericish() EJAM varin_map_headernames() EJAM namesbyvarlist() EJAM names_whichlist() EJAM names_whichlist_multi() EJAM names_whichlist_multi_key() EJAM formula_varname() various related data objects like map_headernames namez","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/varinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata about a variable, like its type, short name, long definition, decimal places, etc. — varinfo","text":"","code":"varinfo(\"traffic.score\", \"decimals\") varinfo(names_d, \"long\") myvars <- c(names_d, names_d_subgroups, names_e) myinfo <- \"percentage\" cbind(  is.a.percentage = varinfo(myvars, myinfo) ) cbind(varinfo(names_all_r, \"pctile.\")) myinfo <- \"long\" cbind(varinfo(myvars, myinfo) ) table_rounding_info(names_e)  varinfo(  var = c(names_these, names_d_pctile),  info = c(  \"topic_root_term\", \"varcategory\", \"vartype\", \"percentage\", \"pctile.\", \"calculation_type\" ))  varinfo(names_all_r, c(\"varcategory\", \"varlist\", \"in_api\", \"in_bgcsv\"))  cbind(   namez$d,    names_d,    varinfo(names_d, \"varlist\"),    usavg = unlist(avg.in.us[names_d]),    usavg_varname = EJAM:::fixcolnames2related(names_d, \"usavg\"),    categ = varname2varcategory_ejam(names_d) )  names(map_headernames) t(varinfo(names_d[1]))"},{"path":"https://usepa.github.io/EJAM-open/reference/varin_map_headernames.html","id":null,"dir":"Reference","previous_headings":"","what":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","title":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","text":"utility check variable term map_headernames ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varin_map_headernames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","text":"","code":"varin_map_headernames(   query = \"lowinc\",   ignore.case = TRUE,   exact = FALSE,   cols_with_names = c(\"oldname\", \"apiname\", \"api_synonym\", \"acsname\", \"csvname\",     \"ejscreen_csv\", \"rname\", \"topic_root_term\", \"basevarname\", \"denominator\",     \"shortlabel\", \"longname\", \"description\", \"csvlongname\", \"api_description\",     \"acs_description\", \"varlist\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/varin_map_headernames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","text":"query variable name fragment (regular expression) look map_headernames columns, looking within just column names listed cols_with_names. vector query terms case returns one column per query term. ignore.case optional, like grepl() exact set TRUE exact matches cols_with_names optional, colnames map_headernames check ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varin_map_headernames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","text":"data.frame info query found many hits.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/varin_map_headernames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"utility to check if a variable or term is in map_headernames and where — varin_map_headernames","text":"","code":"varin_map_headernames(\"spanish\") varin_map_headernames(\"lowinc\") varin_map_headernames(\"pop\") varin_map_headernames(\"POV\", ignore.case = T) varin_map_headernames(\"POV\", ignore.case = F)  varin_map_headernames( \"traffic.score\", exact = T)  varin_map_headernames( \"traffic\" )  t(varinfo(\"traffic.score\",    info = c(\"oldname\",\"apiname\", \"acsname\" ,\"csvname\",    \"basevarname\", 'shortlabel', 'longname', 'varlist')))"},{"path":"https://usepa.github.io/EJAM-open/reference/varname2color_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - for color coding excel sheet columns — varname2color_ejam","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"Convert R variable name indicator appropriate color header row Excel","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2color_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"","code":"varname2color_ejam(varname, varnameinfo)"},{"path":"https://usepa.github.io/EJAM-open/reference/varname2color_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"varname things like us.avg.pctlowinc varnameinfo must left default currently","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2color_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - for color coding excel sheet columns — varname2color_ejam","text":"vector colors","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/varname2varcategory_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"helper function - given indicator names, look category ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2varcategory_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"","code":"varname2varcategory_ejam(varname, varnameinfo)"},{"path":"https://usepa.github.io/EJAM-open/reference/varname2varcategory_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"varname vector 1 names like \"pctlowinc\" unique(map_headernames$rname) varnameinfo data.frame info type variable","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2varcategory_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"vector size varname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2varcategory_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function - given indicator names, look up what category each is — varname2varcategory_ejam","text":"tells variable \"Demographic\" \"Environmental\" \"Summary Index\" aka \"EJ Index\" \"\" dput(unique(map_headernames$varcategory))","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/varname2vartype_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"helper function - given indicator names, look type ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2vartype_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"","code":"varname2vartype_ejam(varname, varnameinfo)"},{"path":"https://usepa.github.io/EJAM-open/reference/varname2vartype_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"varname vector 1 names varnameinfo data.frame info type variable","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2vartype_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"vector size varname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/varname2vartype_ejam.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function - given indicator names, look up what type each is — varname2vartype_ejam","text":"types things like raw data count indicator, average, percentile, etc.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/vartype_cat2color_ejam.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"Use color shading make spreadsheet easier use, grouping indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/vartype_cat2color_ejam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"","code":"vartype_cat2color_ejam(vartype = raw, varcategory = \"other\")"},{"path":"https://usepa.github.io/EJAM-open/reference/vartype_cat2color_ejam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"vartype must one found dput(unique(map_headernames$vartype)) like \"usratio\", \"stateratio\", \"usraw\", \"stateraw\", \"uspctile\", \"statepctile\", \"usavg\", \"stateavg\", etc. NA found. varcategory must one \"Demographic\"   \"Environmental\" \"Summary Index\" \"\" dput(unique(map_headernames$varcategory))","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/vartype_cat2color_ejam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - assign fill color to shade excel cells by indicator type and category — vartype_cat2color_ejam","text":"vector colors like c('lightblue', 'gray') matching length vartype","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/xls_formatting_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Format output of ejscreenapi functions, preparing it for Excel — xls_formatting_api","title":"Format output of ejscreenapi functions, preparing it for Excel — xls_formatting_api","text":"See EJAM code related also!","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_formatting_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format output of ejscreenapi functions, preparing it for Excel — xls_formatting_api","text":"","code":"xls_formatting_api(   df,   hyperlink_cols = NULL,   heatmap_colnames = NULL,   heatmap_cuts = c(80, 90, 95),   heatmap_colors = c(\"yellow\", \"orange\", \"red\") )"},{"path":"https://usepa.github.io/EJAM-open/reference/xls_formatting_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format output of ejscreenapi functions, preparing it for Excel — xls_formatting_api","text":"df data.frame, table batch buffer results hyperlink_cols vector names columns df get treated hyperlinks excel heatmap_colnames vector names columns df apply conditional formatting , coloring like heatmap. heatmap_cuts vector color names heatmap bins, length heatmap_cuts, first color >= 1st cutpoint, <2d, second color >=2d cutpoint <3d, etc. heatmap_colors vector colors corresponding cuts","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_formatting_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format output of ejscreenapi functions, preparing it for Excel — xls_formatting_api","text":"workbook via openxlsx::writeData() ready saved via openxlsx::saveWorkbook()","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2color.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - for color coding excel sheet columns — xls_varname2color","title":"helper function - for color coding excel sheet columns — xls_varname2color","text":"helper function - color coding excel sheet columns","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - for color coding excel sheet columns — xls_varname2color","text":"","code":"xls_varname2color(varname, varnameinfo)"},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - for color coding excel sheet columns — xls_varname2color","text":"varname things like avg.pctlowinc varnameinfo data.frame info type variable","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - for color coding excel sheet columns — xls_varname2color","text":"vector colors","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2vartype.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - given indicator names, look up what type each is — xls_varname2vartype","title":"helper function - given indicator names, look up what type each is — xls_varname2vartype","text":"helper function - given indicator names, look type ","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2vartype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - given indicator names, look up what type each is — xls_varname2vartype","text":"","code":"xls_varname2vartype(varname, varnameinfo)"},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2vartype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - given indicator names, look up what type each is — xls_varname2vartype","text":"varname vector 1 names varnameinfo data.frame info type variable, like map_headernames","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2vartype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - given indicator names, look up what type each is — xls_varname2vartype","text":"vector size varname","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_varname2vartype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"helper function - given indicator names, look up what type each is — xls_varname2vartype","text":"types things like raw data count indicator, average, percentile, etc. Variable names stored column map_headernames called newnames_ejscreenapi Types stored column map_headernames called jsondoc_vartype","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/xls_vartype2color.html","id":null,"dir":"Reference","previous_headings":"","what":"helper function - assign fill color to shade excel cells by indicator type — xls_vartype2color","title":"helper function - assign fill color to shade excel cells by indicator type — xls_vartype2color","text":"Use color shading make spreadsheet easier use, grouping indicators","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_vartype2color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"helper function - assign fill color to shade excel cells by indicator type — xls_vartype2color","text":"","code":"xls_vartype2color(vartype)"},{"path":"https://usepa.github.io/EJAM-open/reference/xls_vartype2color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"helper function - assign fill color to shade excel cells by indicator type — xls_vartype2color","text":"vartype must one found varnameinfo$jsondoc_vartype, ie \"percentile\", \"average\", \"raw data indicator\" NA found.","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/xls_vartype2color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"helper function - assign fill color to shade excel cells by indicator type — xls_vartype2color","text":"vector colors like c('lightorange', 'gray')","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/reference/x_anyother.html","id":null,"dir":"Reference","previous_headings":"","what":"for internal use — x_anyother","title":"for internal use — x_anyother","text":"internal use","code":""},{"path":"https://usepa.github.io/EJAM-open/reference/x_anyother.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"for internal use — x_anyother","text":"","code":"x_anyother"},{"path":"https://usepa.github.io/EJAM-open/reference/x_anyother.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"for internal use — x_anyother","text":"object class character length 141.","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"web-app-2-32-4","dir":"Changelog","previous_headings":"","what":"Web app","title":"EJAM v2.32.4 (June 2025)","text":"Fixed logo “” tab, app header, report header, app_ui, generate_html_header(), global_defaults_xyz, etc., updated testoutput files related ejam2report() ejam2excel() corrected spelling app documentation added better examples params one can pass via run_app()","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"rstudio-users-2-32-4","dir":"Changelog","previous_headings":"","what":"RStudio users","title":"EJAM v2.32.4 (June 2025)","text":"New summary table plot available via ejam2areafeatures() ejam2barplot_areafeatures(). Changes ejamit() provide information fraction residents certain features types areas live, schools, hospitals, Tribal areas, nonattainment areas, CJEST areas, etc. done via many changes batch.summarize(). added better examples params one can pass via run_app() documented get_global_defaults_or_user_options() global_or_param() fixed ejam2means() ejam2report() gets new params, build_community_report() added report_title = NULL, logo_path = NULL, logo_html = NULL. plot_barplot_ratios() gets new ylab caption params added warning url_countyhealthrankings() default year seems outdated unexported read_and_clean_points() unexported ejam2quantiles() removed reference obsolete testids_registry_id, replaced testinput_regid","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"technical--internal-changes-2-32-4","dir":"Changelog","previous_headings":"","what":"Technical / internal changes:","title":"EJAM v2.32.4 (June 2025)","text":"enabled testing web app functionality test_interactively() utility via test_local(), etc., just github action. (See /tests/setup.R now copy also app-functionality.R) drafted revisions ui server try allow run_app() params advanced tab global_defaults_xyz alter default method upload vs dropdown, e.g., output ss_choose_method_ui, default_ss_choose_method, default_upload_dropdown. included revising server ui use just EJAM:::global_or_param(“xyz”) golem::get_golem_options(“xyz”), non-shiny global defaults can work (e.g., logo path global_defaults_package$.community_report_logo_path) even outside shiny global_defaults_package happened via onattach global_defaults_shiny etc. happened. changed .onAttach() source(global_defaults_package) local = FALSE TRUE, might need revisited – note local = F local = T used .onAttach() versus get_global_defaults_or_user_options() server, ejam2excel() now figures value radius_or_buffer_description, ejam2excel() gets new parameters table_xls_from_ejam() uses improved buffer_desc_from_sitetype() now uses ejam2report() add report one tab. reorganized server code moving v1_demog_table() v1_envt_table long report section server file cleaned server code (eg, remove obsolete input$disconnect, remove obsolete community_download() report_community_download(), remove repetitive ejam2repor(), remove old EJScreen Batch Tool tab, used session = session param server calls updateXYZINPUT, etc.) allow shiny.testmode TRUE even set options used silent=TRUE cases try() added validate(“problem map_shapes_leaflet() function”) added validate(need(data_processed(), ‘Please run analysis see results.’))","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"summary-report-and-related-improvements-2-32-3","dir":"Changelog","previous_headings":"","what":"Summary report and related improvements","title":"EJAM v2.32.3 (May 2025)","text":"Added long list additional indicators summary report (subtable) outputs ejamit(), etc. New indicators include counts features (Superfund sites, schools, etc.), asthma cancer rates, overlaps certain types areas (Tribal, C JEST disadv., air nonattainment areas, etc.), flood risk, % health insurance, age groups (% 18), numerous indicators. can see expanded report via ejam2report() system.file(\"testdata/examples_of_output/testoutput_ejam2report_100pts_1miles.html\", package = \"EJAM\") Area square miles (area_sqmi column) added results, calculation size location (polygon FIPS unit circle around point) /better info number sites site ID lat/lon, now header Enabled customization summary table (R users) show fewer new additional indicators (long outputs doaggregate() ejamit() least inputs ejam2report() etc.). done via extratable_list_of_sections parameter ejam2report(), build_community_report(), community_report_template.Rmd, global parameter default_extratable_list_of_sections. may later enabled modifiable advanced tab. Easier set logo show summary report (EPA EJAM logo), global settings","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"other-web-app-improvements-2-32-3","dir":"Changelog","previous_headings":"","what":"Other web app improvements","title":"EJAM v2.32.3 (May 2025)","text":"types shapefiles can uploaded web app – json, geojson, kml, zip (gdb ), shp. Census units like States, Counties, Cities/Towns/CDPs can now selected menu searched typing part name, shiny module called fipspicker, feature enabled/disabled via global settings use_fipspicker default_choices_for_type_of_site_category. works current check alert users boundaries available, Start Analysis button clicked. Simpler UI “info” button file types formats allowed upload. Preview maps can show FIPS now, along shapefile polygons, points ejam2report() ejam2map() mapfast() now better able create maps polygon data, FIPS, one site vs sites, etc. progress bar added doaggregate() cases fips latlon","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"rstudio-user-related-or-internal-improvements-2-32-3","dir":"Changelog","previous_headings":"","what":"RStudio user-related or internal improvements","title":"EJAM v2.32.3 (May 2025)","text":"Clarified/explained 2025 status API urls CONTRIBUTING README, etc. Extensive additions improvements articles/vignettes, including documentation maintain repo, package, datasets. Articles/vignettes avoid hardcoded repo urls, use relative links within pkgdown site… unexported helper function EJAM:::repo_from_desc() added, avoids hardcoded repo url; download_latest_arrow_data avoids hardcoded repo url; links testdata files webapp UI avoid hardcoded repo url; simpler EJAM doc. ejamit() interactive mode (RStudio) now lets select type file upload sites specified parameters Many options starting values settings shiny app (general) can now set parameters passed run_app() function, overrides defaults. extensive changes global defaults vs user parameters allowed: replaced global.R; files renamed, put 1 folder, etc. System using user parameters passed run_app(), global defaults otherwise, many can changed advanced tab; may bookmarkable. default values now set shiny app general files called global_defaults_package.R, global_defaults_shiny_public.R, global_defaults_shiny.R (rather old files global.R manage-public-private.R). acs_bybg() examples added, obtain analyze new/custom indicators American Community Survey (ACS) data testdata() function improved, showing examples files used inputs ejamit(). testdata() files data objects cleaned /renamed consistently new ones added fips types, naics, sic, mact, etc. refactored names plot functions made consistent use “plot” singular “ratios” plural, ejam2boxplot_ratios(), boxplot_ratios(), etc. documentation fixed functions (e.g., ejam2map()) large datasets managed via download_latest_arrow_data() new arrow-related functions longer pins board aws . arrow datasets faster format used places, changes handling downloads etc. shape_from_fips() checks census API key available tidycensus pkg now imported, uses alt method (arcgis services) get boundaries necessary. Continued towards refactoring/consolidating code server vs functions, related creating summary report HTML vs download shiny app vs ejam2report(), functions report_residents_within_xyz(), renamed generate_demog_header generate_env_demog_header, etc. server uses ejamit() SHP latlon, cleanup server uses ejam2excel() now table_xls_format() server uses ejam2report() now obsolete report_community_download() etc. server uses shapefile_from_any() now server: removed use data_summarized reactive everywhere, use data_processed$… 2 new params doaggregate() , ejamit(), calctype_maxbg minbg bug fixes ejamit() wtdmeancols param, ejamit_compare_distances(), shapes_from_fips(), plot_ridgeline_ratios(), map_google(), mapfast() tracts vs blockgroups, many others unit tests added others updated/fixed misc helpers/utility added/updated/documented renamed .xlsx file map_headernames info reflect new version made edits/fixes reposissues() repoissues2() help record snapshot gh issues DESCRIPTION file now new field ejam_data_repo updated workflow action use latest version github-pages-deploy-action","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"ejam-v2322-february-2025","dir":"Changelog","previous_headings":"","what":"EJAM v2.32.2 (February 2025)","title":"EJAM v2.32.2 (February 2025)","text":"Revised language based executive orders, refer environmental residential population data analysis, rather EJ/EJScreen/etc. Revised web links based EJScreen website offline edits made considering github repositories gh pages may change location go offline Updated FRS datasets, pulled 2/12/25 Remove screenshots user guide document","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"bug-fixes-2-32-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"EJAM v2.32.1-EJAM (February 2025)","text":"Fixed metadata warning shown loading arrow datasets Fixed typos languages spoken indicators labels Improved labeling legibility barplot ratios used reports downloads Fixed caps # points selected, analyzed","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"enhancements-2-32-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"EJAM v2.32.1-EJAM (February 2025)","text":"Expanded tables indicators shown community report Languages spoken home, health, community, age Added ratio columns community report advanced setting heatmap highlighting optional Incorporated shinytest2 tests app-based functionality testing Implemented mapping points ejam2excel()","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"experimental-enhancements-2-32-1","dir":"Changelog","previous_headings":"","what":"Experimental enhancements","title":"EJAM v2.32.1-EJAM (February 2025)","text":"Added draft plumber API ejam2excel() Added widget advanced settings proxistat() helps build proximity indicator Zipcodes vignette","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"other-2-32-1","dir":"Changelog","previous_headings":"","what":"Other","title":"EJAM v2.32.1-EJAM (February 2025)","text":"Refactored community report functions, app_server.R script","code":""},{"path":[]},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"new-features--improvements-2-32","dir":"Changelog","previous_headings":"","what":"New Features + Improvements","title":"EJAM v2.32-EJAM (January 2025)","text":"Enabled automatic download latest arrow data ejamdata repo Incorporated public-internal toggles hide specific UI elements yet applicable public version EJAM Made improvements maps polygons Added shapefile upload instructions","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"bug-fixes-and-enhancements-2-32","dir":"Changelog","previous_headings":"","what":"Bug Fixes and Enhancements","title":"EJAM v2.32-EJAM (January 2025)","text":"Added leaflet.extras2 dependency Imports, instead Suggests, necessary new installations","code":""},{"path":"https://usepa.github.io/EJAM-open/news/index.html","id":"ejam-v2320","dir":"Changelog","previous_headings":"","what":"EJAM v2.32.0","title":"EJAM v2.32.0","text":"clone EJAM-open github repository install using installation instructions","code":""}]
