% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapes_from_fips.R
\name{shapes_from_fips}
\alias{shapes_from_fips}
\title{Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups}
\usage{
shapes_from_fips(
  fips,
  myservice_blockgroup =
    "https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/5/query",
  myservice_tract =
    "https://services.arcgis.com/P3ePLMYs2RVChkJx/ArcGIS/rest/services/USA_Boundaries_2022/FeatureServer/4/query",
  myservice_place = "tiger",
  myservice_county = "cartographic"
)
}
\arguments{
\item{fips}{vector of one or more Census FIPS codes such as from \code{\link[=name2fips]{name2fips()}}}

\item{myservice_blockgroup}{URL of feature service to get shapes from,
or "cartographic" or "tiger" to use approx or slow/accurate bounds from tidycensus and tigris packages.}

\item{myservice_tract}{URL of feature service to get shapes from,
or "cartographic" or "tiger" to use approx or slow/accurate bounds from tidycensus and tigris packages.}

\item{myservice_place}{only "tiger" is implemented}

\item{myservice_county}{URL of feature service to get shapes from,
or "cartographic" or "tiger" to use approx or slow/accurate bounds from tidycensus and tigris packages.
Note State bounds are built into this package as data so do not need to be downloaded from a service.}
}
\value{
spatial data.frame with one row per fips (assuming any fips are valid)
}
\description{
Download shapefiles based on FIPS codes of States, Counties, Cities/CDPs, Tracts, or Blockgroups
}
\details{
when using tigris package ("tiger" as service-related parameter here),
it uses the year that is the default in the version of the tigris package that is installed.
You can use options(tigris_year = 2022) for example to specify it explicitly.
This function also sets options(tigris_use_cache = TRUE), but each individual shapes_xyz_from_ function may not specify.
}
\examples{
 # shp2 = shapes_from_fips("10001", "10005")

 fipslist = list(
  statefips = name2fips(c('DE', 'RI')),
  countyfips = fips_counties_from_state_abbrev(c('DE')),
  cityfips = name2fips(c('chelsea,MA', 'st. john the baptist parish, LA')),
  tractfips = substr(blockgroupstats$bgfips[300:301], 1, 12),
  bgfips = blockgroupstats$bgfips[300:301]
  )
  shp <- list()
  \donttest{
   for (i in seq_along(fipslist)) {
    shp[[i]] <- shapes_from_fips(fipslist[[i]])
    print(shp[[i]])
    # mapfast(shp[[i]])
   }
  }


}
